{
  "version": 3,
  "sources": ["../../../src/commands/push_v2/definition.js"],
  "sourcesContent": ["import push from './index.js';\n\nconst [_node, _bin, ...raw_args] = process.argv;\n\nconst definition = {\n  description: 'Deploy your Joystick app using Push.',\n  args: {},\n  options: {\n    domain: {\n      flags: {\n        '-d': {\n          set: !!raw_args.includes('-d'),\n          value: !!raw_args.includes('-d') && raw_args[raw_args.indexOf('-d') + 1],\n          parent: 'push',\n        },\n        '--domain': {\n          set: !!raw_args.includes('--domain'),\n          value: !!raw_args.includes('--domain') && raw_args[raw_args.indexOf('--domain') + 1],\n          parent: 'push',\n        },\n      },\n      description: 'The domain of the app Push should deploy to.',      \n    },\n    environment: {\n     flags: {\n       '-e': {\n         set: !!raw_args.includes('-e'),\n         value: !!raw_args.includes('-e') && raw_args[raw_args.indexOf('-e') + 1],\n         parent: 'push',\n       },\n       '--environment': {\n         set: !!raw_args.includes('--environment'),\n         value: !!raw_args.includes('--environment') && raw_args[raw_args.indexOf('--environment') + 1],\n         parent: 'push',\n       },\n     },\n     description: 'The value you want to use for NODE_ENV in the deployed app (e.g., staging or production). Default is production.',\n    },\n    push_server: {\n     flags: {\n       '-s': {\n         set: !!raw_args.includes('-s'),\n         value: !!raw_args.includes('-s') && raw_args[raw_args.indexOf('-s') + 1],\n         parent: 'push',\n       },\n       '--server': {\n         set: !!raw_args.includes('--server'),\n         value: !!raw_args.includes('--server') && raw_args[raw_args.indexOf('--server') + 1],\n         parent: 'push',\n       },\n     },\n     description: 'The Push provision server to target (development or production).',\n    },\n    deployment_token: {\n      flags: {\n        '-t': {\n          set: !!raw_args.includes('-t'),\n          value: !!raw_args.includes('-t') && raw_args[raw_args.indexOf('-t') + 1],\n          parent: 'push',\n        },\n        '--token': {\n          set: !!raw_args.includes('--token'),\n          value: !!raw_args.includes('--token') && raw_args[raw_args.indexOf('--token') + 1],\n          parent: 'push',\n        },\n      },\n      description: 'The deployment token for your Push user account.',\n     },    \n  },\n  command: push,\n};\n\nexport default definition;\n"],
  "mappings": "AAAA,OAAOA,MAAU,aAEjB,KAAM,CAACC,EAAOC,EAAM,GAAGC,CAAQ,EAAI,QAAQ,KAErCC,EAAa,CACjB,YAAa,uCACb,KAAM,CAAC,EACP,QAAS,CACP,OAAQ,CACN,MAAO,CACL,KAAM,CACJ,IAAK,CAAC,CAACD,EAAS,SAAS,IAAI,EAC7B,MAAO,CAAC,CAACA,EAAS,SAAS,IAAI,GAAKA,EAASA,EAAS,QAAQ,IAAI,EAAI,CAAC,EACvE,OAAQ,MACV,EACA,WAAY,CACV,IAAK,CAAC,CAACA,EAAS,SAAS,UAAU,EACnC,MAAO,CAAC,CAACA,EAAS,SAAS,UAAU,GAAKA,EAASA,EAAS,QAAQ,UAAU,EAAI,CAAC,EACnF,OAAQ,MACV,CACF,EACA,YAAa,8CACf,EACA,YAAa,CACZ,MAAO,CACL,KAAM,CACJ,IAAK,CAAC,CAACA,EAAS,SAAS,IAAI,EAC7B,MAAO,CAAC,CAACA,EAAS,SAAS,IAAI,GAAKA,EAASA,EAAS,QAAQ,IAAI,EAAI,CAAC,EACvE,OAAQ,MACV,EACA,gBAAiB,CACf,IAAK,CAAC,CAACA,EAAS,SAAS,eAAe,EACxC,MAAO,CAAC,CAACA,EAAS,SAAS,eAAe,GAAKA,EAASA,EAAS,QAAQ,eAAe,EAAI,CAAC,EAC7F,OAAQ,MACV,CACF,EACA,YAAa,kHACd,EACA,YAAa,CACZ,MAAO,CACL,KAAM,CACJ,IAAK,CAAC,CAACA,EAAS,SAAS,IAAI,EAC7B,MAAO,CAAC,CAACA,EAAS,SAAS,IAAI,GAAKA,EAASA,EAAS,QAAQ,IAAI,EAAI,CAAC,EACvE,OAAQ,MACV,EACA,WAAY,CACV,IAAK,CAAC,CAACA,EAAS,SAAS,UAAU,EACnC,MAAO,CAAC,CAACA,EAAS,SAAS,UAAU,GAAKA,EAASA,EAAS,QAAQ,UAAU,EAAI,CAAC,EACnF,OAAQ,MACV,CACF,EACA,YAAa,kEACd,EACA,iBAAkB,CAChB,MAAO,CACL,KAAM,CACJ,IAAK,CAAC,CAACA,EAAS,SAAS,IAAI,EAC7B,MAAO,CAAC,CAACA,EAAS,SAAS,IAAI,GAAKA,EAASA,EAAS,QAAQ,IAAI,EAAI,CAAC,EACvE,OAAQ,MACV,EACA,UAAW,CACT,IAAK,CAAC,CAACA,EAAS,SAAS,SAAS,EAClC,MAAO,CAAC,CAACA,EAAS,SAAS,SAAS,GAAKA,EAASA,EAAS,QAAQ,SAAS,EAAI,CAAC,EACjF,OAAQ,MACV,CACF,EACA,YAAa,kDACd,CACH,EACA,QAASH,CACX,EAEA,IAAOK,EAAQD",
  "names": ["push", "_node", "_bin", "raw_args", "definition", "definition_default"]
}
