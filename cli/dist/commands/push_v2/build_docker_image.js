import{exec as u}from"child_process";import i from"path";import{fileURLToPath as $}from"url";import"https";import g from"fs";import h from"os";import"tar";import"adm-zip";const y=$(import.meta.url),c=i.dirname(y),O=i.join(h.homedir(),".joystick","docker"),D=(t="",a="",{apt_deps:s=[],snap_deps:d=[],npm_deps:l=[]}={})=>new Promise(async(m,r)=>{if(!check_docker_installation()){process.loader.print("Push requires Docker to be installed on your machine. Downloading...");try{await get_docker_binary(),process.loader.print("Docker installed!")}catch(o){r(new Error(`Failed to download Docker binary: ${o.message}`));return}}process.loader.print("Building Docker image for deployment...");const p=get_docker_binary_path(),e=i.join(c,"Dockerfile");if(!g.existsSync(e)){r(new Error(`Dockerfile not found at ${e}`));return}const f=[`CUSTOM_APT_DEPS=${s.join(" ")}`,`CUSTOM_SNAP_DEPS=${d.join(" ")}`,`GLOBAL_NPM_PACKAGES=${l.join(" ")}`].map(o=>`--build-arg ${o}`).join(" "),_=`"${p}" build ${f} -t ${t} -f "${e}" "${a||c}"`;u(_,(o,k,n)=>{if(o){console.error(`Error building Docker image: ${o.message}`),r(o);return}n&&console.error(`Docker build stderr: ${n}`),process.loader.print(k),process.loader.print(`Successfully built Docker image: ${t}`),m()})});var U=D;export{U as default};
