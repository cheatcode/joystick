import{exec as m,execSync as p}from"child_process";import t from"path";import{fileURLToPath as k}from"url";import c from"fs";const g=k(import.meta.url),_=t.dirname(g),$=()=>{try{return p("docker --version",{stdio:"ignore"}),!0}catch{return!1}},b=(e="",i="",{apt_deps:d=[],npm_deps:l=[]}={})=>new Promise((a,o)=>{if(!$()){process.loader.print("Push requires Docker to deploy your app. Visit https://docs.docker.com/get-started/get-docker/ to download docker for your OS."),o(new Error("Docker is not installed or not in the PATH"));return}process.loader.print("Building Docker image for deployment...");const n=t.join(_,"Dockerfile");if(!c.existsSync(n)){o(new Error(`Dockerfile not found at ${n}`));return}if(!i||!c.existsSync(t.join(i,".build"))){o(new Error("Invalid context path or .build directory not found"));return}const u=`docker build ${[`CUSTOM_APT_DEPS=${d.join(" ")}`,`GLOBAL_NPM_PACKAGES=${l.join(" ")}`].map(r=>`--build-arg ${r}`).join(" ")} -t ${e} -f "${n}" "${i}"`;m(u,(r,f,s)=>{if(r){console.error(`Error building Docker image: ${r.message}`),o(r);return}s&&console.error(`Docker build stderr: ${s}`),process.loader.print(f),process.loader.print(`Successfully built Docker image: ${e}`),a()})});var E=b;export{E as default};
