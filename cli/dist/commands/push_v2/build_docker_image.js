import{exec as f,execSync as m}from"child_process";import s from"path";import{fileURLToPath as p}from"url";import c from"fs";const k=p(import.meta.url),g=s.dirname(k),_=()=>{try{return m("docker --version",{stdio:"ignore"}),!0}catch{return!1}},$=(e="",i="",{apt_deps:d=[],npm_deps:l=[]}={})=>new Promise((a,r)=>{if(!_()){process.loader.print("Push requires Docker to deploy your app. Please visit https://docs.docker.com/get-started/get-docker/ to download Docker for your OS."),r(new Error("Docker is not installed or not in the PATH"));return}process.loader.print("Building Docker image for deployment...");const t=s.join(g,"Dockerfile");if(!c.existsSync(t)){r(new Error(`Dockerfile not found at ${t}`));return}if(!i||!c.existsSync(s.join(i,".build"))){r(new Error("Invalid context path or .build directory not found"));return}const u=`docker build --quiet ${[`CUSTOM_APT_DEPS=${d.join(" ")}`,`GLOBAL_NPM_PACKAGES=${l.join(" ")}`,`CACHEBUST=${Date.now()}`].map(o=>`--build-arg ${o}`).join(" ")} -t ${e} -f "${t}" "${i}"`;f(u,{stdio:["ignore","pipe","pipe"]},(o,y,n)=>{if(o){console.error(`Error building Docker image: ${o.message}`),r(o);return}n.trim()&&!n.includes("Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them")&&console.error(`Docker build stderr: ${n}`),process.loader.print(`Successfully built Docker image: ${e}`),a()})});var w=$;export{w as default};
//# sourceMappingURL=build_docker_image.js.map
