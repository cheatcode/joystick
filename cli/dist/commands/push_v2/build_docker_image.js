import{exec as f,execSync as k}from"child_process";import n from"path";import{fileURLToPath as _}from"url";import g from"fs";const $=_(import.meta.url),c=n.dirname($),D=()=>{try{return k("docker --version",{stdio:"ignore"}),!0}catch{return!1}},P=(o="",s="",{apt_deps:d=[],snap_deps:l=[],npm_deps:a=[]}={})=>new Promise((u,e)=>{if(!D()){process.loader.print("Push requires Docker to deploy your app. Visit https://docs.docker.com/get-started/get-docker/ to download docker for your OS."),e(new Error("Docker is not installed or not in the PATH"));return}process.loader.print("Building Docker image for deployment...");const i=n.join(c,"Dockerfile");if(!g.existsSync(i)){e(new Error(`Dockerfile not found at ${i}`));return}const m=`docker build ${[`CUSTOM_APT_DEPS=${d.join(" ")}`,`CUSTOM_SNAP_DEPS=${l.join(" ")}`,`GLOBAL_NPM_PACKAGES=${a.join(" ")}`].map(r=>`--build-arg ${r}`).join(" ")} -t ${o} -f "${i}" "${s||c}"`;f(m,(r,p,t)=>{if(r){console.error(`Error building Docker image: ${r.message}`),e(r);return}t&&console.error(`Docker build stderr: ${t}`),process.loader.print(p),process.loader.print(`Successfully built Docker image: ${o}`),u()})});var E=P;export{E as default};
