{
  "version": 3,
  "sources": ["../../../src/commands/push_v2/upload_build_to_push.js"],
  "sourcesContent": ["import fetch from \"node-fetch\";\nimport FormData from \"form-data\";\nimport fs from \"fs\";\nimport _ from 'lodash';\n\nconst { readFile } = fs.promises;\n\nconst upload_build_to_push = async (options = {}) => {\n  const form_data = new FormData();\n\n  form_data.append(\n    \"version_tar\",\n    await readFile(`.build/build.encrypted.tar.gz`),\n    `${options?.build_timestamp}.tar.gz`\n  );\n\n  form_data.append(\"build_timestamp\", options?.build_timestamp);\n  form_data.append(\"domain\", options?.deployment?.domain);\n  form_data.append(\"deployment_id\", options?.deployment?._id);\n\n  return fetch(`${options?.push_domain}/api/deploy`, {\n   method: \"POST\",\n   headers: {\n     ...form_data.getHeaders(),\n     \"x-push-deployment-token\": options?.deployment_token,\n   },\n   body: form_data,\n  }).then(async (response) => {\n   const data = await response.json();\n   return data?.data;\n  }).catch((error) => {\n    console.warn(error);\n  });\n};\n\nexport default upload_build_to_push;"],
  "mappings": "AAAA,OAAOA,MAAW,aAClB,OAAOC,MAAc,YACrB,OAAOC,MAAQ,KACf,MAAc,SAEd,KAAM,CAAE,SAAAC,CAAS,EAAID,EAAG,SAElBE,EAAuB,MAAOC,EAAU,CAAC,IAAM,CACnD,MAAMC,EAAY,IAAIL,EAEtB,OAAAK,EAAU,OACR,cACA,MAAMH,EAAS,+BAA+B,EAC9C,GAAGE,GAAS,eAAe,SAC7B,EAEAC,EAAU,OAAO,kBAAmBD,GAAS,eAAe,EAC5DC,EAAU,OAAO,SAAUD,GAAS,YAAY,MAAM,EACtDC,EAAU,OAAO,gBAAiBD,GAAS,YAAY,GAAG,EAEnDL,EAAM,GAAGK,GAAS,WAAW,cAAe,CAClD,OAAQ,OACR,QAAS,CACP,GAAGC,EAAU,WAAW,EACxB,0BAA2BD,GAAS,gBACtC,EACA,KAAMC,CACP,CAAC,EAAE,KAAK,MAAOC,IACD,MAAMA,EAAS,KAAK,IACpB,IACb,EAAE,MAAOC,GAAU,CAClB,QAAQ,KAAKA,CAAK,CACpB,CAAC,CACH,EAEA,IAAOC,EAAQL",
  "names": ["fetch", "FormData", "fs", "readFile", "upload_build_to_push", "options", "form_data", "response", "error", "upload_build_to_push_default"]
}
