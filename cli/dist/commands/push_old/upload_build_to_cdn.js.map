{
  "version": 3,
  "sources": ["../../../src/commands/push_old/upload_build_to_cdn.js"],
  "sourcesContent": ["import fetch from \"node-fetch\";\nimport FormData from \"form-data\";\nimport fs from \"fs\";\nimport _ from 'lodash';\nimport cdn_mirrors from './cdn_mirrors.js';\n\nconst { readFile } = fs.promises;\n\nconst get_first_available_mirror = async () => {\n  const results = (await Promise.allSettled(cdn_mirrors?.map(async (mirror) => {\n    const controller = new AbortController();\n    setTimeout(() => controller.abort(), 2000);\n    \n    const result = await fetch(`${mirror}/api/ping`, { signal: controller.signal }).catch((error) => {\n      return { status: 503 };\n    });\n\n    return {\n      mirror,\n      status: result.status,\n    };\n  })))?.map((result) => {\n    return result.value;\n  });\n\n  return _.orderBy(results, ['status', 'mirror'])[0];\n};\n\nconst upload_build_to_cdn = async (build_timestamp = '', deployment = {}, session_token = '') => {\n  const first_available_mirror = await get_first_available_mirror();\n  const form_data = new FormData();\n\n  form_data.append(\n    \"version_tar\",\n    await readFile(`.build/build.encrypted.tar.gz`),\n    `${build_timestamp}.tar.gz`\n  );\n\n  form_data.append(\"build_timestamp\", build_timestamp);\n  form_data.append(\"domain\", deployment?.domain);\n  form_data.append(\"deployment_id\", deployment?._id);\n\n  return fetch(`${first_available_mirror?.mirror}/api/versions`, {\n   method: \"POST\",\n   headers: {\n     ...form_data.getHeaders(),\n     \"x-push-session-token\": session_token,\n   },\n   body: form_data,\n  }).then(async (response) => {\n   const data = await response.json();\n   return data?.data;\n  }).catch((error) => {\n    console.warn(error);\n  });\n};\n\nexport default upload_build_to_cdn;\n\n"],
  "mappings": "AAAA,OAAOA,MAAW,aAClB,OAAOC,MAAc,YACrB,OAAOC,MAAQ,KACf,OAAOC,MAAO,SACd,OAAOC,MAAiB,mBAExB,KAAM,CAAE,SAAAC,CAAS,EAAIH,EAAG,SAElBI,EAA6B,SAAY,CAC7C,MAAMC,GAAW,MAAM,QAAQ,WAAWH,GAAa,IAAI,MAAOI,GAAW,CAC3E,MAAMC,EAAa,IAAI,gBACvB,WAAW,IAAMA,EAAW,MAAM,EAAG,GAAI,EAEzC,MAAMC,EAAS,MAAMV,EAAM,GAAGQ,CAAM,YAAa,CAAE,OAAQC,EAAW,MAAO,CAAC,EAAE,MAAOE,IAC9E,CAAE,OAAQ,GAAI,EACtB,EAED,MAAO,CACL,OAAAH,EACA,OAAQE,EAAO,MACjB,CACF,CAAC,CAAC,IAAI,IAAKA,GACFA,EAAO,KACf,EAED,OAAOP,EAAE,QAAQI,EAAS,CAAC,SAAU,QAAQ,CAAC,EAAE,CAAC,CACnD,EAEMK,EAAsB,MAAOC,EAAkB,GAAIC,EAAa,CAAC,EAAGC,EAAgB,KAAO,CAC/F,MAAMC,EAAyB,MAAMV,EAA2B,EAC1DW,EAAY,IAAIhB,EAEtB,OAAAgB,EAAU,OACR,cACA,MAAMZ,EAAS,+BAA+B,EAC9C,GAAGQ,CAAe,SACpB,EAEAI,EAAU,OAAO,kBAAmBJ,CAAe,EACnDI,EAAU,OAAO,SAAUH,GAAY,MAAM,EAC7CG,EAAU,OAAO,gBAAiBH,GAAY,GAAG,EAE1Cd,EAAM,GAAGgB,GAAwB,MAAM,gBAAiB,CAC9D,OAAQ,OACR,QAAS,CACP,GAAGC,EAAU,WAAW,EACxB,uBAAwBF,CAC1B,EACA,KAAME,CACP,CAAC,EAAE,KAAK,MAAOC,IACD,MAAMA,EAAS,KAAK,IACpB,IACb,EAAE,MAAOP,GAAU,CAClB,QAAQ,KAAKA,CAAK,CACpB,CAAC,CACH,EAEA,IAAOQ,EAAQP",
  "names": ["fetch", "FormData", "fs", "_", "cdn_mirrors", "readFile", "get_first_available_mirror", "results", "mirror", "controller", "result", "error", "upload_build_to_cdn", "build_timestamp", "deployment", "session_token", "first_available_mirror", "form_data", "response", "upload_build_to_cdn_default"]
}
