{
  "version": 3,
  "sources": ["../../../src/commands/build/definition.js"],
  "sourcesContent": ["import build from './index.js';\n\nconst [_node, _bin, ...raw_args] = process.argv;\n\nconst definition = {\n  description: 'Build an existing Joystick app.',\n  args: {},\n  options: {\n    environment: {\n      flags: {\n        '-e': {\n          set: !!raw_args.includes('-e'),\n          value: !!raw_args.includes('-e') && raw_args[raw_args.indexOf('-e') + 1],\n          parent: 'build',\n        },\n        '--environment': {\n          set: !!raw_args.includes('--environment'),\n          value: !!raw_args.includes('--environment') && raw_args[raw_args.indexOf('--environment') + 1],\n          parent: 'build',\n        },\n      },\n      description: 'The NODE_ENV you want to use for your build (default: production).',\n    },\n    outputPath: {\n      flags: {\n        '-o': {\n          set: !!raw_args.includes('-o'),\n          value: !!raw_args.includes('-o') && raw_args[raw_args.indexOf('-o') + 1],\n          parent: 'build',\n        },\n        '--outputPath': {\n          set: !!raw_args.includes('--outputPath'),\n          value: !!raw_args.includes('--outputPath') && raw_args[raw_args.indexOf('--outputPath') + 1],\n          parent: 'build',\n        },\n      },\n      description: 'The path you want to build the output to.',\n    },\n    type: {\n      flags: {\n        '-t': {\n          set: !!raw_args.includes('-t'),\n          value: !!raw_args.includes('-t') && raw_args[raw_args.indexOf('-t') + 1],\n          parent: 'build',\n        },\n        '--type': {\n          set: !!raw_args.includes('--type'),\n          value: !!raw_args.includes('--type') && raw_args[raw_args.indexOf('--type') + 1],\n          parent: 'build',\n        },\n      },\n      description: 'The type of build you want to generate (tar or folder).',\n    },\n  },\n  command: build,\n};\n\nexport default definition;\n"],
  "mappings": "AAAA,OAAOA,MAAW,aAElB,KAAM,CAACC,EAAOC,EAAM,GAAGC,CAAQ,EAAI,QAAQ,KAErCC,EAAa,CACjB,YAAa,kCACb,KAAM,CAAC,EACP,QAAS,CACP,YAAa,CACX,MAAO,CACL,KAAM,CACJ,IAAK,CAAC,CAACD,EAAS,SAAS,IAAI,EAC7B,MAAO,CAAC,CAACA,EAAS,SAAS,IAAI,GAAKA,EAASA,EAAS,QAAQ,IAAI,EAAI,CAAC,EACvE,OAAQ,OACV,EACA,gBAAiB,CACf,IAAK,CAAC,CAACA,EAAS,SAAS,eAAe,EACxC,MAAO,CAAC,CAACA,EAAS,SAAS,eAAe,GAAKA,EAASA,EAAS,QAAQ,eAAe,EAAI,CAAC,EAC7F,OAAQ,OACV,CACF,EACA,YAAa,oEACf,EACA,WAAY,CACV,MAAO,CACL,KAAM,CACJ,IAAK,CAAC,CAACA,EAAS,SAAS,IAAI,EAC7B,MAAO,CAAC,CAACA,EAAS,SAAS,IAAI,GAAKA,EAASA,EAAS,QAAQ,IAAI,EAAI,CAAC,EACvE,OAAQ,OACV,EACA,eAAgB,CACd,IAAK,CAAC,CAACA,EAAS,SAAS,cAAc,EACvC,MAAO,CAAC,CAACA,EAAS,SAAS,cAAc,GAAKA,EAASA,EAAS,QAAQ,cAAc,EAAI,CAAC,EAC3F,OAAQ,OACV,CACF,EACA,YAAa,2CACf,EACA,KAAM,CACJ,MAAO,CACL,KAAM,CACJ,IAAK,CAAC,CAACA,EAAS,SAAS,IAAI,EAC7B,MAAO,CAAC,CAACA,EAAS,SAAS,IAAI,GAAKA,EAASA,EAAS,QAAQ,IAAI,EAAI,CAAC,EACvE,OAAQ,OACV,EACA,SAAU,CACR,IAAK,CAAC,CAACA,EAAS,SAAS,QAAQ,EACjC,MAAO,CAAC,CAACA,EAAS,SAAS,QAAQ,GAAKA,EAASA,EAAS,QAAQ,QAAQ,EAAI,CAAC,EAC/E,OAAQ,OACV,CACF,EACA,YAAa,yDACf,CACF,EACA,QAASH,CACX,EAEA,IAAOK,EAAQD",
  "names": ["build", "_node", "_bin", "raw_args", "definition", "definition_default"]
}
