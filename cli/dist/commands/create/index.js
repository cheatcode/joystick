import m from"fs";import u from"chalk";import y from"child_process";import p from"util";import a from"../../lib/cli_log.js";import f from"../../lib/loader.js";import r from"../../lib/replace_in_files.js";const{rm:g}=m.promises,o=p.promisify(y.exec),j=async(e={},t={})=>{process.loader=new f,process.loader.print("Creating app..."),t?.release&&!["production","canary"].includes(t.release)&&(a("Must pass either production or canary for --release.",{level:"danger",docs:"https://docs.cheatcode.co/joystick/cli/create"}),process.exit(0));try{const c=await o(`git clone --verbose https://github.com/cheatcode/joystick-default-template.git ${e.name}`);console.log("Git clone stdout:",c.stdout),console.log("Git clone stderr:",c.stderr);const l=await o("git --version");console.log("Git version:",l.stdout);try{const{stdout:s}=await o(`find ./${e.name} -type f | wc -l`);console.log("Total files cloned:",s.trim());const i=await o(`find ./${e.name} -type f`);console.log("All cloned files:",i.stdout);const n=await o(`ls -la ./${e.name}/tests || echo "tests directory not found"`);console.log("Tests directory contents:",n.stdout);const d=await o(`find ./${e.name}/ui -type d`);console.log("UI directory structure:",d.stdout)}catch(s){console.log("Debug check failed:",s.message)}await g(`./${e.name}/.git`,{recursive:!0,force:!0}),t?.release==="canary"&&(await r(`${process.cwd()}/${e?.name}`,{match:[/\.js$/],exclude:[/node_modules/],replace_regex:/(@joystick.js\/node)(?!-)/g,replace_with:"@joystick.js/node-canary"}),await r(`${process.cwd()}/${e?.name}`,{match:[/\.js$/],exclude:[/node_modules/],replace_regex:/(@joystick.js\/ui)(?!-)/g,replace_with:"@joystick.js/ui-canary"})),setTimeout(async()=>{process.loader.print("Installing dependencies..."),await o(`cd ./${e?.name} && npm install --save @joystick.js/ui${t?.release==="canary"?"-canary":""}@latest @joystick.js/node${t?.release==="canary"?"-canary":""}@latest @joystick.js/test${t?.release==="canary"?"-canary":""}@latest`),console.log(`${u.green("Project created! To get started, run:")}
cd ${e?.name} && joystick${t?.release==="canary"?"-canary":""} start`)},1e3)}catch(c){a(`Failed to create project: ${c.message}`,{level:"danger"}),process.exit(1)}};var b=j;export{b as default};
//# sourceMappingURL=index.js.map
