import i from"fs";import l from"chalk";import n from"child_process";import d from"util";import r from"../../lib/cli_log.js";import m from"../../lib/loader.js";import s from"../../lib/replace_in_files.js";const{rm:p}=i.promises,c=d.promisify(n.exec),y=async(e={},t={})=>{process.loader=new m,process.loader.print("Creating app..."),t?.release&&!["production","canary"].includes(t.release)&&(r("Must pass either production or canary for --release.",{level:"danger",docs:"https://docs.cheatcode.co/joystick/cli/create"}),process.exit(0));try{await c(`git clone https://github.com/cheatcode/joystick-default-template.git ${e.name}`);try{const{stdout:a}=await c(`find ./${e.name} -type f | head -20`);console.log("Cloned files:",a);const o=await c(`ls -la ./${e.name}/tests || echo "tests directory not found"`);console.log("Tests directory contents:",o.stdout)}catch(a){console.log("Debug check failed:",a.message)}await p(`./${e.name}/.git`,{recursive:!0,force:!0}),t?.release==="canary"&&(await s(`${process.cwd()}/${e?.name}`,{match:[/\.js$/],exclude:[/node_modules/],replace_regex:/(@joystick.js\/node)(?!-)/g,replace_with:"@joystick.js/node-canary"}),await s(`${process.cwd()}/${e?.name}`,{match:[/\.js$/],exclude:[/node_modules/],replace_regex:/(@joystick.js\/ui)(?!-)/g,replace_with:"@joystick.js/ui-canary"})),setTimeout(async()=>{process.loader.print("Installing dependencies..."),await c(`cd ./${e?.name} && npm install --save @joystick.js/ui${t?.release==="canary"?"-canary":""}@latest @joystick.js/node${t?.release==="canary"?"-canary":""}@latest @joystick.js/test${t?.release==="canary"?"-canary":""}@latest`),console.log(`${l.green("Project created! To get started, run:")}
cd ${e?.name} && joystick${t?.release==="canary"?"-canary":""} start`)},1e3)}catch(a){r(`Failed to create project: ${a.message}`,{level:"danger"}),process.exit(1)}};var w=y;export{w as default};
//# sourceMappingURL=index.js.map
