{
  "version": 3,
  "sources": ["../../../src/commands/create/index.js"],
  "sourcesContent": ["import fs from 'fs';\nimport chalk from 'chalk';\nimport child_process from 'child_process';\nimport util from 'util';\nimport cli_log from '../../lib/cli_log.js';\nimport Loader from \"../../lib/loader.js\";\nimport replace_in_files from '../../lib/replace_in_files.js';\n\nconst { rm } = fs.promises;\nconst exec = util.promisify(child_process.exec);\n\nconst create = async (args = {}, options = {}) => {\n  process.loader = new Loader();\n  process.loader.print(\"Creating app...\");\n\n  if (options?.release && !['production', 'canary'].includes(options.release)) {\n    cli_log('Must pass either production or canary for --release.', {\n      level: 'danger',\n      docs: 'https://docs.cheatcode.co/joystick/cli/create',\n    });\n    process.exit(0);\n  }\n\n  try {\n    // Clone the template repository\n    await exec(`git clone https://github.com/cheatcode/joystick-default-template.git ${args.name}`);\n    \n    // Remove the .git directory to disconnect from the template repo\n    await rm(`./${args.name}/.git`, { recursive: true, force: true });\n\n    if (options?.release === 'canary') {\n      await replace_in_files(`${process.cwd()}/${args?.name}`, {\n        match: [/\\.js$/],\n        exclude: [/node_modules/],\n        replace_regex: /(@joystick.js\\/node)(?!-)/g,\n        replace_with: '@joystick.js/node-canary',\n      });\n\n      await replace_in_files(`${process.cwd()}/${args?.name}`, {\n        match: [/\\.js$/],\n        exclude: [/node_modules/],\n        replace_regex: /(@joystick.js\\/ui)(?!-)/g,\n        replace_with: '@joystick.js/ui-canary',\n      });\n    }\n\n    // NOTE: Pure aesthetics. Above step completes so quickly that it almost looks like\n    // it's skipped. Add a buffer of 1s here to make for a better dev experience.\n    setTimeout(async () => {\n      process.loader.print(\"Installing dependencies...\");\n      await exec(`cd ./${args?.name} && npm install --save @joystick.js/ui${options?.release === 'canary' ? '-canary' : ''}@latest @joystick.js/node${options?.release === 'canary' ? '-canary' : ''}@latest @joystick.js/test${options?.release === 'canary' ? '-canary' : ''}@latest`);\n      console.log(\n        `${chalk.green(\"Project created! To get started, run:\")}\\ncd ${args?.name} && joystick${options?.release === 'canary' ? '-canary' : ''} start`\n      );\n    }, 1000);\n  } catch (error) {\n    cli_log(`Failed to create project: ${error.message}`, {\n      level: 'danger',\n    });\n    process.exit(1);\n  }\n};\n\nexport default create;\n"],
  "mappings": "AAAA,OAAOA,MAAQ,KACf,OAAOC,MAAW,QAClB,OAAOC,MAAmB,gBAC1B,OAAOC,MAAU,OACjB,OAAOC,MAAa,uBACpB,OAAOC,MAAY,sBACnB,OAAOC,MAAsB,gCAE7B,KAAM,CAAE,GAAAC,CAAG,EAAIP,EAAG,SACZQ,EAAOL,EAAK,UAAUD,EAAc,IAAI,EAExCO,EAAS,MAAOC,EAAO,CAAC,EAAGC,EAAU,CAAC,IAAM,CAChD,QAAQ,OAAS,IAAIN,EACrB,QAAQ,OAAO,MAAM,iBAAiB,EAElCM,GAAS,SAAW,CAAC,CAAC,aAAc,QAAQ,EAAE,SAASA,EAAQ,OAAO,IACxEP,EAAQ,uDAAwD,CAC9D,MAAO,SACP,KAAM,+CACR,CAAC,EACD,QAAQ,KAAK,CAAC,GAGhB,GAAI,CAEF,MAAMI,EAAK,wEAAwEE,EAAK,IAAI,EAAE,EAG9F,MAAMH,EAAG,KAAKG,EAAK,IAAI,QAAS,CAAE,UAAW,GAAM,MAAO,EAAK,CAAC,EAE5DC,GAAS,UAAY,WACvB,MAAML,EAAiB,GAAG,QAAQ,IAAI,CAAC,IAAII,GAAM,IAAI,GAAI,CACvD,MAAO,CAAC,OAAO,EACf,QAAS,CAAC,cAAc,EACxB,cAAe,6BACf,aAAc,0BAChB,CAAC,EAED,MAAMJ,EAAiB,GAAG,QAAQ,IAAI,CAAC,IAAII,GAAM,IAAI,GAAI,CACvD,MAAO,CAAC,OAAO,EACf,QAAS,CAAC,cAAc,EACxB,cAAe,2BACf,aAAc,wBAChB,CAAC,GAKH,WAAW,SAAY,CACrB,QAAQ,OAAO,MAAM,4BAA4B,EACjD,MAAMF,EAAK,QAAQE,GAAM,IAAI,yCAAyCC,GAAS,UAAY,SAAW,UAAY,EAAE,4BAA4BA,GAAS,UAAY,SAAW,UAAY,EAAE,4BAA4BA,GAAS,UAAY,SAAW,UAAY,EAAE,SAAS,EACjR,QAAQ,IACN,GAAGV,EAAM,MAAM,uCAAuC,CAAC;AAAA,KAAQS,GAAM,IAAI,eAAeC,GAAS,UAAY,SAAW,UAAY,EAAE,QACxI,CACF,EAAG,GAAI,CACT,OAASC,EAAO,CACdR,EAAQ,6BAA6BQ,EAAM,OAAO,GAAI,CACpD,MAAO,QACT,CAAC,EACD,QAAQ,KAAK,CAAC,CAChB,CACF,EAEA,IAAOC,EAAQJ",
  "names": ["fs", "chalk", "child_process", "util", "cli_log", "Loader", "replace_in_files", "rm", "exec", "create", "args", "options", "error", "index_default"]
}
