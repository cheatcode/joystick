{
  "version": 3,
  "sources": ["../../../src/commands/create/index.js"],
  "sourcesContent": ["import fs from 'fs';\nimport chalk from 'chalk';\nimport child_process from 'child_process';\nimport util from 'util';\nimport build_package_json from \"./build_package_json.js\";\nimport cli_log from '../../lib/cli_log.js';\nimport Loader from \"../../lib/loader.js\";\nimport node_path_polyfills from '../../lib/node_path_polyfills.js';\nimport replace_in_files from '../../lib/replace_in_files.js';\n\nconst { cp: copy_directory, writeFile, mkdir } = fs.promises;\nconst exec = util.promisify(child_process.exec);\n\nconst create_package_json = (project_name = \"\") => {\n  return writeFile(`./${project_name}/package.json`, build_package_json(project_name));\n};\n\nconst create = async (args = {}, options = {}) => {\n  process.loader = new Loader();\n  process.loader.print(\"Creating app...\");\n\n  if (options?.release && !['production', 'canary'].includes(options.release)) {\n    cli_log('Must pass either production or canary for --release.', {\n      level: 'danger',\n      docs: 'https://docs.cheatcode.co/joystick/cli/create',\n    });\n    process.exit(0);\n  }\n\n  await copy_directory(`${node_path_polyfills?.__package}/commands/create/template`, `./${args.name}`, { recursive: true });\n  await create_package_json(args.name);\n  \n  await mkdir(`./${args?.name}/.joystick`, { recursive: true });\n  await mkdir(`./${args?.name}/fixtures`, { recursive: true });\n  await mkdir(`./${args?.name}/indexes`, { recursive: true });\n  await mkdir(`./${args?.name}/lib`, { recursive: true });\n  await mkdir(`./${args?.name}/private`, { recursive: true });\n  await mkdir(`./${args?.name}/queues`, { recursive: true });\n  await mkdir(`./${args?.name}/routes`, { recursive: true });\n  await mkdir(`./${args?.name}/uploaders`, { recursive: true });\n  await mkdir(`./${args?.name}/tests`, { recursive: true });\n  await mkdir(`./${args?.name}/websockets`, { recursive: true });\n\n  if (options?.release === 'canary') {\n    await replace_in_files(`${process.cwd()}/${args?.name}`, {\n      match: [/\\.js$/],\n      exclude: [/node_modules/],\n      replace_regex: /(@joystick.js\\/node)(?!-)/g,\n      replace_with: '@joystick.js/node-canary',\n    });\n\n    await replace_in_files(`${process.cwd()}/${args?.name}`, {\n      match: [/\\.js$/],\n      exclude: [/node_modules/],\n      replace_regex: /(@joystick.js\\/ui)(?!-)/g,\n      replace_with: '@joystick.js/ui-canary',\n    });\n  }\n\n  // NOTE: Pure aesthetics. Above step completes so quickly that it almost looks like\n  // it's skipped. Add a buffer of 1s here to make for a better dev experience.\n  setTimeout(async () => {\n    process.loader.print(\"Installing dependencies...\");\n    await exec(`cd ./${args?.name} && npm install --save @joystick.js/ui${options?.release === 'canary' ? '-canary' : ''}@latest @joystick.js/node${options?.release === 'canary' ? '-canary' : ''}@latest @joystick.js/test${options?.release === 'canary' ? '-canary' : ''}@latest`);\n    console.log(\n      `${chalk.green(\"Project created! To get started, run:\")}\\ncd ${args?.name} && joystick${options?.release === 'canary' ? '-canary' : ''} start`\n    );\n  }, 1000);\n};\n\nexport default create;"],
  "mappings": "AAAA,OAAOA,MAAQ,KACf,OAAOC,MAAW,QAClB,OAAOC,MAAmB,gBAC1B,OAAOC,MAAU,OACjB,OAAOC,MAAwB,0BAC/B,OAAOC,MAAa,uBACpB,OAAOC,MAAY,sBACnB,OAAOC,MAAyB,mCAChC,OAAOC,MAAsB,gCAE7B,KAAM,CAAE,GAAIC,EAAgB,UAAAC,EAAW,MAAAC,CAAM,EAAIX,EAAG,SAC9CY,EAAOT,EAAK,UAAUD,EAAc,IAAI,EAExCW,EAAsB,CAACC,EAAe,KACnCJ,EAAU,KAAKI,CAAY,gBAAiBV,EAAmBU,CAAY,CAAC,EAG/EC,EAAS,MAAOC,EAAO,CAAC,EAAGC,EAAU,CAAC,IAAM,CAChD,QAAQ,OAAS,IAAIX,EACrB,QAAQ,OAAO,MAAM,iBAAiB,EAElCW,GAAS,SAAW,CAAC,CAAC,aAAc,QAAQ,EAAE,SAASA,EAAQ,OAAO,IACxEZ,EAAQ,uDAAwD,CAC9D,MAAO,SACP,KAAM,+CACR,CAAC,EACD,QAAQ,KAAK,CAAC,GAGhB,MAAMI,EAAe,GAAGF,GAAqB,SAAS,4BAA6B,KAAKS,EAAK,IAAI,GAAI,CAAE,UAAW,EAAK,CAAC,EACxH,MAAMH,EAAoBG,EAAK,IAAI,EAEnC,MAAML,EAAM,KAAKK,GAAM,IAAI,aAAc,CAAE,UAAW,EAAK,CAAC,EAC5D,MAAML,EAAM,KAAKK,GAAM,IAAI,YAAa,CAAE,UAAW,EAAK,CAAC,EAC3D,MAAML,EAAM,KAAKK,GAAM,IAAI,WAAY,CAAE,UAAW,EAAK,CAAC,EAC1D,MAAML,EAAM,KAAKK,GAAM,IAAI,OAAQ,CAAE,UAAW,EAAK,CAAC,EACtD,MAAML,EAAM,KAAKK,GAAM,IAAI,WAAY,CAAE,UAAW,EAAK,CAAC,EAC1D,MAAML,EAAM,KAAKK,GAAM,IAAI,UAAW,CAAE,UAAW,EAAK,CAAC,EACzD,MAAML,EAAM,KAAKK,GAAM,IAAI,UAAW,CAAE,UAAW,EAAK,CAAC,EACzD,MAAML,EAAM,KAAKK,GAAM,IAAI,aAAc,CAAE,UAAW,EAAK,CAAC,EAC5D,MAAML,EAAM,KAAKK,GAAM,IAAI,SAAU,CAAE,UAAW,EAAK,CAAC,EACxD,MAAML,EAAM,KAAKK,GAAM,IAAI,cAAe,CAAE,UAAW,EAAK,CAAC,EAEzDC,GAAS,UAAY,WACvB,MAAMT,EAAiB,GAAG,QAAQ,IAAI,CAAC,IAAIQ,GAAM,IAAI,GAAI,CACvD,MAAO,CAAC,OAAO,EACf,QAAS,CAAC,cAAc,EACxB,cAAe,6BACf,aAAc,0BAChB,CAAC,EAED,MAAMR,EAAiB,GAAG,QAAQ,IAAI,CAAC,IAAIQ,GAAM,IAAI,GAAI,CACvD,MAAO,CAAC,OAAO,EACf,QAAS,CAAC,cAAc,EACxB,cAAe,2BACf,aAAc,wBAChB,CAAC,GAKH,WAAW,SAAY,CACrB,QAAQ,OAAO,MAAM,4BAA4B,EACjD,MAAMJ,EAAK,QAAQI,GAAM,IAAI,yCAAyCC,GAAS,UAAY,SAAW,UAAY,EAAE,4BAA4BA,GAAS,UAAY,SAAW,UAAY,EAAE,4BAA4BA,GAAS,UAAY,SAAW,UAAY,EAAE,SAAS,EACjR,QAAQ,IACN,GAAGhB,EAAM,MAAM,uCAAuC,CAAC;AAAA,KAAQe,GAAM,IAAI,eAAeC,GAAS,UAAY,SAAW,UAAY,EAAE,QACxI,CACF,EAAG,GAAI,CACT,EAEA,IAAOC,EAAQH",
  "names": ["fs", "chalk", "child_process", "util", "build_package_json", "cli_log", "Loader", "node_path_polyfills", "replace_in_files", "copy_directory", "writeFile", "mkdir", "exec", "create_package_json", "project_name", "create", "args", "options", "index_default"]
}
