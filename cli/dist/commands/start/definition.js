import i from"./index.js";const[o,p,...e]=process.argv,t=!!e.includes("-i")&&e[e.indexOf("-i")+1]||!!e.includes("--imports")&&e[e.indexOf("--imports")+1],s=t?t.split(",").map(n=>n.trim()):[],r={description:"Start an existing Joystick app.",args:{},options:{environment:{flags:{"-e":{set:!!e.includes("-e"),value:!!e.includes("-e")&&e[e.indexOf("-e")+1],parent:"start"},"--environment":{set:!!e.includes("--environment"),value:!!e.includes("--environment")&&e[e.indexOf("--environment")+1],parent:"start"}},description:"Environment to set for process.env.NODE_ENV."},port:{flags:{"-p":{set:!!e.includes("-p"),value:!!e.includes("-p")&&parseInt(e[e.indexOf("-p")+1],10),parent:"start"},"--port":{set:!!e.includes("--port"),value:!!e.includes("--port")&&parseInt(e[e.indexOf("--port")+1],10),parent:"start"}},description:"Port number to run the app on."},debug:{flags:{"-d":{set:!!e.includes("-d"),value:!!e.includes("-d"),parent:"start"},"--debug":{set:!!e.includes("--debug"),value:!!e.includes("--debug"),parent:"start"}},description:"Run the Joystick app's Node.js process in debug mode with --inspect."},imports:{flags:{"-i":{set:t!==void 0,value:s,parent:"start"},"--imports":{set:t!==void 0,value:s,parent:"start"}},description:"Run the specified imports before starting your Joystick app's Node.js process (e.g., for APM usage)."},tests:{flags:{"-t":{set:!!e.includes("-t"),value:!!e.includes("-t"),parent:"start"},"--tests":{set:!!e.includes("--tests"),value:!!e.includes("--tests"),parent:"start"}},description:"Run tests alongside the development server using the existing file watcher."}},command:i};var d=r;export{d as default};
//# sourceMappingURL=definition.js.map
