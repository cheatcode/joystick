import s from"fs";import a from"path";import p from"os";import"https";import{promisify as u}from"util";import{pipeline as g}from"stream";import{execFile as h}from"child_process";const x=u(g),d=u(h),l={mongodb:"MongoDB",postgresql:"PostgreSQL",redis:"Redis"},b=async t=>{if(p.platform()!=="win32"){const r=await s.promises.readdir(t);for(const e of r)await s.promises.chmod(a.join(t,e),"755")}},v=async(t,o,r,e)=>{const c=p.platform();if(await s.promises.access(e).then(()=>!0).catch(()=>!1)&&await s.promises.rm(e,{recursive:!0,force:!0}),await s.promises.mkdir(e,{recursive:!0}),t==="redis")if(c==="win32")await d("powershell",["Expand-Archive","-Path",o,"-DestinationPath",e]);else{const i=a.join(r,"temp");await s.promises.mkdir(i,{recursive:!0}),await d("tar",["-xzf",o,"-C",i,"--strip-components=1"]);const n=a.join(i,"src");await d("make",["-C",n]);const m=a.join(n,"redis-server"),f=a.join(n,"redis-cli");await s.promises.copyFile(m,a.join(e,"redis-server")),await s.promises.copyFile(f,a.join(e,"redis-cli")),await s.promises.rm(i,{recursive:!0,force:!0})}else{const i=a.join(r,"temp");if(await s.promises.mkdir(i,{recursive:!0}),c==="win32"){await d("powershell",["Expand-Archive","-Path",o,"-DestinationPath",i]);const n=(await s.promises.readdir(i))[0],m=a.join(i,n,"bin");await s.promises.cp(m,e,{recursive:!0})}else{await d("tar",["-xzf",o,"-C",i,"--strip-components=1"]);const n=a.join(i,"bin");await s.promises.cp(n,e,{recursive:!0})}await s.promises.rm(i,{recursive:!0,force:!0})}await s.promises.unlink(o)},_=async(t,o)=>{const r=await fetch(t);if(!r.ok)throw new Error(`Failed to download: ${r.statusText}`);await x(r.body,s.createWriteStream(o))},w=async t=>{try{return await s.promises.access(t),!0}catch{return!1}},j=async()=>{if(p.platform()==="darwin"){const{stdout:t}=await d("sysctl",["-n","machdep.cpu.brand_string"]);return t.trim()}return p.arch()},y=async(t,o)=>{if(o){const i=await s.promises.readFile(o,"utf-8");return JSON.parse(i)[t].url}const r=p.platform();return{mongodb:{win32:"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.5.zip",darwin:(await j()).includes("ARM")?"https://fastdl.mongodb.org/osx/mongodb-macos-arm64-6.0.5.tgz":"https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-6.0.5.tgz",linux:"https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2004-6.0.5.tgz"},redis:{win32:"https://github.com/tporadowski/redis/releases/download/v5.0.14.1/Redis-x64-5.0.14.1.zip",darwin:"https://download.redis.io/releases/redis-6.2.6.tar.gz",linux:"https://download.redis.io/releases/redis-6.2.6.tar.gz"},postgresql:{win32:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-windows-x64-binaries.zip",darwin:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-osx-binaries.zip",linux:"https://ftp.postgresql.org/pub/source/v14.7/postgresql-14.7.tar.gz"}}[t][r]},k=async(t,o)=>{await s.promises.mkdir(t,{recursive:!0}),await s.promises.mkdir(o,{recursive:!0})},z=async(t,o=null)=>{const r=a.join(p.homedir(),".joystick","databases",t),e=a.join(r,"bin");if(await w(r))return;await k(r,e);const c=await y(t,o),i=a.basename(new URL(c).pathname),n=a.join(r,i);await w(n)||(process.loader.print(`${l[t]} not found. Downloading...`),await _(c,n),process.loader.print(`Installing ${l[t]}...`),await v(t,n,r,e),await b(e),process.loader.print(`${l[t]} installed!`))};var E=z;export{E as default};
