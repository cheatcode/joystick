import i from"fs";import n from"path";import c from"os";import"https";import{promisify as w}from"util";import{pipeline as u}from"stream";import{execFile as g}from"child_process";const h=w(u),d=w(g),m={mongodb:"MongoDB",postgresql:"PostgreSQL",redis:"Redis"},x=async t=>{if(c.platform()!=="win32"){const s=await i.promises.readdir(t);for(const r of s)await i.promises.chmod(n.join(t,r),"755")}},b=async(t,o,s,r)=>{const p=c.platform();if(t==="redis")if(p==="win32")await d("powershell",["Expand-Archive","-Path",o,"-DestinationPath",r]);else{await d("tar",["-xzf",o,"-C",s,"--strip-components=1"]),await i.promises.unlink(o);const e=n.join(s,"src");await d("make",["-C",e]);const a=n.join(e,"redis-server"),l=n.join(e,"redis-cli");await i.promises.copyFile(a,n.join(r,"redis-server")),await i.promises.copyFile(l,n.join(r,"redis-cli"))}else{if(p==="win32"){const e=n.join(s,"temp");await d("powershell",["Expand-Archive","-Path",o,"-DestinationPath",e]);const a=(await i.promises.readdir(e))[0],l=n.join(e,a,"bin");await i.promises.access(r).then(()=>!0).catch(()=>!1)&&await i.promises.rm(r,{recursive:!0,force:!0}),await i.promises.rename(l,r),await i.promises.rm(e,{recursive:!0,force:!0})}else await d("tar",["-xzf",o,"-C",r,"--strip-components=1"]);await i.promises.unlink(o)}},j=async(t,o)=>{const s=await fetch(t);if(!s.ok)throw new Error(`Failed to download: ${s.statusText}`);await h(s.body,i.createWriteStream(o))},f=async t=>{try{return await i.promises.access(t),!0}catch{return!1}},y=async()=>{if(c.platform()==="darwin"){const{stdout:t}=await d("sysctl",["-n","machdep.cpu.brand_string"]);return t.trim()}return c.arch()},z=async(t,o)=>{if(o){const e=await i.promises.readFile(o,"utf-8");return JSON.parse(e)[t].url}const s=c.platform();return{mongodb:{win32:"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.5.zip",darwin:(await y()).includes("ARM")?"https://fastdl.mongodb.org/osx/mongodb-macos-arm64-6.0.5.tgz":"https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-6.0.5.tgz",linux:"https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2004-6.0.5.tgz"},redis:{win32:"https://github.com/tporadowski/redis/releases/download/v5.0.14.1/Redis-x64-5.0.14.1.zip",darwin:"https://download.redis.io/releases/redis-6.2.6.tar.gz",linux:"https://download.redis.io/releases/redis-6.2.6.tar.gz"},postgresql:{win32:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-windows-x64-binaries.zip",darwin:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-osx-binaries.zip",linux:"https://ftp.postgresql.org/pub/source/v14.7/postgresql-14.7.tar.gz"}}[t][s]},_=async(t,o)=>{await i.promises.mkdir(t,{recursive:!0}),await i.promises.mkdir(o,{recursive:!0})},k=async(t,o=null)=>{const s=n.join(c.homedir(),".joystick","databases",t),r=n.join(s,"bin");if(await f(s))return;await _(s,r);const p=await z(t,o),e=n.basename(new URL(p).pathname),a=n.join(s,e);await f(a)||(process.loader.print(`${m[t]} not found. Downloading...`),await j(p,a),process.loader.print(`Installing ${m[t]}...`),await b(t,a,s,r),await x(r),process.loader.print(`${m[t]} installed!`))};var C=k;export{C as default};
