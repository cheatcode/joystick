import i from"fs";import n from"path";import d from"os";import"https";import{promisify as w}from"util";import{pipeline as u}from"stream";import{execFile as g}from"child_process";const h=w(u),c=w(g),m={mongodb:"MongoDB",postgresql:"PostgreSQL",redis:"Redis"},x=async t=>{if(d.platform()!=="win32"){const o=await i.promises.readdir(t);for(const r of o)await i.promises.chmod(n.join(t,r),"755")}},b=async(t,s,o,r)=>{const p=d.platform();if(t==="redis")if(p==="win32")await c("powershell",["Expand-Archive","-Path",s,"-DestinationPath",r]);else{await c("tar",["-xzf",s,"-C",o,"--strip-components=1"]),await i.promises.unlink(s);const e=n.join(o,"src");await c("make",["-C",e]);const a=n.join(e,"redis-server"),l=n.join(e,"redis-cli");await i.promises.copyFile(a,n.join(r,"redis-server")),await i.promises.copyFile(l,n.join(r,"redis-cli"))}else{if(p==="win32"){const e=n.join(o,"temp");await c("powershell",["Expand-Archive","-Path",s,"-DestinationPath",e]);const a=(await i.promises.readdir(e))[0],l=n.join(e,a,"bin");await i.promises.rename(l,r),await i.promises.rm(e,{recursive:!0,force:!0})}else await c("tar",["-xzf",s,"-C",r,"--strip-components=1"]);await i.promises.unlink(s)}},y=async(t,s)=>{const o=await fetch(t);if(!o.ok)throw new Error(`Failed to download: ${o.statusText}`);await h(o.body,i.createWriteStream(s))},f=async t=>{try{return await i.promises.access(t),!0}catch{return!1}},_=async()=>{if(d.platform()==="darwin"){const{stdout:t}=await c("sysctl",["-n","machdep.cpu.brand_string"]);return t.trim()}return d.arch()},j=async(t,s)=>{if(s){const e=await i.promises.readFile(s,"utf-8");return JSON.parse(e)[t].url}const o=d.platform();return{mongodb:{win32:"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.5.zip",darwin:(await _()).includes("ARM")?"https://fastdl.mongodb.org/osx/mongodb-macos-arm64-6.0.5.tgz":"https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-6.0.5.tgz",linux:"https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2004-6.0.5.tgz"},redis:{win32:"https://github.com/tporadowski/redis/releases/download/v5.0.14.1/Redis-x64-5.0.14.1.zip",darwin:"https://download.redis.io/releases/redis-6.2.6.tar.gz",linux:"https://download.redis.io/releases/redis-6.2.6.tar.gz"},postgresql:{win32:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-windows-x64-binaries.zip",darwin:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-osx-binaries.zip",linux:"https://ftp.postgresql.org/pub/source/v14.7/postgresql-14.7.tar.gz"}}[t][o]},z=async(t,s)=>{await i.promises.mkdir(t,{recursive:!0}),await i.promises.mkdir(s,{recursive:!0})},k=async(t,s=null)=>{const o=n.join(d.homedir(),".joystick","databases",t),r=n.join(o,"bin");if(await f(o))return;await z(o,r);const p=await j(t,s),e=n.basename(new URL(p).pathname),a=n.join(o,e);await f(a)||(process.loader.print(`${m[t]} not found. Downloading...`),await y(p,a),process.loader.print(`Installing ${m[t]}...`),await b(t,a,o,r),await x(r),process.loader.print(`${m[t]} installed!`))};var C=k;export{C as default};
