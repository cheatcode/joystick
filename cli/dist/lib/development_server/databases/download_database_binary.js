import r from"fs";import e from"path";import p from"os";import"https";import{promisify as m}from"util";import{pipeline as u}from"stream";import{execFile as g}from"child_process";const h=m(u),d=m(g),c={mongodb:"MongoDB",postgresql:"PostgreSQL",redis:"Redis"},x=async t=>{if(p.platform()!=="win32"){const s=await r.promises.readdir(t);for(const i of s)await r.promises.chmod(e.join(t,i),"755")}},b=async(t,o,s,i)=>{const a=p.platform();if(t==="redis")if(a==="win32")await d("powershell",["Expand-Archive","-Path",o,"-DestinationPath",i]);else{await d("tar",["-xzf",o,"-C",s,"--strip-components=1"]),await r.promises.unlink(o);const n=e.join(s,"src");await d("make",["-C",n]);const l=e.join(n,"redis-server"),f=e.join(n,"redis-cli");await r.promises.copyFile(l,e.join(i,"redis-server")),await r.promises.copyFile(f,e.join(i,"redis-cli"))}else a==="win32"?await d("powershell",["Expand-Archive","-Path",o,"-DestinationPath",i]):await d("tar",["-xzf",o,"-C",i,"--strip-components=1"]),await r.promises.unlink(o)},y=async(t,o)=>{const s=await fetch(t);if(!s.ok)throw new Error(`Failed to download: ${s.statusText}`);await h(s.body,r.createWriteStream(o))},w=async t=>{try{return await r.promises.access(t),!0}catch{return!1}},z=async()=>{if(p.platform()==="darwin"){const{stdout:t}=await d("sysctl",["-n","machdep.cpu.brand_string"]);return t.trim()}return p.arch()},_=async(t,o)=>{if(o){const n=await r.promises.readFile(o,"utf-8");return JSON.parse(n)[t].url}const s=p.platform();return{mongodb:{win32:"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.5.zip",darwin:(await z()).includes("ARM")?"https://fastdl.mongodb.org/osx/mongodb-macos-arm64-6.0.5.tgz":"https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-6.0.5.tgz",linux:"https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2004-6.0.5.tgz"},redis:{win32:"https://github.com/tporadowski/redis/releases/download/v5.0.14.1/Redis-x64-5.0.14.1.zip",darwin:"https://download.redis.io/releases/redis-6.2.6.tar.gz",linux:"https://download.redis.io/releases/redis-6.2.6.tar.gz"},postgresql:{win32:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-windows-x64-binaries.zip",darwin:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-osx-binaries.zip",linux:"https://ftp.postgresql.org/pub/source/v14.7/postgresql-14.7.tar.gz"}}[t][s]},j=async(t,o)=>{await r.promises.mkdir(t,{recursive:!0}),await r.promises.mkdir(o,{recursive:!0})},k=async(t,o=null)=>{const s=e.join(p.homedir(),".joystick","databases",t),i=e.join(s,"bin");if(await w(s))return;await j(s,i);const a=await _(t,o),n=e.basename(new URL(a).pathname),l=e.join(s,n);await w(l)||(process.loader.print(`${c[t]} not found. Downloading...`),await y(a,l),process.loader.print(`Installing ${c[t]}...`),await b(t,l,s,i),await x(i),process.loader.print(`${c[t]} installed!`))};var C=k;export{C as default};
