import s from"fs";import r from"path";import c from"os";import"https";import{promisify as u}from"util";import{pipeline as x}from"stream";import{execFile as b}from"child_process";const j=u(x),d=u(b),m={mongodb:"MongoDB",postgresql:"PostgreSQL",redis:"Redis"},_=async t=>{if(c.platform()!=="win32"){const o=await s.promises.readdir(t);for(const e of o)await s.promises.chmod(r.join(t,e),"755")}},y=async(t,i,o,e)=>{const p=c.platform();if(t==="redis")if(p==="win32")await d("powershell",["Expand-Archive","-Path",i,"-DestinationPath",e]);else{await d("tar",["-xzf",i,"-C",o,"--strip-components=1"]),await s.promises.unlink(i);const n=r.join(o,"src");await d("make",["-C",n]);const a=r.join(n,"redis-server"),l=r.join(n,"redis-cli");await s.promises.copyFile(a,r.join(e,"redis-server")),await s.promises.copyFile(l,r.join(e,"redis-cli"))}else{if(p==="win32"){const n=r.join(o,"temp");await d("powershell",["Expand-Archive","-Path",i,"-DestinationPath",n]);const a=(await s.promises.readdir(n))[0],l=r.join(n,a,"bin");await s.promises.access(e).then(()=>!0).catch(()=>!1)&&await s.promises.rm(e,{recursive:!0,force:!0});const f=r.join(e,"bin");await s.promises.mkdir(f,{recursive:!0});const h=await s.promises.readdir(l);for(const w of h)await s.promises.rename(r.join(l,w),r.join(f,w));await s.promises.rm(n,{recursive:!0,force:!0})}else await d("tar",["-xzf",i,"-C",e,"--strip-components=1"]);await s.promises.unlink(i)}},z=async(t,i)=>{const o=await fetch(t);if(!o.ok)throw new Error(`Failed to download: ${o.statusText}`);await j(o.body,s.createWriteStream(i))},g=async t=>{try{return await s.promises.access(t),!0}catch{return!1}},k=async()=>{if(c.platform()==="darwin"){const{stdout:t}=await d("sysctl",["-n","machdep.cpu.brand_string"]);return t.trim()}return c.arch()},v=async(t,i)=>{if(i){const n=await s.promises.readFile(i,"utf-8");return JSON.parse(n)[t].url}const o=c.platform();return{mongodb:{win32:"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.5.zip",darwin:(await k()).includes("ARM")?"https://fastdl.mongodb.org/osx/mongodb-macos-arm64-6.0.5.tgz":"https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-6.0.5.tgz",linux:"https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2004-6.0.5.tgz"},redis:{win32:"https://github.com/tporadowski/redis/releases/download/v5.0.14.1/Redis-x64-5.0.14.1.zip",darwin:"https://download.redis.io/releases/redis-6.2.6.tar.gz",linux:"https://download.redis.io/releases/redis-6.2.6.tar.gz"},postgresql:{win32:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-windows-x64-binaries.zip",darwin:"https://get.enterprisedb.com/postgresql/postgresql-14.7-1-osx-binaries.zip",linux:"https://ftp.postgresql.org/pub/source/v14.7/postgresql-14.7.tar.gz"}}[t][o]},q=async(t,i)=>{await s.promises.mkdir(t,{recursive:!0}),await s.promises.mkdir(i,{recursive:!0})},F=async(t,i=null)=>{const o=r.join(c.homedir(),".joystick","databases",t),e=r.join(o,"bin");if(await g(o))return;await q(o,e);const p=await v(t,i),n=r.basename(new URL(p).pathname),a=r.join(o,n);await g(a)||(process.loader.print(`${m[t]} not found. Downloading...`),await z(p,a),process.loader.print(`Installing ${m[t]}...`),await y(t,a,o,e),await _(e),process.loader.print(`${m[t]} installed!`))};var L=F;export{L as default};
