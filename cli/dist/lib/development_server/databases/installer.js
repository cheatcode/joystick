import s from"fs";import a from"path";import c from"os";import{promisify as l}from"util";import{pipeline as m}from"stream";import{execFile as d}from"child_process";const u=l(m),w=l(d),h={mongodb:"8",postgresql:"16",redis:"7"},_=()=>{const t=c.platform();if(t==="darwin")return"macos";if(t==="linux")return"linux";throw new Error(`Unsupported platform: ${t}. Please use WSL2 on Windows.`)},$=()=>{const t=c.arch();if(t==="arm64")return"arm64";if(t==="x64")return"x86_64";throw new Error(`Unsupported architecture: ${t}`)},x=(t,r,o,i)=>`https://cdn.joystickjs.com/${t}/${r}/${o}/${i}.tar.gz`,y=async t=>{try{return await s.promises.access(t),!0}catch{return!1}},g=async(t,r)=>{const o=await fetch(t);if(!o.ok)throw new Error(`Failed to download ${t}: ${o.statusText}`);await u(o.body,s.createWriteStream(r))},k=async t=>{const r=await s.promises.readdir(t);for(const o of r){const i=a.join(t,o);(await s.promises.stat(i)).isFile()&&await s.promises.chmod(i,"755")}},j=async t=>{const r=a.join(c.homedir(),".joystick","databases",t);if(await y(r))return;const o=_(),i=$(),e=h[t];if(!e)throw new Error(`Unsupported database: ${t}`);const p=x(t,e,o,i),f=`${t}.tar.gz`,n=a.join(r,f);process.loader.print(`${t} not found. Downloading... (this may take a few minutes)`),await s.promises.mkdir(r,{recursive:!0}),await g(p,n),process.loader.print(`Installing ${t}...`),await w("tar",["-xzf",n,"-C",r]),await s.promises.unlink(n),await k(r),process.loader.print(`${t} installed!`)};var b=j;export{b as default};
//# sourceMappingURL=installer.js.map
