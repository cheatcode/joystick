import s from"fs";import c from"path";import l from"os";import{promisify as p}from"util";import{pipeline as m}from"stream";import{execFile as u}from"child_process";const w=p(m),h=p(u),_={mongodb:"8",postgresql:"16",redis:"7"},$={mongodb:"MongoDB",postgresql:"PostgreSQL",redis:"Redis"},y=()=>{const t=l.platform();if(t==="darwin")return"macos";if(t==="linux")return"linux";throw new Error(`Unsupported platform: ${t}. Please use WSL2 on Windows.`)},g=()=>{const t=l.arch();if(t==="arm64")return"arm64";if(t==="x64")return"x86_64";throw new Error(`Unsupported architecture: ${t}`)},x=(t,o,r,e)=>{const i=Date.now();return`https://cdn.joystickjs.com/${t}/${o}/${r}/${e}.tar.gz?t=${i}`},k=async t=>{try{return await s.promises.access(t),!0}catch{return!1}},b=async(t,o)=>{const r=await fetch(t);if(!r.ok)throw new Error(`Failed to download ${t}: ${r.statusText}`);await w(r.body,s.createWriteStream(o))},j=async t=>{const o=await s.promises.readdir(t);for(const r of o){const e=c.join(t,r);(await s.promises.stat(e)).isFile()&&await s.promises.chmod(e,"755")}},v=async t=>{const o=c.join(l.homedir(),".joystick","databases",t);if(await k(o))return;const r=y(),e=g(),i=_[t];if(!i)throw new Error(`Unsupported database: ${t}`);const f=x(t,i,r,e),d=`${t}.tar.gz`,a=c.join(o,d),n=$[t]||t;process.loader.print(`${n} not found. Downloading... (this may take a few minutes)`),await s.promises.mkdir(o,{recursive:!0}),await b(f,a),process.loader.print(`Installing ${n}...`),await h("tar",["-xzf",a,"-C",o]),await s.promises.unlink(a),await j(o),process.loader.print(`${n} installed!`)};var W=v;export{W as default};
//# sourceMappingURL=installer.js.map
