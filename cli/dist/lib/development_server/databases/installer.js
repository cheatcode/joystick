import e from"fs";import c from"path";import l from"os";import{promisify as p}from"util";import{pipeline as d}from"stream";import{execFile as w}from"child_process";import u from"../../get_architecture.js";const h=p(d),_=p(w),$={mongodb:"8",postgresql:"17",redis:"7"},y={mongodb:"MongoDB",postgresql:"PostgreSQL",redis:"Redis"},g=()=>{const t=l.platform();if(t==="darwin")return"macos";if(t==="linux")return"linux";throw new Error(`Unsupported platform: ${t}. Please use WSL2 on Windows.`)},x=(t,r,o,s)=>{const i=Date.now();return`https://cdn.joystickjs.com/${t}/${r}/${o}/${s}.tar.gz?t=${i}`},k=async t=>{try{return await e.promises.access(t),!0}catch{return!1}},j=async(t,r)=>{const o=await fetch(t);if(!o.ok)throw new Error(`Failed to download ${t}: ${o.statusText}`);await h(o.body,e.createWriteStream(r))},b=async t=>{const r=await e.promises.readdir(t);for(const o of r){const s=c.join(t,o);(await e.promises.stat(s)).isFile()&&await e.promises.chmod(s,"755")}},v=async t=>{const r=g(),o=u(),s=c.join(l.homedir(),".joystick","databases",t,o);if(await k(s))return;const i=$[t];if(!i)throw new Error(`Unsupported database: ${t}`);const f=x(t,i,r,o),m=`${t}.tar.gz`,a=c.join(s,m),n=y[t]||t;process.loader.print(`${n} (${o}) not found. Downloading... (this may take a few minutes)`),await e.promises.mkdir(s,{recursive:!0}),await j(f,a),process.loader.print(`Installing ${n} (${o})...`),await _("tar",["-xzf",a,"-C",s]),await e.promises.unlink(a),await b(s),process.loader.print(`${n} (${o}) installed!`)};var L=v;export{L as default};
//# sourceMappingURL=installer.js.map
