{
  "version": 3,
  "sources": ["../../../../../src/lib/development_server/databases/postgresql/connect.js"],
  "sourcesContent": ["import os from 'os';\nimport check_connection from \"./check_connection.js\";\nimport postgresql from \"./index.js\";\n\nconst connect = async (settings = {}, port = 2610) => {\n  try {\n    const has_connection = settings.connection && Object.keys(settings.connection).length > 0;\n\n    if (has_connection) {\n      await check_connection(settings.connection, settings.options);\n    }\n\n    return {\n      pid: !has_connection ? await postgresql(port) : null,\n      connection: has_connection ? settings.connection : {\n        hosts: [\n          {\n            hostname: \"127.0.0.1\",\n            port,\n          },\n        ],\n        database: \"app\",\n        // NOTE: PostgreSQL creates a default superuser based on the OS username.\n        username: (os.userInfo() || {}).username || \"\",\n        password: \"\",\n      },\n    };\n  } catch (exception) {\n    console.warn(exception);\n  }\n};\n\nexport default connect;\n"],
  "mappings": "AAAA,OAAOA,MAAQ,KACf,OAAOC,MAAsB,wBAC7B,OAAOC,MAAgB,aAEvB,MAAMC,EAAU,MAAOC,EAAW,CAAC,EAAGC,EAAO,OAAS,CACpD,GAAI,CACF,MAAMC,EAAiBF,EAAS,YAAc,OAAO,KAAKA,EAAS,UAAU,EAAE,OAAS,EAExF,OAAIE,GACF,MAAML,EAAiBG,EAAS,WAAYA,EAAS,OAAO,EAGvD,CACL,IAAME,EAA0C,KAAzB,MAAMJ,EAAWG,CAAI,EAC5C,WAAYC,EAAiBF,EAAS,WAAa,CACjD,MAAO,CACL,CACE,SAAU,YACV,KAAAC,CACF,CACF,EACA,SAAU,MAEV,UAAWL,EAAG,SAAS,GAAK,CAAC,GAAG,UAAY,GAC5C,SAAU,EACZ,CACF,CACF,OAASO,EAAW,CAClB,QAAQ,KAAKA,CAAS,CACxB,CACF,EAEA,IAAOC,EAAQL",
  "names": ["os", "check_connection", "postgresql", "connect", "settings", "port", "has_connection", "exception", "connect_default"]
}
