import y from"child_process";import f from"fs";import k from"util";import j from"os";import g from"path";import"../../../get_platform_safe_path.js";import w from"../../../get_process_id_from_port.js";import _ from"../../../path_exists.js";import h from"../../../get_architecture.js";const e=k.promisify(y.exec),{rename:x}=f.promises,q=async(t=2610)=>{const s=await _(".joystick/data/postgresql");let a=await _(`.joystick/data/postgresql_${t}`);return s&&!a&&(await x(".joystick/data/postgresql",`.joystick/data/postgresql_${t}`),a=!0),a&&(await _(`.joystick/data/postgresql_${t}/PG_VERSION`)||(a=!1)),a},b=()=>"createdb",I=()=>"postgres",L=()=>"initdb",D=()=>"pg_ctl",v=async(t=2610)=>{try{const s=t,a=h(),n=g.join(j.homedir(),".joystick","databases","postgresql",a),o=g.join(n,"bin"),i=D(),d=L(),P=I(),m=b(),r=process.platform==="linux"&&process.getuid&&process.getuid()===0;await q(t)||(r?(await e(`mkdir -p ${process.cwd()}/.joystick/data/postgresql_${t}`),await e(`chown -R postgres:postgres ${process.cwd()}/.joystick/data`),await e(`sudo -u postgres ${o}/${d} -D ${process.cwd()}/.joystick/data/postgresql_${t} --auth-local=trust --auth-host=trust`)):await e(`./${d} -D ${process.cwd()}/.joystick/data/postgresql_${t}`,{cwd:o}));const p=parseInt(await w(s),10);p&&(r?await e(`sudo -u postgres ${o}/${i} kill KILL ${p}`):await e(`./${i} kill KILL ${p}`,{cwd:o}));const $=r?`sudo -u postgres ${o}/${i} -o "-p ${s}" -D ${process.cwd()}/.joystick/data/postgresql_${t} start`:`./${i} -o "-p ${s}" -D ${process.cwd()}/.joystick/data/postgresql_${t} start`;await e($,r?{}:{cwd:o}),await new Promise(c=>setTimeout(c,1e3));const l=(await w(s))?.replace(`
`,"");if(!l)throw new Error("PostgreSQL server failed to start");const u=r?`sudo -u postgres ${o}/${m} -h 127.0.0.1 -p ${s} app`:`./${m} -h 127.0.0.1 -p ${s} app`;try{await e(u,{cwd:r?process.cwd():o})}catch({stderr:c}){(!c||!c.includes('database "app" already exists'))&&console.log(c)}return parseInt(l,10)}catch(s){console.warn(s),process.exit(1)}};var B=v;export{B as default};
//# sourceMappingURL=index.js.map
