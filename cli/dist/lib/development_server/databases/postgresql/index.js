import m from"child_process";import w from"fs";import h from"util";import g from"os";import k from"../../../cli_log.js";import b from"../../../command_exists.js";import x from"../../../get_platform_safe_path.js";import y from"../../../get_process_id_from_port.js";import"../../../kill_port_process.js";import f from"../../../path_exists.js";const d=h.promisify(m.exec),{rename:j}=w.promises,$=async(t=2610)=>{const o=await f(".joystick/data/postgresql");let e=await f(`.joystick/data/postgresql_${t}`);return o&&!e&&(await j(".joystick/data/postgresql",`.joystick/data/postgresql_${t}`),e=!0),e},F=()=>{k("PostgreSQL is not installed on this computer. You can download PostgreSQL at https://www.postgresql.org/download. After you've installed PostgreSQL, run joystick start again, or, remove PostgreSQL from your databases list in your settings.development.json file to skip startup.",{level:"danger",docs:"https://cheatcode.co/docs/joystick/cli#databases"})},G=()=>b("psql"),q=()=>process.platform==="win32"?"createdb.exe":"createdb",L=()=>process.platform==="win32"?"pg_ctl.exe":"pg_ctl",S=async(t=2610)=>{try{const o=L(),e=q(),i=`${g.homedir()}/.joystick/databases/postgresql/bin/bin/${o}`,u=`${g.homedir()}/.joystick/databases/postgresql/bin/bin/${e}`;await $(t)||await d(`${i} init -D .joystick/data/postgresql_${t} --options=--no-locale`).catch(s=>{s.includes("already exists")||console.warn(s)});const r=t,p=parseInt(await y(r),10);p&&await d(`${i} kill KILL ${p}`);const l=m.spawn(`${i}`,["-o",`"-p ${r}"`,"-D",x(`.joystick/data/postgresql_${t}`),"start"].filter(s=>!!s));return new Promise(s=>{l.stderr.on("data",async c=>{const n=c?.toString();n?.includes("another server might be running")||console.warn(n)}),l.stdout.on("data",async c=>{if((c?.toString()).includes("database system is ready to accept connections")){const _=(await y(r))?.replace(`
`,"");d(`${u} -h 127.0.0.1 -p ${r} app`).then(a=>{s(parseInt(_,10))}).catch(({stderr:a})=>{console.log(a),a&&a.includes('database "app" already exists')?s(parseInt(_,10)):console.log(a)})}})})}catch(o){console.warn(o),process.exit(1)}};var H=S;export{H as default};
