import m from"child_process";import w from"fs";import h from"util";import g from"os";import k from"../../../cli_log.js";import b from"../../../command_exists.js";import x from"../../../get_platform_safe_path.js";import y from"../../../get_process_id_from_port.js";import"../../../kill_port_process.js";import f from"../../../path_exists.js";const p=h.promisify(m.exec),{rename:j}=w.promises,$=async(t=2610)=>{const s=await f(".joystick/data/postgresql");let o=await f(`.joystick/data/postgresql_${t}`);return s&&!o&&(await j(".joystick/data/postgresql",`.joystick/data/postgresql_${t}`),o=!0),o},F=()=>{k("PostgreSQL is not installed on this computer. You can download PostgreSQL at https://www.postgresql.org/download. After you've installed PostgreSQL, run joystick start again, or, remove PostgreSQL from your databases list in your settings.development.json file to skip startup.",{level:"danger",docs:"https://cheatcode.co/docs/joystick/cli#databases"})},G=()=>b("psql"),q=()=>process.platform==="win32"?"createdb.exe":"createdb",L=()=>process.platform==="win32"?"pg_ctl.exe":"pg_ctl",S=async(t=2610)=>{try{const s=L(),o=q(),i=`${g.homedir()}/.joystick/databases/postgresql/bin/bin/${s}`,u=`${g.homedir()}/.joystick/databases/postgresql/bin/bin/${o}`;await $(t)||await p(`${i} init -D .joystick/data/postgresql_${t} --options=--no-locale`);const e=t,d=parseInt(await y(e),10);d&&await p(`${i} kill KILL ${d}`);const l=m.spawn(`${i}`,["-o",`"-p ${e}"`,"-D",x(`.joystick/data/postgresql_${t}`),"start"].filter(a=>!!a));return new Promise(a=>{l.stderr.on("data",async c=>{const n=c?.toString();n?.includes("another server might be running")||console.warn(n)}),l.stdout.on("data",async c=>{if((c?.toString()).includes("database system is ready to accept connections")){const _=(await y(e))?.replace(`
`,"");p(`${u} -h 127.0.0.1 -p ${e} app`).then(r=>{a(parseInt(_,10))}).catch(({stderr:r})=>{r&&r.includes('database "app" already exists')?a(parseInt(_,10)):console.log(r)})}})})}catch(s){console.warn(s),process.exit(1)}};var H=S;export{H as default};
