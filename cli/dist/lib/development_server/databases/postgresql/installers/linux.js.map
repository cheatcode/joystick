{
  "version": 3,
  "sources": ["../../../../../../src/lib/development_server/databases/postgresql/installers/linux.js"],
  "sourcesContent": ["import { promisify } from 'util';\nimport { execFile, exec } from 'child_process';\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nconst exec_file_async = promisify(execFile);\nconst exec_async = promisify(exec);\nconst mkdir_async = promisify(fs.mkdir);\nconst symlink_async = promisify(fs.symlink);\nconst access_async = promisify(fs.access);\nconst writeFile_async = promisify(fs.writeFile);\n\nconst download_postgresql_linux = async () => {\n  try {\n    const postgresql_version = '16';\n    const system_bin_path = `/usr/lib/postgresql/${postgresql_version}/bin`;\n    const joystick_bin_path = path.join(os.homedir(), '.joystick', 'databases', 'postgresql', 'bin');\n    const symlink_path = path.join(joystick_bin_path, 'bin');\n    const postgres_executable = path.join(symlink_path, 'postgres');\n\n    // Check if PostgreSQL is already installed in the desired location\n    try {\n      await access_async(postgres_executable, fs.constants.X_OK);\n      return;\n    } catch (error) {\n      // PostgreSQL is not installed or not in the desired location, proceed with installation\n    }\n\n    process.loader.print('PostgreSQL not found. Installing... (this may take a few minutes)');\n    \n    // Ensure wget is installed\n    await exec_file_async('sudo', ['apt-get', 'install', '-y', 'wget']);\n\n    // Add PostgreSQL 16 repository\n    await exec_file_async('sudo', ['sh', '-c', 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list']);\n    \n    // Download the PostgreSQL public key\n    const { stdout: keyContent } = await exec_async('wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc');\n    \n    // Save the key to a temporary file\n    const tempKeyPath = '/tmp/postgresql-ACCC4CF8.asc';\n    await writeFile_async(tempKeyPath, keyContent);\n    \n    // Add the key\n    await exec_file_async('sudo', ['apt-key', 'add', tempKeyPath]);\n    \n    // Remove the temporary key file\n    await exec_file_async('rm', [tempKeyPath]);\n\n    // Update package list and install PostgreSQL 16\n    await exec_file_async('sudo', ['apt-get', 'update']);\n    await exec_file_async('sudo', ['apt-get', 'install', '-y', `postgresql-${postgresql_version}`, `postgresql-client-${postgresql_version}`, `postgresql-server-dev-${postgresql_version}`]);\n\n    await mkdir_async(joystick_bin_path, { recursive: true });\n    \n    try {\n      await symlink_async(system_bin_path, symlink_path);\n    } catch (symlink_error) {\n      if (symlink_error.code !== 'EEXIST') {\n        console.error('Error creating symlink:', symlink_error);\n        throw symlink_error;\n      }\n    }\n\n    try {\n      await access_async(postgres_executable, fs.constants.X_OK);\n    } catch (access_error) {\n      console.error('Error accessing PostgreSQL executable:', access_error);\n      throw access_error;\n    }\n    \n    process.loader.print('PostgreSQL installed!');\n  } catch (error) {\n    console.error('Error installing PostgreSQL:', error);\n    throw error;\n  }\n};\n\nexport default download_postgresql_linux;"],
  "mappings": "AAAA,OAAS,aAAAA,MAAiB,OAC1B,OAAS,YAAAC,EAAU,QAAAC,MAAY,gBAC/B,OAAOC,MAAQ,KACf,OAAOC,MAAQ,KACf,OAAOC,MAAU,OAEjB,MAAMC,EAAkBN,EAAUC,CAAQ,EACpCM,EAAaP,EAAUE,CAAI,EAC3BM,EAAcR,EAAUG,EAAG,KAAK,EAChCM,EAAgBT,EAAUG,EAAG,OAAO,EACpCO,EAAeV,EAAUG,EAAG,MAAM,EAClCQ,EAAkBX,EAAUG,EAAG,SAAS,EAExCS,EAA4B,SAAY,CAC5C,GAAI,CACF,MAAMC,EAAqB,KACrBC,EAAkB,uBAAuBD,CAAkB,OAC3DE,EAAoBV,EAAK,KAAKD,EAAG,QAAQ,EAAG,YAAa,YAAa,aAAc,KAAK,EACzFY,EAAeX,EAAK,KAAKU,EAAmB,KAAK,EACjDE,EAAsBZ,EAAK,KAAKW,EAAc,UAAU,EAG9D,GAAI,CACF,MAAMN,EAAaO,EAAqBd,EAAG,UAAU,IAAI,EACzD,MACF,MAAgB,CAEhB,CAEA,QAAQ,OAAO,MAAM,mEAAmE,EAGxF,MAAMG,EAAgB,OAAQ,CAAC,UAAW,UAAW,KAAM,MAAM,CAAC,EAGlE,MAAMA,EAAgB,OAAQ,CAAC,KAAM,KAAM,qHAAqH,CAAC,EAGjK,KAAM,CAAE,OAAQY,CAAW,EAAI,MAAMX,EAAW,8DAA8D,EAGxGY,EAAc,+BACpB,MAAMR,EAAgBQ,EAAaD,CAAU,EAG7C,MAAMZ,EAAgB,OAAQ,CAAC,UAAW,MAAOa,CAAW,CAAC,EAG7D,MAAMb,EAAgB,KAAM,CAACa,CAAW,CAAC,EAGzC,MAAMb,EAAgB,OAAQ,CAAC,UAAW,QAAQ,CAAC,EACnD,MAAMA,EAAgB,OAAQ,CAAC,UAAW,UAAW,KAAM,cAAcO,CAAkB,GAAI,qBAAqBA,CAAkB,GAAI,yBAAyBA,CAAkB,EAAE,CAAC,EAExL,MAAML,EAAYO,EAAmB,CAAE,UAAW,EAAK,CAAC,EAExD,GAAI,CACF,MAAMN,EAAcK,EAAiBE,CAAY,CACnD,OAASI,EAAe,CACtB,GAAIA,EAAc,OAAS,SACzB,cAAQ,MAAM,0BAA2BA,CAAa,EAChDA,CAEV,CAEA,GAAI,CACF,MAAMV,EAAaO,EAAqBd,EAAG,UAAU,IAAI,CAC3D,OAASkB,EAAc,CACrB,cAAQ,MAAM,yCAA0CA,CAAY,EAC9DA,CACR,CAEA,QAAQ,OAAO,MAAM,uBAAuB,CAC9C,OAASC,EAAO,CACd,cAAQ,MAAM,+BAAgCA,CAAK,EAC7CA,CACR,CACF,EAEA,IAAOC,EAAQX",
  "names": ["promisify", "execFile", "exec", "fs", "os", "path", "exec_file_async", "exec_async", "mkdir_async", "symlink_async", "access_async", "writeFile_async", "download_postgresql_linux", "postgresql_version", "system_bin_path", "joystick_bin_path", "symlink_path", "postgres_executable", "keyContent", "tempKeyPath", "symlink_error", "access_error", "error", "linux_default"]
}
