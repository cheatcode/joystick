import t from"fs";import i from"path";import y from"os";import{promisify as g}from"util";import{pipeline as x}from"stream";import{execFile as k}from"child_process";const j=g(x),c=g(k),v=async(n=null)=>{const o=i.join(y.homedir(),".joystick","databases","mongodb"),s=i.join(o,"bin");if(await z(o))return;await M(o,s);const m=(await D()).includes("ARM"),d=m?"https://fastdl.mongodb.org/osx/mongodb-macos-arm64-7.0.2.tgz":"https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-7.0.2.tgz",p=m?"https://downloads.mongodb.com/compass/mongosh-2.2.12-darwin-arm64.zip":"https://downloads.mongodb.com/compass/mongosh-2.2.12-darwin-x64.zip",_=i.basename(new URL(d).pathname),a=i.join(o,_),f=i.basename(new URL(p).pathname),r=i.join(o,f);process.loader.print("MongoDB not found. Downloading... (patience is a virtue\u2014it's chonky)"),await h(d,a),await h(p,r),process.loader.print("Installing MongoDB..."),await c("tar",["-xzf",a,"-C",s,"--strip-components=1"]);const e=i.join(o,"mongosh_temp");await t.promises.mkdir(e,{recursive:!0}),await c("unzip",["-q",r,"-d",e]);const l=(await t.promises.readdir(e)).find(b=>b.startsWith("mongosh-"));if(!l)throw new Error("Could not find mongosh directory in extracted contents");const w=i.join(e,l,"bin","mongosh"),u=i.join(s,"mongosh");await t.promises.copyFile(w,u),await t.promises.unlink(a),await t.promises.unlink(r),await t.promises.rm(e,{recursive:!0,force:!0}),await B(s),process.loader.print("MongoDB and MongoDB Shell installed!")},h=async(n,o)=>{const s=await fetch(n);if(!s.ok)throw new Error(`Failed to download: ${s.statusText}`);await j(s.body,t.createWriteStream(o))},z=async n=>{try{return await t.promises.access(n),!0}catch{return!1}},D=async()=>{const{stdout:n}=await c("sysctl",["-n","machdep.cpu.brand_string"]);return n.trim()},M=async(n,o)=>{await t.promises.mkdir(n,{recursive:!0}),await t.promises.mkdir(o,{recursive:!0})},B=async n=>{const o=await t.promises.readdir(n);for(const s of o)await t.promises.chmod(i.join(n,s),"755")};var W=v;export{W as default};
