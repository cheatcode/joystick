import n from"fs";import s from"path";import b from"os";import{promisify as f}from"util";import{pipeline as y}from"stream";import{execFile as x}from"child_process";const j=f(y),m=f(x),k=async()=>{const o=s.join(b.homedir(),".joystick","databases","mongodb"),t=s.join(o,"bin");if(await c(o))return;await z(o,t);const p=(await D()).includes("ARM"),d=p?"https://fastdl.mongodb.org/osx/mongodb-macos-arm64-7.0.2.tgz":"https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-7.0.2.tgz",l=p?"https://downloads.mongodb.com/compass/mongosh-2.2.12-darwin-arm64.zip":"https://downloads.mongodb.com/compass/mongosh-2.2.12-darwin-x64.zip",w=s.basename(new URL(d).pathname),i=s.join(o,w),h=s.basename(new URL(l).pathname),e=s.join(o,h);await c(i)||(process.loader.print("MongoDB not found. Downloading..."),await g(d,i)),await c(e)||(process.loader.print("MongoDB Shell not found. Downloading..."),await g(l,e)),process.loader.print("Installing MongoDB..."),await m("tar",["-xzf",i,"-C",t,"--strip-components=1"]);const r=s.join(o,"mongosh_temp");await n.promises.mkdir(r,{recursive:!0}),await m("unzip",["-q",e,"-d",r]);const _=s.join(r,"mongosh"),u=s.join(t,"bin","mongosh");await n.promises.copyFile(_,u),await n.promises.unlink(i),await n.promises.unlink(e),await n.promises.rm(r,{recursive:!0,force:!0}),await M(t),process.loader.print("MongoDB and MongoDB Shell installed!")},g=async(o,t)=>{const a=await fetch(o);if(!a.ok)throw new Error(`Failed to download: ${a.statusText}`);await j(a.body,n.createWriteStream(t))},c=async o=>{try{return await n.promises.access(o),!0}catch{return!1}},D=async()=>{const{stdout:o}=await m("sysctl",["-n","machdep.cpu.brand_string"]);return o.trim()},z=async(o,t)=>{await n.promises.mkdir(o,{recursive:!0}),await n.promises.mkdir(t,{recursive:!0})},M=async o=>{const t=await n.promises.readdir(o);for(const a of t)await n.promises.chmod(s.join(o,a),"755");await n.promises.chmod(s.join(o,"bin","mongosh"),"755")};var L=k;export{L as default};
