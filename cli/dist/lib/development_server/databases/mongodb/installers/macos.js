import o from"fs";import i from"path";import k from"os";import{promisify as w}from"util";import{pipeline as j}from"stream";import{execFile as v}from"child_process";const z=w(j),c=w(v),D=async(s=null)=>{const t=i.join(k.homedir(),".joystick","databases","mongodb"),n=i.join(t,"bin"),a=i.join(n,"bin");if(await F(t))return;await B(t,n,a);const d=(await M()).includes("ARM"),p=d?"https://fastdl.mongodb.org/osx/mongodb-macos-arm64-7.0.2.tgz":"https://fastdl.mongodb.org/osx/mongodb-macos-x86_64-7.0.2.tgz",l=d?"https://downloads.mongodb.com/compass/mongosh-2.2.12-darwin-arm64.zip":"https://downloads.mongodb.com/compass/mongosh-2.2.12-darwin-x64.zip",h=i.basename(new URL(p).pathname),r=i.join(t,h),u=i.basename(new URL(l).pathname),m=i.join(t,u);process.loader.print("MongoDB not found. Downloading... (this may take a few minutes)"),await f(p,r),await f(l,m),process.loader.print("Installing MongoDB..."),await c("tar",["-xzf",r,"-C",n,"--strip-components=1"]);const e=i.join(t,"mongosh_temp");await o.promises.mkdir(e,{recursive:!0}),await c("unzip",["-q",m,"-d",e]);const _=(await o.promises.readdir(e)).find(x=>x.startsWith("mongosh-"));if(!_)throw new Error("Could not find mongosh directory in extracted contents");const b=i.join(e,_,"bin","mongosh"),y=i.join(a,"mongosh");await o.promises.copyFile(b,y),await o.promises.unlink(r),await o.promises.unlink(m),await o.promises.rm(e,{recursive:!0,force:!0}),await g(n),await g(a),process.loader.print("MongoDB installed!")},f=async(s,t)=>{const n=await fetch(s);if(!n.ok)throw new Error(`Failed to download: ${n.statusText}`);await z(n.body,o.createWriteStream(t))},F=async s=>{try{return await o.promises.access(s),!0}catch{return!1}},M=async()=>{const{stdout:s}=await c("sysctl",["-n","machdep.cpu.brand_string"]);return s.trim()},B=async(s,t,n)=>{await o.promises.mkdir(s,{recursive:!0}),await o.promises.mkdir(t,{recursive:!0}),await o.promises.mkdir(n,{recursive:!0})},g=async s=>{const t=await o.promises.readdir(s);for(const n of t)await o.promises.chmod(i.join(s,n),"755")};var I=D;export{I as default};
//# sourceMappingURL=macos.js.map
