import p from"child_process";import r from"fs";import b from"os";import a from"path";import j from"../../../get_platform_safe_path.js";import w from"../../../get_process_id_from_port.js";import k from"../../../kill_port_process.js";import g from"../../../path_exists.js";import x from"../../../get_architecture.js";const{rename:$,mkdir:v}=r.promises,S=()=>process.platform==="win32"?"mongosh.exe":"mongosh",q=()=>process.platform==="win32"?"mongod.exe":"mongod",P=(o=2610)=>new Promise(t=>{const s=q(),u=x(),n=a.join(b.homedir(),".joystick","databases","mongodb",u),d=a.join(n,"bin",s),y=a.join(n,s);!r.existsSync(d)&&r.existsSync(y)&&(console.log(`
\u{1F504} MongoDB binary structure has been updated to include required shared libraries.`),console.log("Please remove the old database binaries and restart your app:"),console.log(`
  rm -rf ~/.joystick/databases
`),console.log("The new binaries will be automatically downloaded on next startup."),process.exit(1));const f=["--port",o,"--dbpath",j(`./.joystick/data/mongodb_${o}`),"--quiet","--replSet",`joystick_${o}`],m=p.spawn(d,f.filter(e=>!!e));m.stdout.on("data",async e=>{if((e?.toString()).includes("Waiting for connections")){const l=S();let i=a.join(n,"bin",l);r.existsSync(i)||(i=a.join(n,l)),p.exec(`${i} --eval "rs.initiate()" --verbose --port ${o}`,async(c,D,I)=>{c&&!c?.message?.includes("already initialized")&&console.log(c);const h=await w(o);return t(parseInt(h,10))})}}),m.stderr.on("data",async e=>{const _=e.toString();console.log(_)})}),z=async(o=2610)=>{const t=await g(".joystick/data/mongodb"),s=await g(`.joystick/data/mongodb_${o}`);return t&&!s&&await $(".joystick/data/mongodb",`.joystick/data/mongodb_${o}`),s||await v(`.joystick/data/mongodb_${o}`,{recursive:!0}),s},B=async(o=2610)=>{await z(o);try{return await k(o),await P(o)}catch(t){console.warn(t),process.exit(1)}};var J=B;export{J as default};
//# sourceMappingURL=index.js.map
