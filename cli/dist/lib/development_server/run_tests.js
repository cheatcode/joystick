import a from"child_process";import r from"../cli_log.js";const i=(e="")=>{if(e?.includes("Using configuration"))return null;if(e?.includes("No tests found"))return r("No tests found. Add tests in the /tests folder at the root of your Joystick app.",{level:"danger",docs:"https://cheatcode.co/docs/joystick/test/setup"});console.log(e)},d=(e="")=>{if(e?.includes("Using configuration"))return null;if(e?.includes("No tests found in")){const[s]=e?.split(",");return console.log(`${s}
`)}console.log(e)},l=(e={},s={})=>{e.stdout.on("data",function(o){const n=o.toString();d(n,s)}),e.stderr.on("data",function(o){const n=o.toString();i(n,s)})},f=(e={})=>{const s=`${process.cwd()}/node_modules/.bin/ava`,o=`${e?.__dirname}/tap_reporter.js`;return new Promise(n=>{const c=a.exec(`DEBUG=ava:watcher && ${s} --config ${e?.__dirname}/ava_config.js --tap ${e?.watch?"--watch":""} | node ${o}`,{stdio:"inherit",env:{...process.env,databases:process.databases,FORCE_COLOR:"1"}},t=>{t?(e.cleanup_process.send(JSON.stringify({process_ids:e?.process_ids})),process.exit(0)):(e.cleanup_process.send(JSON.stringify({process_ids:e?.process_ids})),process.exit(0))});l(c,e)})};var u=f;export{u as default};
//# sourceMappingURL=run_tests.js.map
