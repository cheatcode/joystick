import i from"child_process";import l from"../cli_log.js";import"chalk";const g=(e="")=>{if(e?.includes("Using configuration"))return null;if(e?.includes("No tests found"))return l("No tests found. Add tests in the /tests folder at the root of your Joystick app.",{level:"danger",docs:"https://cheatcode.co/docs/joystick/test/setup"});console.log(e)},f=(e="")=>{if(e?.includes("Using configuration"))return null;if(e?.includes("No tests found in")){const[o]=e?.split(",");return console.log(`${o}
`)}console.log(e)},_=(e={},o={})=>{e.stdout.on("data",function(n){const r=n.toString();f(r,o)}),e.stderr.on("data",function(n){const r=n.toString();g(r,o)})},u=(e={})=>{const o=`${process.cwd()}/node_modules/.bin/ava`,n=`${e?.__dirname}/tap_reporter.js`;return new Promise((r,d)=>{const a=i.spawn(o,["--config",`${e?.__dirname}/ava_config.js`,"--tap"],{env:{...process.env,databases:process.databases,FORCE_COLOR:"1"}}),t=i.spawn("node",[n],{env:{...process.env,FORCE_COLOR:"1"}});a.stdout.pipe(t.stdin),t.stdout.on("data",s=>{process.stdout.write(s)}),t.stderr.on("data",s=>{process.stderr.write(s)}),a.stderr.on("data",s=>{s.toString().includes("Using configuration")||process.stderr.write(s)}),a.on("exit",(s,c)=>{t.stdin.end()}),t.on("exit",(s,c)=>{r()}),a.on("error",s=>{console.error("Test runner error:",s.message),r()}),t.on("error",s=>{console.error("TAP reporter error:",s.message),r()})})},m=(e={})=>{const o=`${process.cwd()}/node_modules/.bin/ava`,n=`${e?.__dirname}/tap_reporter.js`;return new Promise(r=>{const d=`DEBUG=ava:watcher && ${o} --config ${e?.__dirname}/ava_config.js`,a=e?.watch?"--watch":"",t=e?.watch?"":`--tap | node ${n}`,s=`${d} ${a} ${t}`,c=i.exec(s,{stdio:"inherit",env:{...process.env,databases:process.databases,FORCE_COLOR:"1"}},p=>{p?(e.cleanup_process.send(JSON.stringify({process_ids:e?.process_ids})),process.exit(0)):(e.cleanup_process.send(JSON.stringify({process_ids:e?.process_ids})),process.exit(0))});_(c,e)})};var O=m;export{O as default,u as run_tests_integrated};
//# sourceMappingURL=run_tests.js.map
