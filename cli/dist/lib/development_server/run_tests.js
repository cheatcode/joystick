import l from"child_process";import f from"../cli_log.js";const p=(e="")=>{if(e?.includes("Using configuration"))return null;if(e?.includes("No tests found"))return f("No tests found. Add tests in the /tests folder at the root of your Joystick app.",{level:"danger",docs:"https://cheatcode.co/docs/joystick/test/setup"});console.log(e)},g=(e="")=>{if(e?.includes("Using configuration"))return null;if(e?.includes("No tests found in")){const[s]=e?.split(",");return console.log(`${s}
`)}console.log(e)},h=(e={},s={})=>{e.stdout.on("data",function(o){const c=o.toString();g(c,s)}),e.stderr.on("data",function(o){const c=o.toString();p(c,s)})},u=(e={})=>{const s=`${process.cwd()}/node_modules/.bin/ava`,o=`${e?.__dirname}/tap_reporter.js`;return new Promise(c=>{const n=`DEBUG=ava:watcher && ${s} --config ${e?.__dirname}/ava_config.js`,a=e?.watch?"--watch":"",t=e?.watch?"":`--tap | node ${o}`,r=`${n} ${a} ${t}`,i=l.exec(r,{stdio:"inherit",env:{...process.env,databases:process.databases,FORCE_COLOR:"1"}},d=>{d?(e.cleanup_process.send(JSON.stringify({process_ids:e?.process_ids})),process.exit(0)):(e.cleanup_process.send(JSON.stringify({process_ids:e?.process_ids})),process.exit(0))});h(i,e)})};var v=u;export{v as default};
//# sourceMappingURL=run_tests.js.map
