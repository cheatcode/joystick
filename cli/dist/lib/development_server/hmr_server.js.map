{
  "version": 3,
  "sources": ["../../../src/lib/development_server/hmr_server.js"],
  "sourcesContent": ["import queryString from 'query-string';\nimport { WebSocketServer } from \"ws\";\nimport generate_id from \"../generate_id.js\";\nimport get_translations from './get_translations.js';\n\nprocess.title = 'joystick_hmr';\n\nexport default (() => {\n  const websocket_server = new WebSocketServer({\n    port: parseInt(process.env.PORT, 10) + 1,\n    path: \"/_joystick/hmr\",\n  });\n\n  process.on(\"message\", async (message) => {\n    const parsed_message = JSON.parse(message);\n\n    if (typeof process.HMR_CONNECTIONS === \"object\" && !!parsed_message?.type) {\n      const connections = Object.values(process.HMR_CONNECTIONS);\n\n      for (let i = 0; i < connections?.length; i += 1) {\n        const connection = connections[i];\n\n        if (connection?.connection?.send) {\n          if (parsed_message?.type === 'BUILD_ERROR') {\n            connection.connection.send(JSON.stringify({ type: 'BUILD_ERROR' }));\n          }\n\n          if (parsed_message?.type === 'FILE_CHANGE') {\n            connection.connection.send(\n              JSON.stringify({\n                type: \"FILE_CHANGE\",\n                settings: parsed_message?.settings ? {\n                  global: parsed_message?.settings?.global,\n                  public: parsed_message?.settings?.public,\n                } : null,\n                i18n: parsed_message?.i18n_change ? await get_translations('.joystick/build', connection?.page_component_path, {\n                  headers: {\n                    'accept-language': connection?.browser_language,\n                  },\n                  context: {\n                    user: {\n                      language: connection?.user_language,\n                    },\n                  }\n                }) : null,\n                index_html_changed: parsed_message?.index_html_change,\n                index_css_changed: parsed_message?.index_css_change,\n                index_client_changed: parsed_message?.index_client_change,\n              })\n            );\n          }\n        }\n      }\n    }\n  });\n\n  websocket_server.on(\"connection\", function connection(websocket_connection, connection_request = {}) {\n    const connection_id = generate_id(16);\n    const [_path, params] = connection_request?.url?.split(\"?\");\n    const connection_params = queryString.parse(params);\n\n    process.HMR_CONNECTIONS = {\n      ...(process.HMR_CONNECTIONS || {}),\n      [connection_id]: {\n        connection: websocket_connection,\n        browser_language: connection_params?.browser_language,\n        user_language: connection_params?.user_language,\n        page_component_path: connection_params?.page_component_path,\n      },\n    };\n\n    if (Object.keys(process.HMR_CONNECTIONS || {})?.length > 0) {\n      process.send({ type: \"HAS_HMR_CONNECTIONS\" });\n    }\n\n    websocket_connection.on(\"message\", (message) => {\n      const parsed_message = JSON.parse(message);\n\n      if (parsed_message?.type === \"HMR_UPDATE_COMPLETE\") {\n        process.send({ type: \"HMR_UPDATE_COMPLETE\" });\n      }\n    });\n\n    websocket_connection.on(\"close\", () => {\n      if (process.HMR_CONNECTIONS[connection_id]) {\n        delete process.HMR_CONNECTIONS[connection_id];\n\n        if (Object.keys(process.HMR_CONNECTIONS || {})?.length === 0) {\n          process.send({ type: \"HAS_NO_HMR_CONNECTIONS\" });\n        }\n      }\n    });\n  });\n})();\n"],
  "mappings": "AAAA,OAAOA,MAAiB,eACxB,OAAS,mBAAAC,MAAuB,KAChC,OAAOC,MAAiB,oBACxB,OAAOC,MAAsB,wBAE7B,QAAQ,MAAQ,eAEhB,IAAOC,GAAS,IAAM,CACpB,MAAMC,EAAmB,IAAIJ,EAAgB,CAC3C,KAAM,SAAS,QAAQ,IAAI,KAAM,EAAE,EAAI,EACvC,KAAM,gBACR,CAAC,EAED,QAAQ,GAAG,UAAW,MAAOK,GAAY,CACvC,MAAMC,EAAiB,KAAK,MAAMD,CAAO,EAEzC,GAAI,OAAO,QAAQ,iBAAoB,UAAcC,GAAgB,KAAM,CACzE,MAAMC,EAAc,OAAO,OAAO,QAAQ,eAAe,EAEzD,QAASC,EAAI,EAAGA,EAAID,GAAa,OAAQC,GAAK,EAAG,CAC/C,MAAMC,EAAaF,EAAYC,CAAC,EAE5BC,GAAY,YAAY,OACtBH,GAAgB,OAAS,eAC3BG,EAAW,WAAW,KAAK,KAAK,UAAU,CAAE,KAAM,aAAc,CAAC,CAAC,EAGhEH,GAAgB,OAAS,eAC3BG,EAAW,WAAW,KACpB,KAAK,UAAU,CACb,KAAM,cACN,SAAUH,GAAgB,SAAW,CACnC,OAAQA,GAAgB,UAAU,OAClC,OAAQA,GAAgB,UAAU,MACpC,EAAI,KACJ,KAAMA,GAAgB,YAAc,MAAMJ,EAAiB,kBAAmBO,GAAY,oBAAqB,CAC7G,QAAS,CACP,kBAAmBA,GAAY,gBACjC,EACA,QAAS,CACP,KAAM,CACJ,SAAUA,GAAY,aACxB,CACF,CACF,CAAC,EAAI,KACL,mBAAoBH,GAAgB,kBACpC,kBAAmBA,GAAgB,iBACnC,qBAAsBA,GAAgB,mBACxC,CAAC,CACH,EAGN,CACF,CACF,CAAC,EAEDF,EAAiB,GAAG,aAAc,SAAoBM,EAAsBC,EAAqB,CAAC,EAAG,CACnG,MAAMC,EAAgBX,EAAY,EAAE,EAC9B,CAACY,EAAOC,CAAM,EAAIH,GAAoB,KAAK,MAAM,GAAG,EACpDI,EAAoBhB,EAAY,MAAMe,CAAM,EAElD,QAAQ,gBAAkB,CACxB,GAAI,QAAQ,iBAAmB,CAAC,EAChC,CAACF,CAAa,EAAG,CACf,WAAYF,EACZ,iBAAkBK,GAAmB,iBACrC,cAAeA,GAAmB,cAClC,oBAAqBA,GAAmB,mBAC1C,CACF,EAEI,OAAO,KAAK,QAAQ,iBAAmB,CAAC,CAAC,GAAG,OAAS,GACvD,QAAQ,KAAK,CAAE,KAAM,qBAAsB,CAAC,EAG9CL,EAAqB,GAAG,UAAYL,GAAY,CACvB,KAAK,MAAMA,CAAO,GAErB,OAAS,uBAC3B,QAAQ,KAAK,CAAE,KAAM,qBAAsB,CAAC,CAEhD,CAAC,EAEDK,EAAqB,GAAG,QAAS,IAAM,CACjC,QAAQ,gBAAgBE,CAAa,IACvC,OAAO,QAAQ,gBAAgBA,CAAa,EAExC,OAAO,KAAK,QAAQ,iBAAmB,CAAC,CAAC,GAAG,SAAW,GACzD,QAAQ,KAAK,CAAE,KAAM,wBAAyB,CAAC,EAGrD,CAAC,CACH,CAAC,CACH,GAAG",
  "names": ["queryString", "WebSocketServer", "generate_id", "get_translations", "hmr_server_default", "websocket_server", "message", "parsed_message", "connections", "i", "connection", "websocket_connection", "connection_request", "connection_id", "_path", "params", "connection_params"]
}
