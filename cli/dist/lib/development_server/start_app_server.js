import n from"child_process";import O from"path";const a=(t=[],c=!1,r={})=>{const e=r.NODE_ENV||process.env.NODE_ENV;e!=="test"&&process.loader.print("Starting app..."),e==="test"&&console.log(r);const s={FORCE_COLOR:"1",LOGS_PATH:r.LOGS_PATH||process.env.LOGS_PATH,NODE_ENV:e,ROOT_URL:r.ROOT_URL||process.env.ROOT_URL,PORT:r.PORT||process.env.PORT,JOYSTICK_SETTINGS:r.JOYSTICK_SETTINGS||process.env.JOYSTICK_SETTINGS};return n.fork(O.resolve(".joystick/build/index.server.js"),[],{execArgv:t,silent:!0,env:s})},i=(t=0,c=[],r={})=>{const e=["--no-warnings"],s=r.NODE_ENV||process.env.NODE_ENV,p=r.IS_DEBUG_MODE||process.env.IS_DEBUG_MODE;s==="development"&&e.push("--dns-result-order=ipv4first"),t<19&&e.push("--experimental-specifier-resolution=node"),s==="development"&&p==="true"&&e.push("--inspect");for(let o=0;o<c?.length;o+=1){const _=c[o];e.push("--import",_)}return e},E=(t=0,c=!1,r=[],e={})=>{const s=i(t,r,e);return a(s,c,e)};var v=E;export{v as default};
//# sourceMappingURL=start_app_server.js.map
