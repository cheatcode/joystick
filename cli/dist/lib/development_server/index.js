import _ from"chalk";import y from"child_process";import b from"fs";import"os";import w,{dirname as k}from"path";import{fileURLToPath as S}from"url";import T from"util";import f from"./check_if_port_occupied.js";import i from"../cli_log.js";import d from"./get_database_process_ids.js";import D from"../get_platform_safe_path.js";import m from"../kill_port_process.js";import g from"../load_settings.js";import $ from"../loader.js";import l from"../path_exists.js";import E from"../required_files.js";import j from"./start_app_server.js";import R from"./start_databases.js";import I from"./start_hmr_server.js";import H from"./watch_for_changes/index.js";import C from"../constants.js";import N from"./kill_process_ids.js";import M,{run_tests_integrated as v}from"./run_tests.js";import V from"../debounce.js";import A from"./databases/download_database_binary.js";const{stat:P}=b.promises,q=T.promisify(y.exec),n=parseInt(process?.version?.split(".")[0]?.replace("v",""),10),L=S(import.meta.url),p=k(L),h=[],G=async(s=!1)=>{const t=d();await M({watch:s,__dirname:p,process_ids:[...h,...t],cleanup_process:process.cleanup_process})},J=(s=[],t=0,r="")=>{const c=["--no-warnings"];t<19&&c.push("--experimental-specifier-resolution=node");const e=y.fork(w.resolve(`${r}/cleanup.js`),[],{detached:!0,silent:!0});process.cleanup_process=e,process.on("SIGINT",async()=>{const o=d();e.send(JSON.stringify({process_ids:[...s,...o]})),process.exit()}),process.on("SIGTERM",async()=>{const o=d();e.send(JSON.stringify({process_ids:[...s,...o]})),process.exit()})},U=async(s=[])=>{const t=s?.find(a=>a?.path?.match(C.SETTINGS_FILE_NAME_REGEX)?.length>0),r=s?.find(a=>a?.path?.includes("i18n")),c=s?.find(a=>a?.path?.includes("index.html")),e=s?.find(a=>a?.path?.includes("index.css")||a?.path?.includes("css/")),o=s?.find(a=>a?.path?.includes("index.client.js"));process.hmr_server_process.send(JSON.stringify({type:"FILE_CHANGE",settings:t?await g(process.env.NODE_ENV):null,i18n_change:!!r,index_html_change:!!c,index_css_change:!!e,index_client_change:!!o}))},F=(s=0,t=!1,r={},c=[],e=!1)=>{process.hmr_server_process.on("message",async o=>{["HAS_HMR_CONNECTIONS","HAS_NO_HMR_CONNECTIONS","HMR_UPDATE_COMPLETE"].includes(o?.type)||process.loader.print(o),o?.type==="HAS_HMR_CONNECTIONS"&&(process.hmr_server_process.has_connections=!0),o?.type==="HAS_NO_HMR_CONNECTIONS"&&(process.hmr_server_process.has_connections=!1),o?.type==="HMR_UPDATE_COMPLETE"&&process.app_server_process&&!process.app_server_restarting&&(process.app_server_restarting=!0,O(s,t,r,c,e))})},B=()=>{process.hmr_server_process.on("error",s=>{i(s.toString(),{level:"danger",docs:"https://github.com/cheatcode/joystick"})}),process.hmr_server_process.stdout.on("data",s=>{console.log(s.toString())}),process.hmr_server_process.stderr.on("data",s=>{i(s.toString(),{level:"danger",docs:"https://github.com/cheatcode/joystick"})})},z=(s=0,t="",r=!1,c={},e=[],o=!1)=>{process.hmr_server_process=I(s,t),h.push(process.hmr_server_process?.pid),B(),F(s,r,c,e,o)},X=async(s={})=>{const t=await g(process.env.NODE_ENV),r=t?.config?.databases?JSON.stringify(t?.config?.databases):"",c=s?.config?.databases?JSON.stringify(s?.config?.databases):"";return r!==c},O=async(s=0,t=!1,r=null,c=[],e=!1)=>{V(async()=>{if(await X(r)){const a=d();i(`Database configuration has changed in settings.${process.env.NODE_ENV}.json. Please restart your app to add, change, or remove databases.`,{level:"danger",docs:"https://cheatcode.co/docs/joystick/structure"}),N([process.hmr_server_process?.pid,process.app_server_process?.pid,...a]),process.exit(0)}else N([...process.app_server_process.external_process_ids||[]]),await m(process.env.PORT),u(s,t,c,e)},300)},K=(s=!1,t=!1,r=!1)=>{process.app_server_process.external_process_ids=[],process.app_server_process.on("message",c=>{c?.external_process_id&&(process.app_server_process.external_process_ids=[...process.app_server_process.external_process_ids||[],c?.external_process_id])}),process.app_server_process.on("error",c=>{r||i(c.toString(),{level:"danger",docs:"https://github.com/cheatcode/joystick"})}),process.app_server_process.stdout.on("data",async c=>{const e=c.toString(),o=e.includes("App running at:");r||(e&&o&&process.env.NODE_ENV!=="test"&&process.loader.print(e),e&&!o&&!e.includes("BUILD_ERROR")&&console.log(e),e&&o&&process.env.NODE_ENV==="test"&&G(s),e&&o&&t&&process.env.NODE_ENV!=="test"&&setTimeout(async()=>{try{await v({__dirname:p})}catch(a){console.error("Error running integrated tests:",a)}},2e3))}),process.app_server_process.stderr.on("data",c=>{r||i(c.toString(),{level:"danger",docs:"https://cheatcode.co/docs/joystick"})})},u=(s=0,t=!1,r=[],c=!1,e=!1)=>{process.app_server_process=j(s,t,r),h.push(process.app_server_process?.pid),K(t,c,e),process.app_server_restarting=!1},Q=async(s={})=>{const t=s?.config?.databases?.map((r={})=>r?.provider);for(let r=0;r<t?.length;r+=1){const c=t[r];await A(c)}},W=(s={},t=2600)=>{process.title=s?.environment==="test"?"joystick_test":"joystick",process.project_folder=w.basename(process.cwd()),process.loader=new $,s?.environment==="test"&&(console.log(""),process.loader.print(`Initializing test environment...
`)),process.env.LOGS_PATH=s?.logs||null,process.env.NODE_ENV=s?.environment||"development",process.env.PORT=t,process.env.IS_DEBUG_MODE=s?.debug},Y=(s=2600)=>{i(`Port ${s} is already occupied. To start Joystick on this port, clear it and try again.`,{level:"danger"}),process.exit(0)},Z=(s=2600)=>parseInt(s||2600,10),ss=async()=>{const s=D(`${process.cwd()}/.joystick/build`);await l(s)&&await q(`${process.platform==="win32"?"rmdir /s /q":"rm -rf"} ${s}`)},es=async()=>{const s=[];for(let t=0;t<E?.length;t+=1){const r=E[t],c=await l(`${process.cwd()}/${r.path}`),e=c&&await P(`${process.cwd()}/${r.path}`);r&&r.type==="file"&&(!c||c&&!e.isFile())&&s.push({type:"file",path:r.path}),r&&r.type==="directory"&&(!c||c&&!e.isDirectory())&&s.push({type:"directory",path:r.path})}if(s?.length>0){const t=s?.filter(e=>e.type==="file"),r=s?.filter(e=>e.type==="directory");let c=`The following paths are missing and required in a Joystick project:

`;if(t?.length>0){c+=`  ${_.yellow(">")} Required Files:

`;for(let e=0;e<t?.length;e+=1){const o=t[e],a=e+1===t?.length;c+=`  ${_.red(`/${o.path}
${a&&r?.length>0?`
`:""}`)}`}}if(r?.length>0){c+=`  ${_.yellow(">")} Required Directories:

`;for(let e=0;e<r?.length;e+=1){const o=r[e];c+=`  ${_.red(`/${o.path}
`)}`}}i(c,{level:"danger",docs:"https://cheatcode.co/docs/joystick/structure"}),process.exit(0)}},ts=async()=>{const s=await l(`${process.cwd()}/.joystick`),t=await l(`${process.cwd()}/tests`);process.env.NODE_ENV==="test"&&(!s||!t)&&(i("joystick test must be run in a directory with a .joystick folder and tests folder.",{level:"danger",docs:"https://cheatcode.co/docs/joystick/cli/test"}),process.exit(0)),process.env.NODE_ENV!=="test"&&!s&&(i("joystick start must be run in a directory with a .joystick folder.",{level:"danger",docs:"https://cheatcode.co/docs/joystick/cli/start"}),process.exit(0))},x=async(s={})=>{await ts(),await es(),await ss();const t=Z(s?.port),r=await f(t),c=await f(t+1);r&&Y(t),c&&m(t),W(s,t);const e=await g(process.env.NODE_ENV);await Q(e),await R({environment:process.env.NODE_ENV,port:t,settings:e}),s?.tests&&s?.environment!=="test"&&(await f(1977)&&await m(1977),setTimeout(async()=>{try{await x({environment:"test",port:1977,watch:!1,imports:s?.imports||[],_is_test_server:!0})}catch(a){console.error("Error starting test server:",a)}},100)),s?._is_test_server?u(n,!1,s?.imports||[],!1,!0):H({hot_module_reload:(o=[])=>U(o),restart_app_server:()=>O(n,s?.watch,e,s?.imports,s?.tests),start_app_server:()=>u(n,s?.watch,s?.imports,s?.tests,s?._is_test_server),start_hmr_server:s?.environment!=="test"?()=>z(n,p,s?.watch,e,s?.imports,s?.tests):null,run_tests:s?.tests?async()=>{setTimeout(async()=>{try{await v({__dirname:p})}catch(o){console.error("Error running tests after file change:",o)}},1e3)}:null},{excluded_paths:e?.config?.build?.excluded_paths,custom_copy_paths:e?.config?.build?.copy_paths?.map(o=>({path:o}))||[]}),J(h,n,p)};var Ds=x;export{Ds as default};
//# sourceMappingURL=index.js.map
