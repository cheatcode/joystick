{
  "version": 3,
  "sources": ["../../src/lib/load_settings.js"],
  "sourcesContent": ["import fs from 'fs';\nimport cli_log from './cli_log.js';\nimport is_valid_json_string from './is_valid_json_string.js';\nimport path_exists from './path_exists.js';\n\nconst { readFile } = fs.promises;\n\nconst load_settings = async (environment = null, options = {}) => {\n  const settings_file_path = `${process.cwd()}/settings.${environment}.json`;\n  const has_settings_file = await path_exists(settings_file_path);\n\n  if (!has_settings_file) {\n    cli_log(`A settings file could not be found for this environment (${environment}). Create a settings.${environment}.json file at the root of your project and restart Joystick.`, {\n      level: 'danger',\n      docs: 'https://github.com/cheatcode/joystick#settings',\n    });\n\n    process.exit(0);\n  }\n\n  const raw_settings_file = await readFile(settings_file_path, \"utf-8\");\n  const is_valid_json = is_valid_json_string(raw_settings_file);\n\n  if (!is_valid_json) {\n    cli_log(`Failed to parse settings file. Double-check the syntax in your settings.${environment}.json file at the root of your project and restart Joystick.`, {\n      level: 'danger',\n      docs: 'https://github.com/cheatcode/joystick#settings',\n      tools: [\n        { title: 'JSON Linter', url: 'https://jsonlint.com/' }\n      ],\n    });\n    process.exit(0);\n  }\n\n  const settings_file = is_valid_json ? raw_settings_file : \"{}\";\n\n  // NOTE: Only set global process.env if not explicitly disabled\n  if (!options.skip_global_env) {\n    // NOTE: Child process will inherit this env var from this parent process.\n    process.env.JOYSTICK_SETTINGS = settings_file;\n  }\n\n  return {\n    settings: JSON.parse(settings_file),\n    raw_settings: settings_file\n  };\n};\n\nexport default load_settings;\n"],
  "mappings": "AAAA,OAAOA,MAAQ,KACf,OAAOC,MAAa,eACpB,OAAOC,MAA0B,4BACjC,OAAOC,MAAiB,mBAExB,KAAM,CAAE,SAAAC,CAAS,EAAIJ,EAAG,SAElBK,EAAgB,MAAOC,EAAc,KAAMC,EAAU,CAAC,IAAM,CAChE,MAAMC,EAAqB,GAAG,QAAQ,IAAI,CAAC,aAAaF,CAAW,QACzC,MAAMH,EAAYK,CAAkB,IAG5DP,EAAQ,4DAA4DK,CAAW,wBAAwBA,CAAW,+DAAgE,CAChL,MAAO,SACP,KAAM,gDACR,CAAC,EAED,QAAQ,KAAK,CAAC,GAGhB,MAAMG,EAAoB,MAAML,EAASI,EAAoB,OAAO,EAC9DE,EAAgBR,EAAqBO,CAAiB,EAEvDC,IACHT,EAAQ,2EAA2EK,CAAW,+DAAgE,CAC5J,MAAO,SACP,KAAM,iDACN,MAAO,CACL,CAAE,MAAO,cAAe,IAAK,uBAAwB,CACvD,CACF,CAAC,EACD,QAAQ,KAAK,CAAC,GAGhB,MAAMK,EAAgBD,EAAgBD,EAAoB,KAG1D,OAAKF,EAAQ,kBAEX,QAAQ,IAAI,kBAAoBI,GAG3B,CACL,SAAU,KAAK,MAAMA,CAAa,EAClC,aAAcA,CAChB,CACF,EAEA,IAAOC,EAAQP",
  "names": ["fs", "cli_log", "is_valid_json_string", "path_exists", "readFile", "load_settings", "environment", "options", "settings_file_path", "raw_settings_file", "is_valid_json", "settings_file", "load_settings_default"]
}
