{
  "version": 3,
  "sources": ["../../../src/lib/build/on_warn.js"],
  "sourcesContent": ["import chalk from \"chalk\";\nimport constants from \"../constants.js\";\nimport get_code_frame from \"./get_code_frame.js\";\nimport rainbow_road from '../rainbow_road.js';\n\nconst remove_location_data_from_stack_tree = (stack_trace = \"\") => {\n  return stack_trace.replace(constants.OBJECT_REGEX, \"\");\n};\n\nconst log_error = (warning = {}) => {\n  const snippet_lines = warning?.snippet?.split(`\\n`);\n\n  console.log('\\n');\n  console.log(`${rainbow_road()}\\n`);\n\n  if (warning.file) {\n    console.log(chalk.yellowBright(`Build Error in ${warning?.file}:\\n`));\n  }\n\n  if (snippet_lines && snippet_lines.length > 0) {\n    snippet_lines.forEach((line) => {\n      if (line.includes(`> ${warning.line} |`)) {\n        return console.log(`   ${chalk.red(line)}`);\n      }\n\n      return console.log(`   ${chalk.gray(line)}`);\n    });\n  }\n\n  if (warning?.stack) {\n    console.log(chalk.magentaBright(\"\\nStack Trace:\\n\"));\n    console.log(chalk.yellow(`   ${remove_location_data_from_stack_tree(warning?.stack)}\\n`));\n  }\n\n  process.loader.error(\n    \"Build error. Fix the error above to continue building your app.\"\n    );\n  console.log('\\n');\n  console.log(`${rainbow_road()}\\n`);\n};\n\nconst parse_warning = async (warning = {}, type = \"\") => {\n  if (type && type === \"BUILD_ERROR\") {\n    return {\n      file: warning?.file,\n      snippet: warning?.snippet ? await get_code_frame(warning.file, {\n        line: warning?.line,\n        column: warning?.column,\n      }) : '',\n      stack: warning?.stack,\n      line: warning?.line,\n      character: warning?.column,\n      message: warning?.message,\n    };\n  }\n\n  return null;\n};\n\nconst on_warn = async (warning) => {\n  const parsed_warning = await parse_warning(warning, \"BUILD_ERROR\");\n\n  if (parsed_warning) {\n    log_error(parsed_warning);\n  }\n\n  return parsed_warning;\n};\n\nexport default on_warn;\n"],
  "mappings": "AAAA,OAAOA,MAAW,QAClB,OAAOC,MAAe,kBACtB,OAAOC,MAAoB,sBAC3B,OAAOC,MAAkB,qBAEzB,MAAMC,EAAuC,CAACC,EAAc,KACnDA,EAAY,QAAQJ,EAAU,aAAc,EAAE,EAGjDK,EAAY,CAACC,EAAU,CAAC,IAAM,CAClC,MAAMC,EAAgBD,GAAS,SAAS,MAAM;AAAA,CAAI,EAElD,QAAQ,IAAI;AAAA,CAAI,EAChB,QAAQ,IAAI,GAAGJ,EAAa,CAAC;AAAA,CAAI,EAE7BI,EAAQ,MACV,QAAQ,IAAIP,EAAM,aAAa,kBAAkBO,GAAS,IAAI;AAAA,CAAK,CAAC,EAGlEC,GAAiBA,EAAc,OAAS,GAC1CA,EAAc,QAASC,GACjBA,EAAK,SAAS,KAAKF,EAAQ,IAAI,IAAI,EAC9B,QAAQ,IAAI,MAAMP,EAAM,IAAIS,CAAI,CAAC,EAAE,EAGrC,QAAQ,IAAI,MAAMT,EAAM,KAAKS,CAAI,CAAC,EAAE,CAC5C,EAGCF,GAAS,QACX,QAAQ,IAAIP,EAAM,cAAc;AAAA;AAAA,CAAkB,CAAC,EACnD,QAAQ,IAAIA,EAAM,OAAO,MAAMI,EAAqCG,GAAS,KAAK,CAAC;AAAA,CAAI,CAAC,GAG1F,QAAQ,OAAO,MACb,iEACA,EACF,QAAQ,IAAI;AAAA,CAAI,EAChB,QAAQ,IAAI,GAAGJ,EAAa,CAAC;AAAA,CAAI,CACnC,EAEMO,EAAgB,MAAOH,EAAU,CAAC,EAAGI,EAAO,KAC5CA,GAAQA,IAAS,cACZ,CACL,KAAMJ,GAAS,KACf,QAASA,GAAS,QAAU,MAAML,EAAeK,EAAQ,KAAM,CAC7D,KAAMA,GAAS,KACf,OAAQA,GAAS,MACnB,CAAC,EAAI,GACL,MAAOA,GAAS,MAChB,KAAMA,GAAS,KACf,UAAWA,GAAS,OACpB,QAASA,GAAS,OACpB,EAGK,KAGHK,EAAU,MAAOL,GAAY,CACjC,MAAMM,EAAiB,MAAMH,EAAcH,EAAS,aAAa,EAEjE,OAAIM,GACFP,EAAUO,CAAc,EAGnBA,CACT,EAEA,IAAOC,EAAQF",
  "names": ["chalk", "constants", "get_code_frame", "rainbow_road", "remove_location_data_from_stack_tree", "stack_trace", "log_error", "warning", "snippet_lines", "line", "parse_warning", "type", "on_warn", "parsed_warning", "on_warn_default"]
}
