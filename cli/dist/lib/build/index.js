import h from"chalk";import w from"child_process";import s from"fs";import{dirname as y}from"path";import $ from"util";import x from"./build_files.js";import z from"./get_files_to_build.js";import v from"./get_file_operation.js";import k from"./get_path_platform.js";import F from"./get_tar_ignore_list.js";import P from"../load_settings.js";import j from"../loader.js";import _ from"../path_exists.js";import B from"../../lib/encrypt_buffer.js";const{mkdir:S,copyFile:A,readFile:D,writeFile:L,readdir:M}=s.promises,l=$.promisify(w.exec),q=(r=[])=>r?.map(n=>({path:n,operation:v(n),platform:k(n)})),C=async(r={})=>{const n=new j,o=r?.type||"tar",c=r?.environment||"production";n.print(`Building app to ${o} for ${c}...`);const e=await P(c),u=e?.config?.build?.excluded_paths||e?.config?.build?.excludedPaths,m=await z(u),i=o==="tar"?".build/.tar":".build",p=q(m);await _(".build")&&await l("rm -rf .build"),console.log(e?.config?.build?.copy_paths);const d=e?.config?.build?.copy_paths?.length>0?await Promise.all(e?.config?.build?.copy_paths?.filter(t=>s.existsSync(t))?.flatMap(async(t="")=>(s.lstatSync(t).isDirectory()?await M(t,{recursive:!0}):[t])?.map(g=>({path:g})))):[];console.log({custom_copy_paths:d});const f=[...p?.filter(t=>t?.operation==="copy_file"),...d||[]],b=p?.filter(t=>t?.operation==="build_file");for(let t=0;t<f?.length;t+=1){const a=f[t];await S(y(`${i}/${a?.path}`),{recursive:!0}),await A(a?.path,`${i}/${a?.path}`)}if(await x({files:b,environment:c,output_path:i}).catch(t=>{console.warn(t)}),o==="tar"){const t=F(e?.config?.build?.excludedPaths);await l(`cd ${i} && tar --exclude=${t} -czf ../build.tar.gz .`),await l(`rm -rf ${i}`)}if(o==="tar"&&r?.encrypt_build){const t=i?.replace("/.tar","/build.tar.gz"),a=B(await D(t),r?.encryption_key);await L(".build/build.encrypted.tar.gz",a)}r?.silence_confirmation||console.log(h.greenBright(`
\u2714 App built as ${o} to ${o==="tar"?i?.replace("/.tar","/build.tar.gz"):i}!
`)),await _(".build/component_id_cache.json")&&await l("rm -rf .build/component_id_cache.json")};var Y=C;export{Y as default};
