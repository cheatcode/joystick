{
  "version": 3,
  "sources": ["../../../src/lib/build/copy_paths.js"],
  "sourcesContent": ["const copy_paths = [\n  { path: \"css\", regex: new RegExp(process.platform === 'win32' ? /^css\\\\/ : /^css\\//) },\n  { path: \"i18n\", regex: new RegExp(process.platform === 'win32' ? /^i18n\\\\/ : /^i18n\\//) },\n  { path: \"public\", regex: new RegExp(process.platform === 'win32' ? /^public\\\\/ : /^public\\//) },\n  { path: \"private\", regex: new RegExp(process.platform === 'win32' ? /^private\\\\/ : /^private\\//) },\n  { path: \"index.html\", regex: new RegExp(/^index.html/) },\n  { path: \"index.css\", regex: new RegExp(/^index.css/) },\n  { path: \"package.json\", regex: new RegExp(/^package.json/) },\n  { path: \"package-lock.json\", regex: new RegExp(/^package-lock.json/) },\n  { path: \"settings.development.json\", regex: new RegExp(/^settings.development.json/) },\n  { path: \"settings.staging.json\", regex: new RegExp(/^settings.staging.json/) },\n  { path: \"settings.test.json\", regex: new RegExp(/^settings.test.json/) },\n  { path: \"settings.production.json\", regex: new RegExp(/^settings.production.json/) },\n  { path: \".html\", regex: new RegExp(/^([0-9a-zA-Z-._])+.html/) },\n];\n\nexport default copy_paths;\n"],
  "mappings": "AAAA,MAAMA,EAAa,CACjB,CAAE,KAAM,MAAO,MAAO,IAAI,OAAO,QAAQ,WAAa,QAAU,SAAW,QAAQ,CAAE,EACrF,CAAE,KAAM,OAAQ,MAAO,IAAI,OAAO,QAAQ,WAAa,QAAU,UAAY,SAAS,CAAE,EACxF,CAAE,KAAM,SAAU,MAAO,IAAI,OAAO,QAAQ,WAAa,QAAU,YAAc,WAAW,CAAE,EAC9F,CAAE,KAAM,UAAW,MAAO,IAAI,OAAO,QAAQ,WAAa,QAAU,aAAe,YAAY,CAAE,EACjG,CAAE,KAAM,aAAc,MAAO,IAAI,OAAO,aAAa,CAAE,EACvD,CAAE,KAAM,YAAa,MAAO,IAAI,OAAO,YAAY,CAAE,EACrD,CAAE,KAAM,eAAgB,MAAO,IAAI,OAAO,eAAe,CAAE,EAC3D,CAAE,KAAM,oBAAqB,MAAO,IAAI,OAAO,oBAAoB,CAAE,EACrE,CAAE,KAAM,4BAA6B,MAAO,IAAI,OAAO,4BAA4B,CAAE,EACrF,CAAE,KAAM,wBAAyB,MAAO,IAAI,OAAO,wBAAwB,CAAE,EAC7E,CAAE,KAAM,qBAAsB,MAAO,IAAI,OAAO,qBAAqB,CAAE,EACvE,CAAE,KAAM,2BAA4B,MAAO,IAAI,OAAO,2BAA2B,CAAE,EACnF,CAAE,KAAM,QAAS,MAAO,IAAI,OAAO,yBAAyB,CAAE,CAChE,EAEA,IAAOC,EAAQD",
  "names": ["copy_paths", "copy_paths_default"]
}
