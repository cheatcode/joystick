import o from"cluster";import t from"os";const i=r=>{r.on("message",e=>{for(const s in o.workers)o.workers[s].id!==r.id&&o.workers[s].send(e);process.send&&process.send(e)})},d=(r=null)=>{const e=t.cpus().length;if(o.isPrimary){console.log(`Primary ${process.pid} is running`);for(let s=1;s<e;s++){const n=o.fork(process.env);i(n)}o.on("exit",(s,n,p)=>{console.warn(`Worker ${s.process.pid} died. Restarting...`);const c=o.fork(process.env);i(c)}),process.on("message",s=>{for(const n in o.workers)o.workers[n].send(s)}),typeof r=="function"&&r()}o.isWorker&&console.log(`Worker ${process.pid} started`)};var k=d;export{k as default};
