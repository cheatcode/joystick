import g from"events";import S from"query-string";import*as _ from"ws";import m from"../../test/track_function_call.js";import p from"../../lib/types.js";import c from"cluster";const l=new g,u=(r={},o={})=>{r.on("upgrade",(e,n,s)=>{if(e?.url?.includes("/api/_websockets")){const t=(e?.url?.replace("/api/_websockets/","")?.split("?")||[])[0],a=o[t];a&&a.server.handleUpgrade(e,n,s,j=>{a.server.emit("connection",j,e)})}})},f=(r={},o={},e={})=>{const n=Object.assign(r,{params:o});(p.is_function(e?.onOpen)||p.is_function(e?.on_open))&&(e?.onOpen||e?.on_open)(n),r.on("message",s=>{const t=JSON.parse(s);p.is_function(e?.on_message)&&e?.on_message(t,r),O(t)}),r.on("close",(s=0,t="")=>{p.is_function(e?.on_close)&&e?.on_close(s,t?.toString(),r)})},$=(r="",o={},e={})=>{const n=new g,s=o?.id?`${r}_${o?.id}`:r;joystick?.emitters&&joystick?.emitters[s]?joystick.emitters[s].push(n):joystick.emitters={...joystick?.emitters||{},[s]:[n]},n.on("message",(t={})=>{e.send(JSON.stringify(t))}),n.on("progress",(t={})=>{e.send(JSON.stringify({type:"PROGRESS",...t}))})},d=(r={})=>{const[o,e]=r?.url?.split("?");return S.parse(e)},E=(r="",o={})=>{o?.server.on("connection",(e={},n={})=>{const s=d(n);$(r,s,e),f(e,s,o)})},y=(r="",o={},e=[])=>(m(`node.websockets.${r}.on_close`,e),o?.onClose||o?.on_close?(o?.onClose||o?.on_close)(...e):null),v=(r="",o={},e=[])=>(m(`node.websockets.${r}.on_message`,e),o?.onMessage||o?.on_message?(o?.onMessage||o?.on_message)(...e):null),h=(r="",o={},e=[])=>(m(`node.websockets.${r}.on_open`,e),o?.onOpen||o?.on_open?(o?.onOpen||o?.on_open)(...e):null),i=(r="")=>new _.WebSocketServer({noServer:!0,path:`/api/_websockets/${r}`}),C=(r={})=>({uploaders:{server:i("uploaders")},...Object.entries(r||{}).reduce((o={},[e,n])=>(o[e]={server:i(e),on_open:(...s)=>h(e,n,s),onOpen:(...s)=>h(e,n,s),on_message:(...s)=>v(e,n,s),onMessage:(...s)=>v(e,n,s),on_close:(...s)=>y(e,n,s),onClose:(...s)=>y(e,n,s)},o),{})}),O=r=>{if(c.isPrimary){for(const o in c.workers)c.workers[o].send({type:"websocket_message",message:r});l.emit("message",r)}else process.send({type:"websocket_message",message:r})},J=(r={},o={})=>{const e=C(r),n=Object.entries(e);for(let s=0;s<n?.length;s+=1){const[t,a]=n[s];E(t,a)}u(o.express.server,e),c.isPrimary?c.on("message",(s,t)=>{t.type==="websocket_message"&&O(t.message)}):process.on("message",s=>{s.type==="websocket_message"&&l.emit("message",s.message)}),l.on("message",s=>{Object.values(joystick.emitters||{}).forEach(t=>{t.forEach(a=>{a.emit("message",s)})})})};var W=J;export{W as default};
