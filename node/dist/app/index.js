import l from"http";import b from"fs";import y from"./api/accounts/authenticated.js";import x from"./api/accounts/login.js";import w from"./api/accounts/logout.js";import v from"./api/accounts/recover_password.js";import j from"./api/accounts/reset_password.js";import k from"./api/accounts/signup.js";import q from"./api/accounts/user.js";import O from"./api/accounts/verify_email.js";import"./api/push/health.js";import E from"./api/test/accounts/delete.js";import R from"./api/test/accounts/signup.js";import D from"./api/test/bootstrap.js";import N from"./api/test/process.js";import S from"./api/test/queues.js";import I from"./databases/mongodb/create_indexes.js";import A from"./databases/postgresql/create_indexes.js";import P from"./databases/postgresql/create_tables.js";import $ from"../lib/dynamic_import.js";import J from"./generate_machine_id.js";import L from"./generate_process_id.js";import T from"../lib/get_browser_safe_request.js";import U from"../lib/get_joystick_build_path.js";import u from"./databases/get_target_database_connection.js";import B from"./handle_process_errors.js";import C from"./settings/load.js";import V from"../lib/parse_route_pattern.js";import c from"../lib/path_exists.js";import z from"./push/index.js";import F from"./push/logger.js";import H from"./queues/index.js";import d from"../lib/read_mod_component_css.js";import h from"../lib/read_mod_global_css.js";import Q from"./register_app_options.js";import Y from"./cron_jobs/register.js";import G from"./databases/register_database.js";import K from"./api/register_getters.js";import M from"./routes/register_route_from_function.js";import W from"./routes/register_route_from_object.js";import X from"./api/register_setters.js";import Z from"./uploaders/register.js";import tt from"./websockets/register.js";import st from"./ssr/index.js";import et from"./start_express.js";import ot from"./start_node_as_cluster.js";import rt from"../lib/strip_preceeding_slash.js";import n from"../lib/types.js";const{readFile:m}=b.promises,it=C();class at{constructor(t={}){l.globalAgent.maxSockets=1/0,B(t?.events),Q(this,t),this.generate_machine_id(),this.generate_process_id(),process.title=process.env.NODE_ENV==="test"?"joystick_test_app":"joystick_app",process.joystick={app_options:t,external_process_ids:[],track_external_process:(s="")=>{process.send({external_process_id:s}),process.joystick.external_process_ids.push(s)}}}async connect_databases(){const t=it?.config?.databases;for(let s=0;s<t?.length;s+=1){const e=t[s],o=parseInt(process.env.PORT,10)+10+s,r=t?.filter(i=>e?.provider===i?.provider)?.length>1;await G(e,o,r)}if(t?.length>0){const s=u("queues"),e=u("sessions"),o=u("users");process.databases._queues=s?.connection,process.databases._sessions=e?.connection,process.databases._users=o?.connection;const r=[s,e,o],i=r?.filter(a=>a?.provider==="mongodb")?.map(a=>a?.database_type);await I(i);const p=r?.filter(a=>a?.provider==="postgresql")?.map(a=>a?.database_type);await P(p),await A(p)}}async generate_machine_id(){this.joystick_machine_id=await J()}async generate_process_id(){this.joystick_process_id=await L()}on_after_start_server(t={}){process.on("message",s=>{if(typeof s=="string"){const e=JSON.parse(s);["RESTART"].includes(e?.type),e?.type==="BUILD_ERROR"&&(process.BUILD_ERROR=JSON.parse(s))}}),console.log(`App running at: http://localhost:${t.port}`)}register_accounts(){this.express.app.get("/api/_accounts/authenticated",y),this.express.app.post("/api/_accounts/user",q),this.express.app.post("/api/_accounts/login",x),this.express.app.post("/api/_accounts/logout",w),this.express.app.post("/api/_accounts/recover-password",v),this.express.app.post("/api/_accounts/reset-password",j),this.express.app.post("/api/_accounts/signup",k),this.express.app.get("/api/_accounts/verify-email",O)}register_api(){const t=this?.options?.api?.getters,s=this?.options?.api?.setters,e=this?.options?.api?.options,o=this?.options?.api?.context;t&&n.is_object(t)&&Object.keys(t||{}).length>0&&K(this.express.app,Object.entries(t||{}),o,e),s&&n.is_object(s)&&Object.keys(s||{}).length>0&&X(this.express.app,Object.entries(s||{}),o,e)}register_caches(){process.caches={},n.is_function(this.options.caches)&&this.options.caches()}register_cron_jobs(){Y(this.options.cronJobs||this.options.cron_jobs)}register_dynamic_pages(){this.express.app.post("/_joystick/dynamic_page/data",async(t={},s={})=>{const e=U(),o=rt(t?.body?.page),r=`${e}/${o}`;if(!t?.body?.page||!await c(r))return handle_api_error("joystick.dynamic_pages.load",new Error(`Component not found at ${r}.`),s);const i=await $(r);if(i){const p=V(t?.body?.route_pattern||"",t?.body?.path),a=T({params:p?.params||{},query:t?.body?.query_params||{},url:t?.body?.path,headers:t?.headers,context:t?.context}),g=await st({is_dynamic_page_render:!0,component_to_render:i,api_schema:this?.options?.api,component_options:{props:t?.body?.props},req:a});return s.status(200).send({data:g,req:a,url:{params:p?.params||{},query:t?.body?.query_params||{},path:t?.body?.path,route:t?.body?.route_pattern||t?.body?.path}})}return s.status(200).send({})})}register_fixtures(){n.is_function(this.options.fixtures)&&this.options.fixtures()}register_indexes(){n.is_function(this.options.indexes)&&this.options.indexes()}async register_mod(){if(!await c("private/mod"))return;const s=await c("private/mod/mod_version.txt")&&(await m("private/mod/mod_version.txt","utf-8"))?.trim()||"free";let e,o,r={},i={};if(s==="plus"){e=await c("private/mod/mod-light-plus.min.css")&&await m("private/mod/mod-light-plus.min.css","utf-8")||"",o=await c("private/mod/mod-dark-plus.min.css")&&await m("private/mod/mod-dark-plus.min.css","utf-8")||"",r=await h();const p=await d("free"),a=await d("plus");i={...p||{},...a||{}}}else e=await c("private/mod/mod-light.min.css")&&await m("private/mod/mod-light.min.css","utf-8")||"",o=await c("private/mod/mod-dark.min.css")&&await m("private/mod/mod-dark.min.css","utf-8")||"",r=await h(),i={...await d("free")||{}};console.log(i),this.mod={light:e,dark:o,globals:r,components:i}}async register_push(){process.env.NODE_ENV!=="development"&&process.env.IS_PUSH_DEPLOYED&&(await F(),await z())}register_queues(){if(n.is_object(this.options.queues)){const t=Object.entries(this.options.queues||{});for(let s=0;s<t.length;s+=1){const[e,o]=t[s];process.queues={...process.queues||{},[e]:new H(e,o)}}}}register_routes(){const t=Object.entries(this?.options?.routes||{});for(let s=0;s<t?.length;s+=1){const[e,o]=t[s],r=n.is_object(o);n.is_function(o)&&M(this.express.app,e,o),r&&W(this.express.app,e,o)}}register_tests(){this.express.app.get("/api/_test/bootstrap",(t={},s={})=>D(t,s,this)),this.express.app.get("/api/_test/process",N),this.express.app.delete("/api/_test/accounts",E),this.express.app.post("/api/_test/accounts/signup",R),this.express.app.post("/api/_test/queues",(t={},s={})=>S(t,s,this))}register_uploaders(){Z(this.options.uploaders,this)}register_websockets(){tt(this.options.websockets,this)}async start(){this.register_push(),await this.connect_databases(),this.register_caches(),this.register_cron_jobs(),this.register_queues(),this.start_express(),this.register_tests(),this.register_accounts(),this.register_api(),this.register_routes(),this.register_dynamic_pages(),this.register_websockets(),this.register_uploaders(),this.register_fixtures(),this.register_indexes(),this.register_mod()}start_express(){this.express=et(this.on_after_start_server,this)}}const f=async(_={})=>{const t=new at(_);return await t.start(_),t},pt=(_={})=>new Promise(async t=>{if(_?.cluster)ot(async()=>{const s=await f(_);return t(s.express)});else{const s=await f(_);return t(s.express)}});var os=pt;export{os as default};
