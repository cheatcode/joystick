import w from"http";import y from"fs";import x from"./api/accounts/authenticated.js";import j from"./api/accounts/login.js";import v from"./api/accounts/logout.js";import k from"./api/accounts/recover_password.js";import O from"./api/accounts/reset_password.js";import q from"./api/accounts/signup.js";import $ from"./api/accounts/user.js";import E from"./api/accounts/verify_email.js";import N from"./api/test/accounts/delete.js";import R from"./api/test/accounts/signup.js";import S from"./api/test/bootstrap.js";import D from"./api/test/process.js";import I from"./api/test/queues.js";import A from"./databases/mongodb/create_indexes.js";import T from"./databases/postgresql/create_indexes.js";import P from"./databases/postgresql/create_tables.js";import h from"../lib/dynamic_import.js";import F from"./generate_machine_id.js";import U from"./generate_process_id.js";import C from"../lib/get_browser_safe_request.js";import J from"../lib/get_joystick_build_path.js";import f from"./databases/get_target_database_connection.js";import L from"./handle_process_errors.js";import B from"./settings/load.js";import H from"../lib/parse_route_pattern.js";import p from"../lib/path_exists.js";import V from"./push/index.js";import Y from"./push/logger.js";import z from"./queues/index.js";import d from"../lib/read_mod_component_css.js";import l from"../lib/read_mod_global_css.js";import K from"./register_app_options.js";import Q from"./cron_jobs/register.js";import G from"./databases/register_database.js";import M from"./api/register_getters.js";import W from"./routes/register_route_from_function.js";import X from"./routes/register_route_from_object.js";import Z from"./api/register_setters.js";import tt from"./uploaders/register.js";import st from"./websockets/register.js";import et from"./ssr/index.js";import ot from"./start_express.js";import it from"./start_node_as_cluster.js";import rt from"../lib/strip_preceeding_slash.js";import _ from"../lib/types.js";import at from"../lib/websocket_client.js";const{readFile:c,readdir:pt}=y.promises,nt=B();class ct{constructor(t={}){w.globalAgent.maxSockets=1/0,L(t?.events),K(this,t),this.generate_machine_id(),this.generate_process_id(),process.title=process.env.NODE_ENV==="test"?"joystick_test_app":"joystick_app",process.joystick={app_options:t,external_process_ids:[],track_external_process:(s="")=>{process.send({external_process_id:s}),process.joystick.external_process_ids.push(s)}}}async connect_databases(){const t=nt?.config?.databases;for(let s=0;s<t?.length;s+=1){const o=t[s],e=parseInt(process.env.PORT,10)+10+s,i=t?.filter(r=>o?.provider===r?.provider)?.length>1;await G(o,e,i)}if(t?.length>0){const s=f("queues"),o=f("users");process.databases._queues=s?.connection,process.databases._users=o?.connection;const e=[s,o],i=e?.filter(a=>a?.provider==="mongodb")?.map(a=>a?.database_type);await A(i);const r=e?.filter(a=>a?.provider==="postgresql")?.map(a=>a?.database_type);await P(r),await T(r)}}async generate_machine_id(){this.joystick_machine_id=await F()}async generate_process_id(){this.joystick_process_id=await U()}async load_ui(){const t=`${process.cwd()}/ui`;if(!await p(t))return;process._joystick_components={};const s=async e=>{try{const i=await pt(e,{withFileTypes:!0});for(const r of i)if(r.isDirectory()){const n=`${`${e}/${r.name}`}/index.js`;if(await p(n))try{const u=await h(n),b=n.replace(`${process.cwd()}/`,"");process._joystick_components[b]=u}catch(u){console.warn(`Failed to load component: ${n}`,u.message)}}}catch(i){console.warn(`Failed to scan directory: ${e}`,i.message)}},o=[`${t}/components`,`${t}/layouts`,`${t}/pages`];for(const e of o)await p(e)&&await s(e)}on_after_start_server(t={}){process.on("message",s=>{if(typeof s=="string"){const o=JSON.parse(s);["RESTART"].includes(o?.type),o?.type==="BUILD_ERROR"&&(process.BUILD_ERROR=JSON.parse(s))}}),console.log(`App running at: http://localhost:${t.port}`)}register_accounts(){this.express.app.get("/api/_accounts/authenticated",x),this.express.app.post("/api/_accounts/user",$),this.express.app.post("/api/_accounts/login",j),this.express.app.post("/api/_accounts/logout",v),this.express.app.post("/api/_accounts/recover-password",k),this.express.app.post("/api/_accounts/reset-password",O),this.express.app.post("/api/_accounts/signup",q),this.express.app.get("/api/_accounts/verify-email",E)}register_api(){const t=this?.options?.api?.getters,s=this?.options?.api?.setters,o=this?.options?.api?.options,e=this?.options?.api?.context;t&&_.is_object(t)&&Object.keys(t||{}).length>0&&M(this.express.app,Object.entries(t||{}),e,o),s&&_.is_object(s)&&Object.keys(s||{}).length>0&&Z(this.express.app,Object.entries(s||{}),e,o)}register_caches(){process.caches={},_.is_function(this.options.caches)&&this.options.caches()}register_cron_jobs(){Q(this.options.cronJobs||this.options.cron_jobs)}register_dynamic_pages(){this.express.app.post("/_joystick/dynamic_page/data",async(t={},s={})=>{const o=J(),e=rt(t?.body?.page),i=`${o}/${e}`;if(!t?.body?.page||!await p(i))return handle_api_error("joystick.dynamic_pages.load",new Error(`Component not found at ${i}.`),s);const r=await h(i);if(r){const a=H(t?.body?.route_pattern||"",t?.body?.path),n=C({params:a?.params||{},query:t?.body?.query_params||{},url:t?.body?.path,headers:t?.headers,context:t?.context}),u=await et({is_dynamic_page_render:!0,component_to_render:r,api_schema:this?.options?.api,component_options:{props:t?.body?.props},req:n});return s.status(200).send({data:u,req:n,url:{params:a?.params||{},query:t?.body?.query_params||{},path:t?.body?.path,route:t?.body?.route_pattern||t?.body?.path}})}return s.status(200).send({})})}register_fixtures(){_.is_function(this.options.fixtures)&&this.options.fixtures()}register_indexes(){_.is_function(this.options.indexes)&&this.options.indexes()}async register_mod(){if(!await p("private/mod"))return;const s=await p("private/mod/mod_version.txt")&&(await c("private/mod/mod_version.txt","utf-8"))?.trim()||"free";let o,e,i,r={},a={};if(s==="plus"){o=await p("private/mod/mod-light-plus.min.css")&&await c("private/mod/mod-light-plus.min.css","utf-8")||"",e=await p("private/mod/mod-dark-plus.min.css")&&await c("private/mod/mod-dark-plus.min.css","utf-8")||"",i={esm:await p("lib/mod-plus.esm.min.js")&&await c("lib/mod-plus.esm.min.js","utf-8")||"",iife:await p("lib/mod-plus.iife.min.js")&&await c("lib/mod-plus.iife.min.js","utf-8")||""},r=await l();const n=await d("free"),u=await d("plus");a={...n||{},...u||{}}}else o=await p("private/mod/mod-light.min.css")&&await c("private/mod/mod-light.min.css","utf-8")||"",e=await p("private/mod/mod-dark.min.css")&&await c("private/mod/mod-dark.min.css","utf-8")||"",i={esm:await p("lib/mod.esm.min.js")&&await c("lib/mod.esm.min.js","utf-8")||"",iife:await p("lib/mod.iife.min.js")&&await c("lib/mod.iife.min.js","utf-8")||""},r=await l(),a={...await d("free")||{}};this.mod={version:s,css:{light:o,dark:e},js:i,globals:r,components:a}}async register_push(){process.env.NODE_ENV!=="development"&&process.env.IS_PUSH_DEPLOYED&&(this.express.app.get("/api/_push/health",async(t={},s={})=>t?.headers?.["x-push-instance-token"]!==process.env.PUSH_INSTANCE_TOKEN?s.status(403).send("403 - You are not allowed to access this endpoint."):s.status(200).send("ok")),process.push_instances_websocket=at({url:"wss://push.cheatcode.co/api/_websockets/instances",options:{max_sends_per_second:10,logging:!1,auto_reconnect:!0,reconnect_attempts:1/0,reconnect_delay_in_seconds:10}}),await V(),await Y(),console.log("App running at http://localhost:2600"))}register_queues(){if(_.is_object(this.options.queues)){const t=Object.entries(this.options.queues||{});for(let s=0;s<t.length;s+=1){const[o,e]=t[s];process.queues={...process.queues||{},[o]:new z(o,e)}}}}register_routes(){const t=Object.entries(this?.options?.routes||{});for(let s=0;s<t?.length;s+=1){const[o,e]=t[s],i=_.is_object(e);_.is_function(e)&&W(this.express.app,o,e),i&&X(this.express.app,o,e)}}register_tests(){this.express.app.get("/api/_test/bootstrap",(t={},s={})=>S(t,s,this)),this.express.app.get("/api/_test/process",D),this.express.app.delete("/api/_test/accounts",N),this.express.app.post("/api/_test/accounts/signup",R),this.express.app.post("/api/_test/queues",(t={},s={})=>I(t,s,this))}register_uploaders(){tt(this.options.uploaders,this)}register_websockets(){st(this.options.websockets,this)}async start(){await this.load_ui(),await this.connect_databases(),await this.register_mod(),this.register_caches(),this.register_cron_jobs(),this.register_queues(),this.start_express(),this.register_websockets(),this.register_tests(),this.register_push(),this.register_accounts(),this.register_api(),this.register_routes(),this.register_dynamic_pages(),this.register_uploaders(),this.register_fixtures(),this.register_indexes()}start_express(){this.express=ot(this.on_after_start_server,this)}}const g=async(m={})=>{const t=new ct(m);return await t.start(m),t},_t=(m={})=>new Promise(async t=>{if(m?.cluster)it(async()=>{const s=await g(m);return t(s.express)});else{const s=await g(m);return t(s.express)}});var rs=_t;export{rs as default};
