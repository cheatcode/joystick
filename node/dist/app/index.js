import l from"http";import b from"fs";import y from"./api/accounts/authenticated.js";import w from"./api/accounts/login.js";import x from"./api/accounts/logout.js";import j from"./api/accounts/recover_password.js";import v from"./api/accounts/reset_password.js";import k from"./api/accounts/signup.js";import O from"./api/accounts/user.js";import q from"./api/accounts/verify_email.js";import E from"./api/test/accounts/delete.js";import N from"./api/test/accounts/signup.js";import R from"./api/test/bootstrap.js";import S from"./api/test/process.js";import I from"./api/test/queues.js";import D from"./databases/mongodb/create_indexes.js";import A from"./databases/postgresql/create_indexes.js";import P from"./databases/postgresql/create_tables.js";import T from"../lib/dynamic_import.js";import U from"./generate_machine_id.js";import $ from"./generate_process_id.js";import C from"../lib/get_browser_safe_request.js";import J from"../lib/get_joystick_build_path.js";import d from"./databases/get_target_database_connection.js";import L from"./handle_process_errors.js";import B from"./settings/load.js";import H from"../lib/parse_route_pattern.js";import n from"../lib/path_exists.js";import V from"./push/index.js";import Y from"./push/logger.js";import z from"./queues/index.js";import h from"../lib/read_mod_component_css.js";import f from"../lib/read_mod_global_css.js";import F from"./register_app_options.js";import K from"./cron_jobs/register.js";import Q from"./databases/register_database.js";import G from"./api/register_getters.js";import M from"./routes/register_route_from_function.js";import W from"./routes/register_route_from_object.js";import X from"./api/register_setters.js";import Z from"./uploaders/register.js";import ss from"./websockets/register.js";import ts from"./ssr/index.js";import es from"./start_express.js";import os from"./start_node_as_cluster.js";import rs from"../lib/strip_preceeding_slash.js";import _ from"../lib/types.js";import is from"../lib/websocket_client.js";const{readFile:m}=b.promises,as=B();class ps{constructor(s={}){l.globalAgent.maxSockets=1/0,L(s?.events),F(this,s),this.generate_machine_id(),this.generate_process_id(),process.title=process.env.NODE_ENV==="test"?"joystick_test_app":"joystick_app",process.joystick={app_options:s,external_process_ids:[],track_external_process:(t="")=>{process.send({external_process_id:t}),process.joystick.external_process_ids.push(t)}}}async connect_databases(){const s=as?.config?.databases;for(let t=0;t<s?.length;t+=1){const e=s[t],o=parseInt(process.env.PORT,10)+10+t,r=s?.filter(a=>e?.provider===a?.provider)?.length>1;await Q(e,o,r)}if(s?.length>0){const t=d("queues"),e=d("sessions"),o=d("users");process.databases._queues=t?.connection,process.databases._sessions=e?.connection,process.databases._users=o?.connection;const r=[t,e,o],a=r?.filter(i=>i?.provider==="mongodb")?.map(i=>i?.database_type);await D(a);const p=r?.filter(i=>i?.provider==="postgresql")?.map(i=>i?.database_type);await P(p),await A(p)}}async generate_machine_id(){this.joystick_machine_id=await U()}async generate_process_id(){this.joystick_process_id=await $()}on_after_start_server(s={}){process.on("message",t=>{if(typeof t=="string"){const e=JSON.parse(t);["RESTART"].includes(e?.type),e?.type==="BUILD_ERROR"&&(process.BUILD_ERROR=JSON.parse(t))}}),console.log(`App running at: http://localhost:${s.port}`)}register_accounts(){this.express.app.get("/api/_accounts/authenticated",y),this.express.app.post("/api/_accounts/user",O),this.express.app.post("/api/_accounts/login",w),this.express.app.post("/api/_accounts/logout",x),this.express.app.post("/api/_accounts/recover-password",j),this.express.app.post("/api/_accounts/reset-password",v),this.express.app.post("/api/_accounts/signup",k),this.express.app.get("/api/_accounts/verify-email",q)}register_api(){const s=this?.options?.api?.getters,t=this?.options?.api?.setters,e=this?.options?.api?.options,o=this?.options?.api?.context;s&&_.is_object(s)&&Object.keys(s||{}).length>0&&G(this.express.app,Object.entries(s||{}),o,e),t&&_.is_object(t)&&Object.keys(t||{}).length>0&&X(this.express.app,Object.entries(t||{}),o,e)}register_caches(){process.caches={},_.is_function(this.options.caches)&&this.options.caches()}register_cron_jobs(){K(this.options.cronJobs||this.options.cron_jobs)}register_dynamic_pages(){this.express.app.post("/_joystick/dynamic_page/data",async(s={},t={})=>{const e=J(),o=rs(s?.body?.page),r=`${e}/${o}`;if(!s?.body?.page||!await n(r))return handle_api_error("joystick.dynamic_pages.load",new Error(`Component not found at ${r}.`),t);const a=await T(r);if(a){const p=H(s?.body?.route_pattern||"",s?.body?.path),i=C({params:p?.params||{},query:s?.body?.query_params||{},url:s?.body?.path,headers:s?.headers,context:s?.context}),u=await ts({is_dynamic_page_render:!0,component_to_render:a,api_schema:this?.options?.api,component_options:{props:s?.body?.props},req:i});return t.status(200).send({data:u,req:i,url:{params:p?.params||{},query:s?.body?.query_params||{},path:s?.body?.path,route:s?.body?.route_pattern||s?.body?.path}})}return t.status(200).send({})})}register_fixtures(){_.is_function(this.options.fixtures)&&this.options.fixtures()}register_indexes(){_.is_function(this.options.indexes)&&this.options.indexes()}async register_mod(){if(!await n("private/mod"))return;const t=await n("private/mod/mod_version.txt")&&(await m("private/mod/mod_version.txt","utf-8"))?.trim()||"free";let e,o,r,a={},p={};if(t==="plus"){e=await n("private/mod/mod-light-plus.min.css")&&await m("private/mod/mod-light-plus.min.css","utf-8")||"",o=await n("private/mod/mod-dark-plus.min.css")&&await m("private/mod/mod-dark-plus.min.css","utf-8")||"",r=await n("lib/mod-plus.esm.min.js")&&await m("lib/mod-plus.esm.min.js","utf-8")||"",a=await f();const i=await h("free"),u=await h("plus");p={...i||{},...u||{}}}else e=await n("private/mod/mod-light.min.css")&&await m("private/mod/mod-light.min.css","utf-8")||"",o=await n("private/mod/mod-dark.min.css")&&await m("private/mod/mod-dark.min.css","utf-8")||"",o=await n("lib/mod.esm.min.js")&&await m("lib/mod.esm.min.js","utf-8")||"",a=await f(),p={...await h("free")||{}};this.mod={css:{light:e,dark:o},js:r,globals:a,components:p}}async register_push(){process.env.NODE_ENV!=="development"&&process.env.IS_PUSH_DEPLOYED&&(this.express.app.get("/api/_push/health",async(s={},t={})=>s?.headers?.["x-push-instance-token"]!==process.env.PUSH_INSTANCE_TOKEN?t.status(403).send("403 - You are not allowed to access this endpoint."):t.status(200).send("ok")),process.push_instances_websocket=is({url:"wss://push.cheatcode.co/api/_websockets/instances",options:{max_sends_per_second:10,logging:!1,auto_reconnect:!0,reconnect_attempts:1/0,reconnect_delay_in_seconds:10}}),await V(),await Y())}register_queues(){if(_.is_object(this.options.queues)){const s=Object.entries(this.options.queues||{});for(let t=0;t<s.length;t+=1){const[e,o]=s[t];process.queues={...process.queues||{},[e]:new z(e,o)}}}}register_routes(){const s=Object.entries(this?.options?.routes||{});for(let t=0;t<s?.length;t+=1){const[e,o]=s[t],r=_.is_object(o);_.is_function(o)&&M(this.express.app,e,o),r&&W(this.express.app,e,o)}}register_tests(){this.express.app.get("/api/_test/bootstrap",(s={},t={})=>R(s,t,this)),this.express.app.get("/api/_test/process",S),this.express.app.delete("/api/_test/accounts",E),this.express.app.post("/api/_test/accounts/signup",N),this.express.app.post("/api/_test/queues",(s={},t={})=>I(s,t,this))}register_uploaders(){Z(this.options.uploaders,this)}register_websockets(){ss(this.options.websockets,this)}async start(){await this.connect_databases(),this.register_caches(),this.register_cron_jobs(),this.register_queues(),this.start_express(),this.register_websockets(),this.register_tests(),this.register_push(),this.register_accounts(),this.register_api(),this.register_routes(),this.register_dynamic_pages(),this.register_uploaders(),this.register_fixtures(),this.register_indexes(),this.register_mod()}start_express(){this.express=es(this.on_after_start_server,this)}}const g=async(c={})=>{const s=new ps(c);return await s.start(c),s},ns=(c={})=>new Promise(async s=>{if(c?.cluster)os(async()=>{const t=await g(c);return s(t.express)});else{const t=await g(c);return s(t.express)}});var ot=ns;export{ot as default};
