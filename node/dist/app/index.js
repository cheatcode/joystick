import l from"http";import b from"fs";import y from"./api/accounts/authenticated.js";import x from"./api/accounts/login.js";import w from"./api/accounts/logout.js";import v from"./api/accounts/recover_password.js";import k from"./api/accounts/reset_password.js";import j from"./api/accounts/signup.js";import E from"./api/accounts/user.js";import O from"./api/accounts/verify_email.js";import"./api/push/health.js";import q from"./api/test/accounts/delete.js";import N from"./api/test/accounts/signup.js";import S from"./api/test/bootstrap.js";import D from"./api/test/process.js";import P from"./api/test/queues.js";import R from"./databases/mongodb/create_indexes.js";import I from"./databases/postgresql/create_indexes.js";import A from"./databases/postgresql/create_tables.js";import U from"../lib/dynamic_import.js";import C from"./generate_machine_id.js";import H from"./generate_process_id.js";import T from"../lib/get_browser_safe_request.js";import L from"../lib/get_joystick_build_path.js";import u from"./databases/get_target_database_connection.js";import V from"./handle_process_errors.js";import $ from"./settings/load.js";import J from"../lib/parse_route_pattern.js";import c from"../lib/path_exists.js";import Y from"./push/index.js";import B from"./push/logger.js";import K from"./queues/index.js";import d from"../lib/read_mod_component_css.js";import h from"../lib/read_mod_global_css.js";import z from"./register_app_options.js";import F from"./cron_jobs/register.js";import Q from"./databases/register_database.js";import G from"./api/register_getters.js";import M from"./routes/register_route_from_function.js";import W from"./routes/register_route_from_object.js";import X from"./api/register_setters.js";import Z from"./uploaders/register.js";import ss from"./websockets/register.js";import ts from"./ssr/index.js";import es from"./start_express.js";import os from"./start_node_as_cluster.js";import rs from"../lib/strip_preceeding_slash.js";import n from"../lib/types.js";const{readFile:m}=b.promises,is=$();class as{constructor(s={}){l.globalAgent.maxSockets=1/0,V(s?.events),z(this,s),this.generate_machine_id(),this.generate_process_id(),process.title=process.env.NODE_ENV==="test"?"joystick_test_app":"joystick_app",process.joystick={app_options:s,external_process_ids:[],track_external_process:(t="")=>{process.send({external_process_id:t}),process.joystick.external_process_ids.push(t)}}}async connect_databases(){const s=is?.config?.databases;for(let t=0;t<s?.length;t+=1){const e=s[t],o=parseInt(process.env.PORT,10)+10+t,r=s?.filter(a=>e?.provider===a?.provider)?.length>1;await Q(e,o,r)}if(s?.length>0){const t=u("queues"),e=u("sessions"),o=u("users");process.databases._queues=t?.connection,process.databases._sessions=e?.connection,process.databases._users=o?.connection;const r=[t,e,o],a=r?.filter(i=>i?.provider==="mongodb")?.map(i=>i?.database_type);await R(a);const p=r?.filter(i=>i?.provider==="postgresql")?.map(i=>i?.database_type);await A(p),await I(p)}}async generate_machine_id(){this.joystick_machine_id=await C()}async generate_process_id(){this.joystick_process_id=await H()}on_after_start_server(s={}){process.on("message",t=>{if(typeof t=="string"){const e=JSON.parse(t);["RESTART"].includes(e?.type),e?.type==="BUILD_ERROR"&&(process.BUILD_ERROR=JSON.parse(t))}}),console.log(`App running at: http://localhost:${s.port}`)}register_accounts(){this.express.app.get("/api/_accounts/authenticated",y),this.express.app.post("/api/_accounts/user",E),this.express.app.post("/api/_accounts/login",x),this.express.app.post("/api/_accounts/logout",w),this.express.app.post("/api/_accounts/recover-password",v),this.express.app.post("/api/_accounts/reset-password",k),this.express.app.post("/api/_accounts/signup",j),this.express.app.get("/api/_accounts/verify-email",O)}register_api(){const s=this?.options?.api?.getters,t=this?.options?.api?.setters,e=this?.options?.api?.options,o=this?.options?.api?.context;s&&n.is_object(s)&&Object.keys(s||{}).length>0&&G(this.express.app,Object.entries(s||{}),o,e),t&&n.is_object(t)&&Object.keys(t||{}).length>0&&X(this.express.app,Object.entries(t||{}),o,e)}register_caches(){process.caches={},n.is_function(this.options.caches)&&this.options.caches()}register_cron_jobs(){F(this.options.cronJobs||this.options.cron_jobs)}register_dynamic_pages(){this.express.app.post("/_joystick/dynamic_page/data",async(s={},t={})=>{const e=L(),o=rs(s?.body?.page),r=`${e}/${o}`;if(!s?.body?.page||!await c(r))return handle_api_error("joystick.dynamic_pages.load",new Error(`Component not found at ${r}.`),t);const a=await U(r);if(a){const p=J(s?.body?.route_pattern||"",s?.body?.path),i=T({params:p?.params||{},query:s?.body?.query_params||{},url:s?.body?.path,headers:s?.headers,context:s?.context}),g=await ts({is_dynamic_page_render:!0,component_to_render:a,api_schema:this?.options?.api,component_options:{props:s?.body?.props},req:i});return t.status(200).send({data:g,req:i,url:{params:p?.params||{},query:s?.body?.query_params||{},path:s?.body?.path,route:s?.body?.route_pattern||s?.body?.path}})}return t.status(200).send({})})}register_fixtures(){n.is_function(this.options.fixtures)&&this.options.fixtures()}register_indexes(){n.is_function(this.options.indexes)&&this.options.indexes()}async register_mod(){if(!await c("private/mod"))return;const t=await c("private/mod/mod_version.txt")&&(await m("private/mod/mod_version.txt","utf-8"))?.trim()||"free";let e,o,r={},a={};if(t==="plus"){e=await c("private/mod/mod-light-plus.min.css")&&await m("private/mod/mod-light-plus.min.css","utf-8")||"",o=await c("private/mod/mod-dark-plus.min.css")&&await m("private/mod/mod-dark-plus.min.css","utf-8")||"",r=await h();const p=await d("free"),i=await d("plus");a={...p||{},...i||{}}}else e=await c("private/mod/mod-light.min.css")&&await m("private/mod/mod-light.min.css","utf-8")||"",o=await c("private/mod/mod-dark.min.css")&&await m("private/mod/mod-dark.min.css","utf-8")||"",r=await h(),a={...await d("free")||{}};this.mod={light:e,dark:o,globals:r,components:a}}async register_push(){console.log("debug_push",{express:this.express.app,node_env:process.env.NODE_ENV,is_push:process.env.IS_PUSH_DEPLOYED}),process.env.NODE_ENV!=="development"&&process.env.IS_PUSH_DEPLOYED&&(console.log("PASSED PUSH CHECK"),this.express.app.get("/api/_push/health",async(s={},t={})=>!s?.headers?.["x-push-instance-token"]===process.env.PUSH_INSTANCE_TOKEN?t.status(403).send("403 - You are not allowed to access this endpoint."):t.status(200).send("ok")),await B(),await Y())}register_queues(){if(n.is_object(this.options.queues)){const s=Object.entries(this.options.queues||{});for(let t=0;t<s.length;t+=1){const[e,o]=s[t];process.queues={...process.queues||{},[e]:new K(e,o)}}}}register_routes(){const s=Object.entries(this?.options?.routes||{});for(let t=0;t<s?.length;t+=1){const[e,o]=s[t],r=n.is_object(o);n.is_function(o)&&M(this.express.app,e,o),r&&W(this.express.app,e,o)}process.env.NODE_ENV!=="development"&&this.express.app.get("/health",(t={},e={})=>e.status(200).send("ok"))}register_tests(){this.express.app.get("/api/_test/bootstrap",(s={},t={})=>S(s,t,this)),this.express.app.get("/api/_test/process",D),this.express.app.delete("/api/_test/accounts",q),this.express.app.post("/api/_test/accounts/signup",N),this.express.app.post("/api/_test/queues",(s={},t={})=>P(s,t,this))}register_uploaders(){Z(this.options.uploaders,this)}register_websockets(){ss(this.options.websockets,this)}async start(){this.register_push(),await this.connect_databases(),this.register_caches(),this.register_cron_jobs(),this.register_queues(),this.start_express(),this.register_tests(),this.register_accounts(),this.register_api(),this.register_routes(),this.register_dynamic_pages(),this.register_websockets(),this.register_uploaders(),this.register_fixtures(),this.register_indexes(),this.register_mod()}start_express(){this.express=es(this.on_after_start_server,this)}}const f=async(_={})=>{const s=new as(_);return await s.start(_),s},ps=(_={})=>new Promise(async s=>{if(_?.cluster)os(async()=>{const t=await f(_);return s(t.express)});else{const t=await f(_);return s(t.express)}});var ot=ps;export{ot as default};
