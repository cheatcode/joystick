import l from"../../lib/log.js";import o from"../../test/track_function_call.js";import f from"../../lib/types.js";const _=({uploader_name:t,max_size_in_megabytes:s,mime_types:i,original_file_name:m,file_size:e,mime_type:c})=>{const a=s*1024*1024,r=[];if(f.is_number(a)&&e&&e>a){const n=`The file ${m} is too big. Max file size is ${s}MB.`;l(n,{level:"danger",docs:"https://docs.cheatcode.co/joystick/node/uploaders"}),r.push({status:400,error:new Error(n),message:n,location:`uploaders.${t}`})}if(i?.length>0&&!i.includes(c)){const n=`The MIME type for the file ${m} is not supported by the uploader ${t} (only ${i?.join(", ")}).`;l(n,{level:"danger",docs:"https://docs.cheatcode.co/joystick/node/uploaders"}),r.push({status:400,error:new Error(n),message:n,location:`uploaders.${t}`})}return r},g=(t=[])=>t.flatMap((s={})=>_(s)),z=({files:t=[],uploader_name:s="",uploader_options:i={},uploader_input:m={}})=>Promise.all(t.map(async e=>{const c=e?.mimetype?.split("/").pop(),a=f.is_function(i?.fileName)||f.is_function(i?.file_name),r=f.is_function(i?.maxSizeInMegabytes)||f.is_function(i?.max_size_in_megabytes);a&&o(`node.uploaders.${s}.file_name`,[{uploader_input:m,file_name:e?.originalname,file_size:e?.size,file_extension:c,mime_type:e?.mimetype}]),r&&o(`node.uploaders.${s}.max_size_in_megabytes`,[{input:m,upload:e}]);const n=r?await(i?.maxSizeInMegabytes||i?.max_size_in_megabytes)({input:m,upload:e}):i?.maxSizeInMegabytes||i?.max_size_in_megabytes,y=a?(i.fileName||i?.file_name)({input:m,fileName:e?.originalname,file_name:e?.originalname,fileSize:e?.size,file_size:e?.size,fileExtension:c,file_extension:c,mimeType:e?.mimetype,mime_type:e?.mimetype}):e?.originalname;return{uploader_name:s,providers:i?.providers,local:i?.local,s3:i?.s3,maxSizeInMegabytes:n,max_size_in_megabytes:n,mimeTypes:i?.mimeTypes,mime_types:i?.mimeTypes,fileName:y,file_name:y,original_file_name:e?.originalname,originalFileName:e?.originalname,file_size:e?.size,fileSize:e?.size,mime_type:e?.mimetype,mimeType:e?.mimetype,content:e?.buffer}})),h=async(t={})=>{const s=await z(t),i=g(s);return i?.length>0?{errors:i}:s};var $=h;export{$ as default};
