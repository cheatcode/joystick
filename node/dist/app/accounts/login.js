import i from"bcrypt";import t from"../databases/queries/accounts.js";import c from"./generate_account_session.js";import d from"../api/get_output.js";import n from"../../lib/types.js";const u=(s=null,e=null)=>t("add_session",{user_id:s,session:e}),_=(s=null)=>t("get_existing_session",{user_id:s}),p=(s=null)=>t("delete_old_sessions",{user_id:s}),l=(s=null,e=null)=>i.compareSync(s,e),m=async(s={})=>{const e=await t("user",{email_address:s.email_address||s.emailAddress,username:s.username});if(!e)throw new Error(`A user with the ${s.email_address||s.emailAddress?"email address":"username"} ${s.email_address||s.emailAddress||s.username} could not be found.`);if(!l(s.password,e.password))throw new Error("Incorrect password.");const o=e?._id||e?.user_id;await p(o);let r=await _(o);r||(r=c(),await u(o,r));const{password:f,sessions:y,...a}=e;return(n.is_function(process.joystick?.app_options?.accounts?.events?.onLogin)||n.is_function(process.joystick?.app_options?.accounts?.events?.on_login))&&(process.joystick?.app_options?.accounts?.events?.onLogin||process.joystick?.app_options?.accounts?.events?.on_login)({...r,user:e}),{...r,user:d({...a},s?.output)}};var x=m;export{x as default};
