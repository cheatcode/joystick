import p from"./format_api_error.js";import f from"./get_output.js";import h from"../../lib/get_sanitized_context.js";import z from"./sanitize_api_response.js";import d from"../../test/track_function_call.js";import s from"../../lib/types.js";import m from"./validate_input.js";const _=async(o="",t={},r={},n={},a={},u={})=>{const c=t?.sanitize===!1,i=(t?.sanitize||u?.sanitize)===!0;d(`node.api.setters.${o}`,[r,h(a)]);const e=await t?.set(r,a),l=n?f(e,n):e;return!c&&i?z(l):l},g=async(o="",t={},r={},n={})=>{d(`node.api.setters.${o}.authorized`,[r,h(n)]);const a=await t?.authorized(r,n);if(typeof a=="boolean")return a;if(s.is_object(a)&&!s.is_array(a)&&!s.is_undefined(a?.authorized))return a?.authorized?!0:a?.message},w=(o=[],t="")=>{console.log(`Input validation for setter "${t}" failed with the following errors:
`);for(let r=0;r<o?.length;r+=1){const n=o[r];console.log(`${r+1}. ${n}`)}},y=(o={},t={})=>m(o,t),$=async({set_name:o,set_options:t,setter_definition:r,request_context:n,api_schema_options:a})=>{const u=r?.input&&Object.keys(r?.input)?.length>0,c=s.is_function(r?.authorized);if(u){const i=await y(t?.input,r?.input);if(i?.length>0)return w(i,o),Promise.reject({errors:i.map(e=>p(new Error(e),`setters.${o}.input`,401))})}if(c){const i=await g(o,r,t?.input,n);if(!i||s.is_string(i))return Promise.reject({errors:[p(new Error(typeof i=="string"?i:`Not authorized to access ${o}.`),`setters.${o}.authorized`,403)]})}if(s.is_function(r?.set)){const i=await _(o,r,t?.input,t?.output,n,a);return Promise.resolve(i)}};var N=$;export{N as default};
