import m from"./format_api_error.js";import y from"./get.js";import w from"./get_api_context.js";import h from"./get_api_url_component.js";import J from"./handle_api_error.js";import d from"../../lib/is_valid_json.js";import N from"../../lib/types.js";import O from"./validate_session.js";const S=(i={},a=[],u={},c={})=>{for(let o=0;o<a?.length;o+=1){const[n,s]=a[o];i.get(`/api/_getters/${h(n)}`,...N.is_array(s?.middleware)?s?.middleware:[],async(e={},t={})=>{if(process.databases?._sessions&&!await O(e,t))return t.status(403).send(JSON.stringify({errors:[m(new Error("Unauthorized request."))]}));const g=await w(e,t,u),p=decodeURIComponent(e?.query?.input),f=d(p)?JSON.parse(p):null,_=decodeURIComponent(e?.query?.output),l=d(_)?JSON.parse(_):null;y({get_name:n,get_options:{input:f,output:l},getter_definition:s,request_context:g,api_schema_options:c}).then(r=>t.status(200).send(JSON.stringify(r))).catch(r=>{J(`api.getters.${n}`,r,t)})}),i.get("/api/_getters/:getter_name",(e={},t={})=>t.status(404).send(JSON.stringify({errors:[m(new Error(`Getter ${e?.params?.getter_name} not found`))]})))}};var b=S;export{b as default};
