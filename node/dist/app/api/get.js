import d from"./format_api_error.js";import z from"./get_output.js";import h from"../../lib/get_sanitized_context.js";import m from"./sanitize_api_response.js";import f from"../../test/track_function_call.js";import n from"../../lib/types.js";import _ from"./validate_input.js";const w=async(o="",t={},r=null,a=null,s={},u={})=>{const l=t?.sanitize===!1,i=(t?.sanitize||u?.sanitize)===!0;f(`node.api.getters.${o}`,[r,h(s)]);const e=await t?.get(r,s),c=a?z(e,a):e,p=!l&&i?m(c):c;return console.log({data:e,response:c,sanitized_response:p}),p},y=async(o="",t={},r={},a={})=>{f(`node.api.getters.${o}.authorized`,[r,h(a)]);const s=await t?.authorized(r,a);if(typeof s=="boolean")return s;if(n.is_object(s)&&!n.is_array(s)&&!n.is_undefined(s?.authorized))return s?.authorized?!0:s?.message},$=(o=[],t="")=>{console.log(`Input validation for getter "${t}" failed with the following errors:
`);for(let r=0;r<o?.length;r+=1){const a=o[r];console.log(`${r+1}. ${a}`)}},v=(o={},t={})=>_(o,t),g=async({get_name:o,get_options:t,getter_definition:r,request_context:a,api_schema_options:s})=>{const u=r?.input&&Object.keys(r?.input)?.length>0,l=n.is_function(r?.authorized);if(u){const i=await v(t?.input,r?.input);if(i?.length>0)return $(i,o),Promise.reject({errors:i.map(e=>d(new Error(e),`getters.${o}.input`,400))})}if(l){const i=await y(o,r,t?.input,a);if(!i||n.is_string(i))return Promise.reject({errors:[d(new Error(typeof i=="string"?i:`Not authorized to access ${o}.`),`getters.${o}.authorized`,403)]})}if(n.is_function(r?.get)){const i=await w(o,r,t?.input,t?.output,a,s);return Promise.resolve(i)}};var O=g;export{O as default};
