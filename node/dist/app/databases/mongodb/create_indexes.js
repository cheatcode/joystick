import t from"../../../lib/types.js";const o={sessions:async()=>{console.log("USER INDEXES",process.databases._sessions);try{await process.databases._sessions?.collection("sessions").createIndex({_id:1}),await process.databases._sessions?.collection("sessions").createIndex({createdAt:1},{expireAfterSeconds:3600})}catch(s){console.warn(s)}},users:async()=>{console.log("USER INDEXES",process.databases._users);try{await process.databases._users?.collection("users").createIndex({_id:1}),await process.databases._users?.collection("users").createIndex({emailAddress:1}),await process.databases._users?.collection("users").createIndex({username:1}),await process.databases._users?.collection("users").createIndex({"sessions.token":1}),await process.databases._users?.collection("users").createIndex({"passwordResetTokens.token":1}),await process.databases._users?.collection("users").createIndex({"passwordResetTokens.token":1,_id:1}),await process.databases._users?.collection("users").createIndex({roles:1}),await process.databases._users?.collection("users").createIndex({roles:1,_id:1}),await process.databases._users?.collection("roles").createIndex({role:1}),await process.databases._users?.collection("roles").createIndex({role:1,userId:1})}catch(s){console.warn(s)}}},c=async(s=[])=>{for(let e=0;e<s?.length;e+=1){const a=s[e];t.is_function(o[a])&&await o[a]()}};var n=c;export{n as default};
