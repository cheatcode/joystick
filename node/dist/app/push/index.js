import a from"fs";import s from"node-cron";import{NODE_CRON_EVERY_TEN_SECONDS as r,NODE_CRON_EVERY_THIRTY_SECONDS as _}from"../../lib/constants.js";import i from"../../lib/path_exists.js";import c from"./send_instance_data_to_push.js";import h from"./snapshot_metrics.js";const{readFile:l}=a.promises,m=async()=>{const o="/root/push/logs/app.log";return await i(o)?l(o,"utf-8"):""},p=()=>{const o=s.schedule(r,async()=>{try{const t=await m();c("logs",t)}catch(t){console.warn("sync_logs_job",t)}}),e=s.schedule(_,async()=>{try{const t=await h();console.log(`[${new Date().toISOString()}] [metrics] job started`,JSON.stringify(t)),c("metrics",t)}catch(t){console.warn("sync_metrics_job",t)}}),n=s.schedule(r,()=>{try{c("health-checks")}catch(t){console.warn("health_check_job",t)}});o.start(),e.start(),n.start()};var d=p;export{d as default};
