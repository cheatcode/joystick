import o from"winston";import m from"fs";import l from"path";import u from"../../lib/path_exists.js";import f from"../../lib/generate_id.js";import g from"../../lib/push_encrypt.js";const{mkdir:_}=m.promises,d=o.format(t=>({...t,message:g(t.message,process.env.PUSH_INSTANCE_TOKEN)})),h=async()=>{await u("/root/push/logs")||await _("/root/push/logs",{recursive:!0});const t=o.createLogger({format:o.format.combine(o.format.timestamp(),d(),o.format(r=>(r._id=f(16),r))(),o.format.json()),transports:[new o.transports.File({filename:"/root/push/logs/app.log",maxsize:1024*1024*10,maxFiles:1,tailable:!0})]});function n(){if(process.env.PUSH_DEBUG!=="true")return"";const r=Error.prepareStackTrace;Error.prepareStackTrace=(E,p)=>p;const e=new Error().stack;Error.prepareStackTrace=r;const s=e[2],c=l.relative(process.cwd(),s.getFileName()),i=s.getLineNumber();return`[${c}:${i}] `}function a(r,e){return e+r}process.stdout.write=function(r){return function(e){const s=n();t.info(a(e,s)),r.apply(process.stdout,arguments)}}(process.stdout.write),process.stderr.write=function(r){return function(e){const s=n();t.error(a(e,s)),r.apply(process.stderr,arguments)}}(process.stderr.write),process.on("uncaughtException",r=>{const e=n();t.error(a(`Uncaught Exception: ${r instanceof Error?r.stack:r}`,e))}),process.on("unhandledRejection",r=>{const e=n();t.error(a(`Unhandled Rejection: ${r instanceof Error?r.stack:r}`,e))})};var T=h;export{T as default};
