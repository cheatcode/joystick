import o from"winston";import p from"fs";import m from"path";import l from"../../lib/path_exists.js";import u from"../../lib/generate_id.js";import f from"../../lib/push_encrypt.js";const{mkdir:g}=p.promises,y=o.format(t=>({...t,message:f(t.message,process.env.PUSH_INSTANCE_TOKEN)})),_=async()=>{await l("/root/push/logs")||await g("/root/push/logs",{recursive:!0});const t=o.createLogger({format:o.format.combine(o.format.timestamp(),o.format(r=>(r._id=u(16),r))(),o.format.json()),transports:[new o.transports.File({filename:"/root/push/logs/app.log",maxsize:1024*1024*10,maxFiles:1,tailable:!0})]});function n(){const r=Error.prepareStackTrace;Error.prepareStackTrace=(d,i)=>i;const e=new Error().stack;Error.prepareStackTrace=r;const s=e[2],a=m.relative(process.cwd(),s.getFileName()),c=s.getLineNumber();return`${a}:${c}`}process.stdout.write=function(r){return function(e){const s=n();t.info(`[${s}] ${e}`),r.apply(process.stdout,arguments)}}(process.stdout.write),process.stderr.write=function(r){return function(e){const s=n();t.error(`[${s}] ${e}`),r.apply(process.stderr,arguments)}}(process.stderr.write),process.on("uncaughtException",r=>{const e=n();t.error(`[${e}] Uncaught Exception: ${r instanceof Error?r.stack:r}`)}),process.on("unhandledRejection",r=>{const e=n();t.error(`[${e}] Unhandled Rejection: ${r instanceof Error?r.stack:r}`)})};var N=_;export{N as default};
