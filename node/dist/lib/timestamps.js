const S={get_current_time:(n={})=>{const r=new Date().toISOString();return n?.mongodb_ttl?new Date(r):r},get_future_time:(n="",r=0,e={})=>{const t=e?.start_from?new Date(e?.start_from):new Date;switch(n){case"seconds":return t.setSeconds(t.getSeconds()+r),e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString();case"minutes":return t.setMinutes(t.getMinutes()+r),e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString();case"hours":return t.setHours(t.getHours()+r),e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString();case"days":return t.setHours(t.getHours()+r*24),e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString();default:return e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString()}},get_past_time:(n="",r=0,e={})=>{const t=e?.start_from?new Date(e?.start_from):new Date;switch(n){case"seconds":return t.setSeconds(t.getSeconds()-r),e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString();case"minutes":return t.setMinutes(t.getMinutes()-r),e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString();case"hours":return t.setHours(t.getHours()-r),e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString();case"days":return t.setHours(t.getHours()-r*24),e?.mongodb_ttl?new Date(t.toISOString()):t.toISOString();default:return e?.mongodb_ttl?new Date(new Date().toISOString()):new Date().toISOString()}}};var o=S;export{o as default};
