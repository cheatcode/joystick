import a from"../../lib/logRequestErrors.js";import u from"../../lib/parseJSON.js";import n from"../../lib/throwFrameworkError.js";import y from"../../lib/generateCookieHeader.js";const m=async(o={})=>{try{const e=await o.text();return u(e)}catch(e){n("api.set.handleParseResponse",e)}},f=(o={})=>{try{return JSON.stringify(o)}catch(e){n("api.set.getBody",e)}};var l=(o="",e={})=>{try{return typeof window.fetch<"u"?new Promise((r,i)=>{const d=`${window.location.origin}/api/_setters/${o}`,p=f(e),c={...e?.headers||{},"Content-Type":"application/json","x-joystick-csrf":"joystick_test"};return e?.user&&(c.Cookie=y({joystickLoginToken:e?.user?.joystickLoginToken,joystickLoginTokenExpiresAt:e?.user?.joystickLoginTokenExpiresAt})),window.fetch(d,{method:"POST",mode:"cors",headers:c,body:p,credentials:"include",cache:"no-store"}).then(async t=>{const s=await m(t);return s?.errors?(a("set",s.errors),i(s)):r(s)}).catch(t=>(a("set",[t]),i({errors:[t]})))}):Promise.resolve()}catch(r){n("set request",r)}};export{l as default};
