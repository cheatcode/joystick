const l={create_table:(e={})=>{const t=Object.entries(e?.columns)?.map(([a,r])=>`${a} ${r}`)?.join(",");return{statement:`CREATE TABLE IF NOT EXISTS ${e?.table} (${t})`,columns:t}},add_column:(e={})=>({statement:`ALTER TABLE ${e?.table} ADD COLUMN IF NOT EXISTS ${e?.column_name} ${e?.column_type}`}),select:(e={})=>{const t=Array.isArray(e?.columns)?e?.columns?.join(","):"*",r=Object.entries(e?.where)?.map(([n],c)=>`${n} = $${c+1}`)?.join(",");return{statement:`SELECT ${t} FROM ${e?.table} ${e?.where?`WHERE ${r}`:""}`,column_names:t,where:r,values:Object.values(e?.where)}},insert:(e={})=>{const t=Object.keys(e?.data)?.join(","),a=Object.keys(e?.data)?.map((r,n)=>`$${n+1}`)?.join(",");return{statement:`INSERT INTO ${e?.table} (${t}) VALUES (${a})`,column_names:t,value_placeholders:a,values:Object.values(e?.data)}},update:(e={})=>{const t=Object.entries(e?.where),a=Object.keys(e?.data).map((n,c)=>`${n} = $${t.length+c+1}`)?.join(","),r=t?.map(([n],c)=>`${n} = $${c+1}`)?.join(",");return{statement:`UPDATE ${e?.table} SET ${a} WHERE ${r}`,sets:a,where:r,values:[...Object.values(e?.where),...Object.values(e?.data)]}}};var s=l;export{s as default};
