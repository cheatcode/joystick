var g="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890".split(""),c=(e=16)=>{let t="",r=0;for(;r<e;)t+=g[Math.floor(Math.random()*(g.length-1))],r+=1;return t};var w=(e="",t={})=>{throw new Error(`[joystick${e?`.${e}`:""}] ${t.message||t.reason||t}`)};var m=(e="",t=[])=>{try{console.error(`${e} failed with the following errors:`),t.forEach(r=>{console.log(r.message),r.stack&&console.log(r.stack)})}catch(r){w(e,r)}};var i=(e="",t=[])=>{typeof window!="undefined"&&!!window.__joystick_test__&&(window.test={...window.test||{},functionCalls:{...window?.test?.functionCalls||{},[e]:[...window?.test?.functionCalls&&window?.test?.functionCalls[e]||[],{calledAt:new Date().toISOString(),args:t}]}})};var d=null,u=0,k=(e={},t=null)=>{try{if(window?.__joystick_test__)return t();let r=e?.url;e?.query&&(r=`${r}?${new URLSearchParams(e.query).toString()}`);let l=new WebSocket(r);d&&(clearInterval(d),d=null);let n={client:l,send:(o={})=>(i(`ui.websockets.${e?.test?.name||c()}.send`,[o]),l.send(JSON.stringify(o)))};return l.addEventListener("open",()=>{e?.options?.logging&&console.log(`[joystick.websockets] Connected to ${e?.url}`),e?.events?.onOpen&&(e.events.onOpen(n),i(`ui.websockets.${e?.test?.name||c()}.onOpen`,[n])),u=0}),l.addEventListener("message",o=>{o?.data&&e?.events?.onMessage&&(e.events.onMessage(JSON.parse(o.data||{}),n),i(`ui.websockets.${e?.test?.name||c()}.onMessage`,[o.data||{},n]))}),l.addEventListener("close",o=>{e?.options?.logging&&console.log(`[joystick.websockets] Disconnected from ${e?.url}`),e?.events?.onClose&&(e.events.onClose(o?.code,o?.reason,n),i(`ui.websockets.${e?.test?.name||c()}.onClose`,[o.data||{},n])),l=null;let s=[1e3,1001].includes(o?.code);e?.options?.autoReconnect&&!d&&!s&&(d=setInterval(()=>{l=null,u<(e?.options?.reconnectAttempts||12)?(k(e,t),e?.options?.logging&&console.log(`[joystick.websockets] Attempting to reconnect (${u+1}/12)...`),u+=1):clearInterval(d)},e?.options?.reconnectDelayInSeconds*1e3||5e3))}),t&&t(n),n}catch(r){w("websockets.client",r)}},h=k;var P=(e="",t={})=>{try{if(window?.__joystick_test__){i(`ui.upload.${e}`,[e,t]);return}return new Promise((r,l)=>{let n=c(),o=0;h({url:`${window?.process?.env.NODE_ENV==="development"?"ws":"wss"}://${location.host}/api/_websockets/uploaders`,options:{logging:!1,autoReconnect:!0,reconnectAttempts:12,reconnectDelayInSeconds:5},query:{id:n},events:{onMessage:(s={})=>{s?.type==="PROGRESS"&&t?.onProgress&&o<100&&o!==s?.progress&&(o=s?.progress,t.onProgress(s?.progress,s?.provider))}}},()=>{let s;t?.files?.length>0&&(s=new FormData,Array.from(t?.files).forEach(f=>{s.append("files",f,f.name)})),fetch(`${window.location.origin}/api/_uploaders/${e}`,{method:"POST",headers:{"x-joystick-upload-id":n,"x-joystick-upload-input":JSON.stringify(t?.input||{})},body:s}).then(async f=>{let a=await f.json();console.log(a),a&&a.errors?(m("upload",a.errors),l({errors:a.errors})):r(a?.uploads)})})})}catch(r){w("upload",r)}};export{P as default};
