var g="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890".split(""),w=(e=16)=>{let r="",o=0;for(;o<e;)r+=g[Math.floor(Math.random()*(g.length-1))],o+=1;return r};var a=(e="",r={})=>{throw new Error(`[joystick${e?`.${e}`:""}] ${r.message||r.reason||r}`)};var u=(e="",r=[])=>{try{console.error(`${e} failed with the following errors:`),r.forEach(o=>{console.log(o.message),o.stack&&console.log(o.stack)})}catch(o){a(e,o)}};var i=null,f=0,m=(e={},r=null)=>{try{let o=e?.url;e?.query&&(o=`${o}?${new URLSearchParams(e.query).toString()}`);let s=new WebSocket(o);i&&(clearInterval(i),i=null);let l={client:s,send:(t={})=>s.send(JSON.stringify(t))};return s.addEventListener("open",()=>{e?.options?.logging&&console.log(`[joystick.websockets] Connected to ${e?.url}`),e?.events?.onOpen&&e.events.onOpen(l),f=0}),s.addEventListener("message",t=>{t?.data&&e?.events?.onMessage&&e.events.onMessage(JSON.parse(t.data||{}),l)}),s.addEventListener("close",t=>{e?.options?.logging&&console.log(`[joystick.websockets] Disconnected from ${e?.url}`),e?.events?.onClose&&e.events.onClose(t?.code,t?.reason,l),s=null;let n=[1e3,1001].includes(t?.code);e?.options?.autoReconnect&&!i&&!n&&(i=setInterval(()=>{s=null,f<(e?.options?.reconnectAttempts||12)?(m(e,r),e?.options?.logging&&console.log(`[joystick.websockets] Attempting to reconnect (${f+1}/12)...`),f+=1):clearInterval(i)},e?.options?.reconnectDelayInSeconds*1e3||5e3))}),r&&r(l),l}catch(o){a("websockets.client",o)}},p=m;var j=(e="",r={})=>{try{return new Promise((o,s)=>{let l=w(),t=0;p({url:`${window?.process?.env.NODE_ENV==="development"?"ws":"wss"}://${location.host}/api/_websockets/uploaders`,options:{logging:!1,autoReconnect:!0,reconnectAttempts:12,reconnectDelayInSeconds:5},query:{id:l},events:{onMessage:(n={})=>{n?.type==="PROGRESS"&&r?.onProgress&&t<100&&t!==n?.progress&&(t=n?.progress,r.onProgress(n?.progress,n?.provider))}}},()=>{let n;r?.files?.length>0&&(n=new FormData,Array.from(r?.files).forEach(d=>{n.append("files",d,d.name)})),fetch(`${window.location.origin}/api/_uploaders/${e}`,{method:"POST",headers:{"x-joystick-upload-id":l,"x-joystick-upload-input":JSON.stringify(r?.input||{})},body:n}).then(async d=>{let c=await d.json();console.log(c),c&&c.errors?(u("upload",c.errors),s({errors:c.errors})):o(c?.uploads)})})})}catch(o){a("upload",o)}};export{j as default};
