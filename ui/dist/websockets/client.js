var a=(e="",n={})=>{throw new Error(`[joystick${e?`.${e}`:""}] ${n.message||n.reason||n}`)};var l=null,o=0,i=(e={},n=null)=>{try{let s=e?.url;e?.query&&(s=`${s}?${new URLSearchParams(e.query).toString()}`);let r=new WebSocket(s);l&&(clearInterval(l),l=null);let c={client:r,send:(t={})=>r.send(JSON.stringify(t))};return r.addEventListener("open",()=>{e?.options?.logging&&console.log(`[joystick.websockets] Connected to ${e?.url}`),e?.events?.onOpen&&e.events.onOpen(c),o=0}),r.addEventListener("message",t=>{t?.data&&e?.events?.onMessage&&e.events.onMessage(JSON.parse(t.data||{}),c)}),r.addEventListener("close",t=>{e?.options?.logging&&console.log(`[joystick.websockets] Disconnected from ${e?.url}`),e?.events?.onClose&&e.events.onClose(t?.code,t?.reason,c),r=null;let g=[1e3,1001].includes(t?.code);e?.options?.autoReconnect&&!l&&!g&&(l=setInterval(()=>{r=null,o<(e?.options?.reconnectAttempts||12)?(i(e,n),e?.options?.logging&&console.log(`[joystick.websockets] Attempting to reconnect (${o+1}/12)...`),o+=1):clearInterval(l)},e?.options?.reconnectDelayInSeconds*1e3||5e3))}),n&&n(c),c}catch(s){a("websockets.client",s)}},f=i;export{f as default};
