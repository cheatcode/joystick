var o=(e="",r={})=>{throw new Error(`[joystick${e?`.${e}`:""}] ${r.message||r.reason||r}`)};var n=(e="",r=[])=>{try{console.error(`${e} failed with the following errors:`),r.forEach(t=>{console.log(t.message),t.stack&&console.log(t.stack)})}catch(t){o(e,t)}};var i=(e="{}")=>{try{return JSON.parse(e)}catch{return e}};var l=async(e={})=>{try{let r=await e.text();return i(r)}catch(r){o("api.set.handleParseResponse",r)}},u=(e={})=>{try{return JSON.stringify(e)}catch(r){o("api.set.getBody",r)}},E=(e="",r={})=>{try{return typeof window.fetch!="undefined"?new Promise((t,c)=>{let p=`${window.location.origin}/api/_setters/${e}`,d=u(r);return fetch(p,{method:"POST",mode:"cors",headers:{...r?.headers||{},"Content-Type":"application/json"},body:d,credentials:"include"}).then(async s=>{let a=await l(s);return a?.errors?(n("set request",a.errors),c(a)):t(a)}).catch(s=>(n("set request",[s]),c({errors:[s]})))}):Promise.resolve()}catch(t){o("set request",t)}};export{E as default};
