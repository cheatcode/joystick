var o=(r="",e={})=>{throw new Error(`[joystick${r?`.${r}`:""}] ${e.message||e.reason||e}`)};var a=(r="",e=[])=>{try{console.error(`${r} failed with the following errors:`),e.forEach(t=>{console.log(t.message),t.stack&&console.log(t.stack)})}catch(t){o(r,t)}};var d=(r="{}")=>{try{return JSON.parse(r)}catch{return r}};var w=async(r={})=>{try{let e=await r.text();return d(e)}catch(e){o("api.set.handleParseResponse",e)}},f=(r={})=>{try{return JSON.stringify(r)}catch(e){o("api.set.getBody",e)}},E=(r="",e={})=>{try{return typeof window.fetch!="undefined"?new Promise((t,i)=>{let p=`${window.location.origin}/api/_setters/${r}`,l=f(e),u=document.querySelector('[name="csrf"]')?.getAttribute("content"),c={...e?.headers||{},"Content-Type":"application/json","x-joystick-csrf":u};return window?.__joystick_test__&&(c.Cookie=generateCookieHeader({joystickLoginToken:window?.__joystick_test_login_token__,joystickLoginTokenExpiresAt:window.__joystick_test_login_token_expirs_at__})),fetch(p,{method:"POST",mode:"cors",headers:c,body:l,credentials:"include"}).then(async s=>{let n=await w(s);return n?.errors?(a("set request",n.errors),i(n)):t(n)}).catch(s=>(a("set request",[s]),i({errors:[s]})))}):Promise.resolve()}catch(t){o("set request",t)}};export{E as default};
