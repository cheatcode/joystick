var o=(e="",r={})=>{throw new Error(`[joystick${e?`.${e}`:""}] ${r.message||r.reason||r}`)};var a=(e="",r=[])=>{try{console.error(`${e} failed with the following errors:`),r.forEach(t=>{console.log(t.message),t.stack&&console.log(t.stack)})}catch(t){o(e,t)}};var u=(e="{}")=>{try{return JSON.parse(e)}catch{return e}};var f=async(e={})=>{try{let r=await e.text();return u(r)}catch(r){o("api.get.handleParseResponse",r)}},x=(e="",r={})=>{try{return typeof window.fetch!="undefined"&&!r?.skip?new Promise((t,c)=>{let i=r.input?JSON.stringify(r.input):null,l=r.output?JSON.stringify(r.output):null,p=`${window.location.origin}/api/_getters/${e}?input=${i}&output=${l}`,d=document.querySelector('[name="csrf"]')?.getAttribute("content");return fetch(p,{method:"GET",mode:"cors",headers:{...r?.headers||{},"x-joystick-csrf":d},credentials:"include"}).then(async s=>{let n=await f(s);return n?.errors?(a("get request",n.errors),c(n)):t(n)}).catch(s=>(a("get request",[s]),c({errors:[s]})))}):Promise.resolve()}catch(t){o("get request",t)}};export{x as default};
