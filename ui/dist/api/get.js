var t=(e="",r={})=>{throw new Error(`[joystick${e?`.${e}`:""}] ${r.message||r.reason||r}`)};var n=(e="",r=[])=>{try{console.error(`${e} failed with the following errors:`),r.forEach(o=>{console.log(o.message),o.stack&&console.log(o.stack)})}catch(o){t(e,o)}};var i=(e="{}")=>{try{return JSON.parse(e)}catch(r){t("parseJSON",r)}};var m=async(e={})=>{try{let r=await e.text();return i(r)}catch(r){t("api.get.handleParseResponse",r)}},F=(e="",r={})=>{try{if(typeof window.fetch!="undefined")return new Promise((o,c)=>{let u=r.input?JSON.stringify(r.input):null,p=r.output?JSON.stringify(r.output):null,l=`${window.location.origin}/api/_getters/${e}?input=${u}&output=${p}`;return fetch(l,{method:"GET",mode:"cors",headers:{...r?.headers||{}},credentials:"include"}).then(async s=>{let a=await m(s);return a?.errors?(n("get request",a.errors),c(a)):o(a)}).catch(s=>(n("get request",[s]),c({errors:[s]})))})}catch(o){t("get request",o)}};export{F as default};
