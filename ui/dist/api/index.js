var s=(e="",r={})=>{throw new Error(`[joystick${e?`.${e}`:""}] ${r.message||r.reason||r}`)};var a=(e="",r=[])=>{try{console.error(`${e} failed with the following errors:`),r.forEach(t=>{console.log(t.message),t.stack&&console.log(t.stack)})}catch(t){s(e,t)}};var u=(e="{}")=>{try{return JSON.parse(e)}catch{return e}};var f=async(e={})=>{try{let r=await e.text();return u(r)}catch(r){s("api.get.handleParseResponse",r)}},l=(e="",r={})=>{try{return typeof window.fetch!="undefined"&&!r?.skip?new Promise((t,i)=>{let p=r.input?JSON.stringify(r.input):null,d=r.output?JSON.stringify(r.output):null,n=`${window.location.origin}/api/_getters/${e}?input=${p}&output=${d}`;return fetch(n,{method:"GET",mode:"cors",headers:{...r?.headers||{}},credentials:"include"}).then(async o=>{let c=await f(o);return c?.errors?(a("get request",c.errors),i(c)):t(c)}).catch(o=>(a("get request",[o]),i({errors:[o]})))}):Promise.resolve()}catch(t){s("get request",t)}};var h=async(e={})=>{try{let r=await e.text();return u(r)}catch(r){s("api.set.handleParseResponse",r)}},w=(e={})=>{try{return JSON.stringify(e)}catch(r){s("api.set.getBody",r)}},m=(e="",r={})=>{try{return typeof window.fetch!="undefined"?new Promise((t,i)=>{let p=`${window.location.origin}/api/_setters/${e}`,d=w(r);return fetch(p,{method:"POST",mode:"cors",headers:{...r?.headers||{},"Content-Type":"application/json"},body:d,credentials:"include"}).then(async n=>{let o=await h(n);return o?.errors?(a("set request",o.errors),i(o)):t(o)}).catch(n=>(a("set request",[n]),i({errors:[n]})))}):Promise.resolve()}catch(t){s("set request",t)}};var O={get:l,set:m};export{O as default};
