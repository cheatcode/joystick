var p=(n={},r={})=>{Object.entries(n).forEach(([o,e])=>{r[o]=e})};var f="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890".split(""),m=(n=16)=>{let r="",o=0;for(;o<n;)r+=f[Math.floor(Math.random()*(f.length-1))],o+=1;return r};var i=(n="",r={})=>{throw new Error(`[joystick${n?`.${n}`:""}] ${r.message||r.reason||r}`)};var c=n=>{try{return typeof n=="function"}catch(r){i("types.isFunction",r)}};var h=n=>{try{return!!(n&&typeof n=="object"&&!Array.isArray(n))}catch(r){i("types.isObject",r)}};var u=(n={},r="",o="id")=>{try{let e=n&&n.id;if(h(n)&&e){let s=Object.keys(n);for(let t=0;t<s.length;t+=1){let a=s[t],d=n[a];if(a===o&&d===r)return n;if(a==="children"&&Array.isArray(d))for(let l=0;l<d.length;l+=1){let b=d[l],g=u(b,r,o);if(g!==null)return g}}}return null}catch(e){i("component.findComponentInTreeByField",e)}},y=u;var D=(n={},r="",o="",e={})=>{try{let s=null;n.dragDrop={...n.dragDrop||{},events:{...n.dragDrop?.events||{},[`drag [data-${r}="${o}"]`]:(t={},a={})=>{e?.events?.onDrag&&c(e.events.onDrag)&&e.events.onDrag(t,a)},[`dragend [data-${r}="${o}"]`]:(t={},a={})=>{r==="droppable"&&e.sortable&&(t.target.classList.remove("is-dragging"),s=null),e?.events?.onDragEnd&&c(e.events.onDragEnd)&&e.events.onDragEnd(t,a)},[`dragenter [data-${r}="${o}"]`]:(t={},a={})=>{e?.events?.onDragEnter&&c(e.events.onDragEnter)&&e.events.onDragEnter(t,a)},[`dragleave [data-${r}="${o}"]`]:(t={},a={})=>{e?.events?.onDragLeave&&c(e.events.onDragLeave)&&e.events.onDragLeave(t,a)},[`dragover [data-${r}="${o}"]`]:(t={},a={})=>{r==="droppable"&&e.sortable&&t.target.parentNode.hasAttribute("data-droppable")&&(s.compareDocumentPosition(t.target)===Node.DOCUMENT_POSITION_PRECEDING?t.target.parentNode.insertBefore(s,t.target):t.target.parentNode.insertBefore(s,t.target.nextSibling)),e?.events?.onDragOver&&c(e.events.onDragOver)&&e.events.onDragOver(t,a)},[`dragstart [data-${r}="${o}"]`]:(t={},a={})=>{r==="droppable"&&e.sortable&&(t.dataTransfer.effectAllowed="move",s=t.target,t.target.classList.add("is-dragging"),t.dataTransfer.setData("text/plain",null),t.dataTransfer.setDragImage(new Image,0,0)),e?.events?.onDragStart&&c(e.events.onDragStart)&&e.events.onDragStart(t,a)},[`drop [data-${r}="${o}"]`]:(t={},a={})=>{e?.events?.onDrop&&c(e.events.onDrop)&&e.events.onDrop(t,a)}}}}catch(s){i("component.renderMethods.dragDrop.attachEvents",s)}};var x=class{constructor(r={}){p(r,this)}initHTML(r=""){let o=document.createElement("div");o.innerHTML=r?.trim()?.replace(/\n/g,"");let e=o.childNodes;if(e?.length>0){for(let s=0;s<e?.length;s+=1){let t=e[s],a=this.id||m();t.setAttribute("draggable",!0),t.setAttribute("data-draggable",a),this.attachEvents(a,this.parent)}return o.innerHTML}}attachEvents(r="",o={}){let e=y(window.joystick._internal.tree,o.instanceId,"instanceId")?.instance||{};D(e,"draggable",r,{events:this.events})}},_=x;export{_ as default};
