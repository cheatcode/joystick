var g=(n={},e={})=>{Object.entries(n).forEach(([a,r])=>{e[a]=r})};var i=(n="",e={})=>{throw new Error(`[joystick${n?`.${n}`:""}] ${e.message||e.reason||e}`)};var c=n=>{try{return typeof n=="function"}catch(e){i("types.isFunction",e)}};var f=n=>{try{return!!(n&&typeof n=="object"&&!Array.isArray(n))}catch(e){i("types.isObject",e)}};var m=(n={},e="",a="id")=>{try{let r=n&&n.id;if(f(n)&&r){let o=Object.keys(n);for(let t=0;t<o.length;t+=1){let s=o[t],d=n[s];if(s===a&&d===e)return n;if(s==="children"&&Array.isArray(d))for(let l=0;l<d.length;l+=1){let x=d[l],p=m(x,e,a);if(p!==null)return p}}}return null}catch(r){i("component.findComponentInTreeByField",r)}},h=m;var y=(n={},e="",a="",r={})=>{try{let o=null;n.dragDrop={...n.dragDrop||{},events:{...n.dragDrop?.events||{},[`drag [data-${e}="${a}"]`]:(t={},s={})=>{r?.events?.onDrag&&c(r.events.onDrag)&&r.events.onDrag(t,s)},[`dragend [data-${e}="${a}"]`]:(t={},s={})=>{e==="droppable"&&r.sortable&&(t.target.classList.remove("is-dragging"),o=null),r?.events?.onDragEnd&&c(r.events.onDragEnd)&&r.events.onDragEnd(t,s)},[`dragenter [data-${e}="${a}"]`]:(t={},s={})=>{r?.events?.onDragEnter&&c(r.events.onDragEnter)&&r.events.onDragEnter(t,s)},[`dragleave [data-${e}="${a}"]`]:(t={},s={})=>{r?.events?.onDragLeave&&c(r.events.onDragLeave)&&r.events.onDragLeave(t,s)},[`dragover [data-${e}="${a}"]`]:(t={},s={})=>{e==="droppable"&&r.sortable&&t.target.parentNode.hasAttribute("data-droppable")&&(o.compareDocumentPosition(t.target)===Node.DOCUMENT_POSITION_PRECEDING?(o.style=`transform: translate3d(0px, ${t.target.top-o.top}px, 0px);`,t.target.parentNode.insertBefore(o,t.target),t.target.style=""):(o.style=`transform: translate3d(0px, ${o.top-t.target.nextSibling.top}px, 0px);`,t.target.parentNode.insertBefore(o,t.target.nextSibling)),o.style=""),r?.events?.onDragOver&&c(r.events.onDragOver)&&r.events.onDragOver(t,s)},[`dragstart [data-${e}="${a}"]`]:(t={},s={})=>{e==="droppable"&&r.sortable&&(t.dataTransfer.effectAllowed="move",o=t.target,t.target.classList.add("is-dragging"),t.dataTransfer.setData("text/plain",null),t.dataTransfer.setDragImage(new Image,0,0)),r?.events?.onDragStart&&c(r.events.onDragStart)&&r.events.onDragStart(t,s)},[`drop [data-${e}="${a}"]`]:(t={},s={})=>{r?.events?.onDrop&&c(r.events.onDrop)&&r.events.onDrop(t,s)}}}}catch(o){i("component.renderMethods.dragDrop.attachEvents",o)}};var u=class{constructor(e={}){g(e,this)}initHTML(e=""){let a=document.createElement("div");a.innerHTML=e?.trim()?.replace(/\n/g,"");let r=a.childNodes;if(r?.length>0){for(let o=0;o<r?.length;o+=1)r[o].setAttribute("data-droppable",this.name),this.attachEvents(this.name,this.parent);return a.innerHTML}}attachEvents(e="",a={}){let r=h(window.joystick._internal.tree,a.instanceId,"instanceId")?.instance||{};y(r,"droppable",e,{events:this.events,sortable:this.sortable})}},S=u;export{S as default};
