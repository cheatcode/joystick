var p=(n={},t={})=>{Object.entries(n).forEach(([o,r])=>{t[o]=r})};var i=(n="",t={})=>{throw new Error(`[joystick${n?`.${n}`:""}] ${t.message||t.reason||t}`)};var c=n=>{try{return typeof n=="function"}catch(t){i("types.isFunction",t)}};var f=n=>{try{return!!(n&&typeof n=="object"&&!Array.isArray(n))}catch(t){i("types.isObject",t)}};var m=(n={},t="",o="id")=>{try{let r=n&&n.id;if(f(n)&&r){let s=Object.keys(n);for(let e=0;e<s.length;e+=1){let a=s[e],d=n[a];if(a===o&&d===t)return n;if(a==="children"&&Array.isArray(d))for(let l=0;l<d.length;l+=1){let D=d[l],g=m(D,t,o);if(g!==null)return g}}}return null}catch(r){i("component.findComponentInTreeByField",r)}},h=m;var y=(n={},t="",o="",r={})=>{try{let s=null;n.dragDrop={...n.dragDrop||{},events:{...n.dragDrop?.events||{},[`drag [data-${t}="${o}"]`]:(e={},a={})=>{r?.events?.onDrag&&c(r.events.onDrag)&&r.events.onDrag(e,a)},[`dragend [data-${t}="${o}"]`]:(e={},a={})=>{t==="droppable"&&r.sortable&&(e.target.classList.remove("is-dragging"),s=null),r?.events?.onDragEnd&&c(r.events.onDragEnd)&&r.events.onDragEnd(e,a)},[`dragenter [data-${t}="${o}"]`]:(e={},a={})=>{r?.events?.onDragEnter&&c(r.events.onDragEnter)&&r.events.onDragEnter(e,a)},[`dragleave [data-${t}="${o}"]`]:(e={},a={})=>{r?.events?.onDragLeave&&c(r.events.onDragLeave)&&r.events.onDragLeave(e,a)},[`dragover [data-${t}="${o}"]`]:(e={},a={})=>{t==="droppable"&&r.sortable&&e.target.parentNode.hasAttribute("data-droppable")&&(s.compareDocumentPosition(e.target)===Node.DOCUMENT_POSITION_PRECEDING?e.target.parentNode.insertBefore(s,e.target):e.target.parentNode.insertBefore(s,e.target.nextSibling)),r?.events?.onDragOver&&c(r.events.onDragOver)&&r.events.onDragOver(e,a)},[`dragstart [data-${t}="${o}"]`]:(e={},a={})=>{t==="droppable"&&r.sortable&&(e.dataTransfer.effectAllowed="move",s=e.target,e.target.classList.add("is-dragging"),e.dataTransfer.setData("text/plain",null),e.dataTransfer.setDragImage(new Image,0,0)),r?.events?.onDragStart&&c(r.events.onDragStart)&&r.events.onDragStart(e,a)},[`drop [data-${t}="${o}"]`]:(e={},a={})=>{r?.events?.onDrop&&c(r.events.onDrop)&&r.events.onDrop(e,a)}}}}catch(s){i("component.renderMethods.dragDrop.attachEvents",s)}};var u=class{constructor(t={}){p(t,this)}initHTML(t=""){let o=document.createElement("div");o.innerHTML=t?.trim()?.replace(/\n/g,"");let r=o.childNodes;if(r?.length>0){for(let s=0;s<r?.length;s+=1)r[s].setAttribute("data-droppable",this.name),this.attachEvents(this.name,this.parent);return o.innerHTML}}attachEvents(t="",o={}){let r=h(window.joystick._internal.tree,o.instanceId,"instanceId")?.instance||{};y(r,"droppable",t,{events:this.events,sortable:this.sortable})}},j=u;export{j as default};
