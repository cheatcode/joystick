var o=(e="",r={})=>{throw new Error(`[joystick${e?`.${e}`:""}] ${r.message||r.reason||r}`)};var u=(e="{}")=>{try{return JSON.parse(e)}catch(r){o("parseJSON",r)}};var c=(e="",r=[])=>{try{console.error(`${e} failed with the following errors:`),r.forEach(t=>{console.log(t.message),t.stack&&console.log(t.stack)})}catch(t){o(e,t)}};var w=async(e={})=>{try{let r=await e.text();return u(r)}catch(r){o("accounts.request.handleParseResponse",r)}},d=(e="GET",r={})=>{try{return["POST"].includes(e)?JSON.stringify({...r,origin:window?.location?.origin}):null}catch(t){o("accounts.request.getBody",t)}},m=(e=null)=>{try{switch(e){case"authenticated":case"user":return"GET";default:return"POST"}}catch(r){o("accounts.request.getHTTPMethod",r)}},h=(e="",r={})=>{try{if(typeof window.fetch!="undefined")return new Promise((t,n)=>{let l=`${window.location.origin}/api/_accounts/${e}`,i=m(e),p=d(i,r);return fetch(l,{method:i,mode:"cors",headers:{"Content-Type":"application/json"},body:p,credentials:"include"}).then(async s=>{let a=await w(s);return a?.errors?(c(`accounts.${e}`,a.errors),n(a)):t(a)}).catch(s=>(c(`accounts.${e}`,[s]),n({errors:[s]})))})}catch(t){o(`accounts.request.${e}`,t)}};var $=async(e={})=>{try{let r=await h("user",e);return r?.status===200&&r?.user}catch(r){o("accounts.user",r)}};export{$ as default};
