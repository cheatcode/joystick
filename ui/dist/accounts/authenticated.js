var u=(r="{}")=>{try{return JSON.parse(r)}catch{return r}};var o=(r="",t={})=>{throw new Error(`[joystick${r?`.${r}`:""}] ${t.message||t.reason||t}`)};var c=(r="",t=[])=>{try{console.error(`${r} failed with the following errors:`),t.forEach(e=>{console.log(e.message),e.stack&&console.log(e.stack)})}catch(e){o(r,e)}};var p=async(r={})=>{try{let t=await r.text();return u(t)}catch(t){o("accounts.request.handleParseResponse",t)}},w=(r="GET",t={})=>{try{return["POST"].includes(r)?JSON.stringify({...t,origin:window?.location?.origin}):null}catch(e){o("accounts.request.getBody",e)}},m=(r=null)=>{try{switch(r){case"authenticated":case"user":return"GET";default:return"POST"}}catch(t){o("accounts.request.getHTTPMethod",t)}},h=(r="",t={})=>{try{if(typeof window.fetch!="undefined")return new Promise((e,n)=>{let d=`${window.location.origin}/api/_accounts/${r}`,i=m(r),l=w(i,t);return fetch(d,{method:i,mode:"cors",headers:{"Content-Type":"application/json"},body:l,credentials:"include"}).then(async s=>{let a=await p(s);return a?.errors?(c(`accounts.${r}`,a.errors),n(a)):e(a)}).catch(s=>(c(`accounts.${r}`,[s]),n({errors:[s]})))})}catch(e){o(`accounts.request.${r}`,e)}};var O=async(r={})=>{try{let t=await h("authenticated",r);return t?.status===200&&t?.authenticated}catch(t){o("accounts.authenticated",t)}};export{O as default};
