var o=(r="",e={})=>{throw new Error(`[joystick${r?`.${r}`:""}] ${e.message||e.reason||e}`)};var u=(r="{}")=>{try{return JSON.parse(r)}catch(e){o("parseJSON",e)}};var c=(r="",e=[])=>{try{console.error(`${r} failed with the following errors:`),e.forEach(t=>{console.log(t.message),t.stack&&console.log(t.stack)})}catch(t){o(r,t)}};var l=async(r={})=>{try{let e=await r.text();return u(e)}catch(e){o("accounts.request.handleParseResponse",e)}},p=(r="GET",e={})=>{try{return["POST"].includes(r)?JSON.stringify({...e,origin:window?.location?.origin}):null}catch(t){o("accounts.request.getBody",t)}},m=(r=null)=>{try{switch(r){case"authenticated":case"user":return"GET";default:return"POST"}}catch(e){o("accounts.request.getHTTPMethod",e)}},h=(r="",e={})=>{try{if(typeof window.fetch!="undefined")return new Promise((t,n)=>{let d=`${window.location.origin}/api/_accounts/${r}`,i=m(r),w=p(i,e);return fetch(d,{method:i,mode:"cors",headers:{"Content-Type":"application/json"},body:w,credentials:"include"}).then(async s=>{let a=await l(s);return a?.errors?(c(`accounts.${r}`,a.errors),n(a)):t(a)}).catch(s=>(c(`accounts.${r}`,[s]),n({errors:[s]})))})}catch(t){o(`accounts.request.${r}`,t)}};var $=(r={})=>{try{return h("reset-password",r)}catch(e){o("accounts.resetPassword",e)}};export{$ as default};
