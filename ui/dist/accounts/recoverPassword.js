var t=(r="",e={})=>{throw new Error(`[joystick${r?`.${r}`:""}] ${e.message||e.reason||e}`)};var u=(r="{}")=>{try{return JSON.parse(r)}catch(e){t("parseJSON",e)}};var a=(r="",e=[])=>{try{console.error(`${r} failed with the following errors:`),e.forEach(o=>{console.log(o.message),o.stack&&console.log(o.stack)})}catch(o){t(r,o)}};var l=async(r={})=>{try{let e=await r.text();return u(e)}catch(e){t("accounts.request.handleParseResponse",e)}},p=(r="GET",e={})=>{try{return["POST"].includes(r)?JSON.stringify({...e,origin:window?.location?.origin}):null}catch(o){t("accounts.request.getBody",o)}},m=(r=null)=>{try{switch(r){case"authenticated":case"user":return"GET";default:return"POST"}}catch(e){t("accounts.request.getHTTPMethod",e)}},h=(r="",e={})=>{try{if(typeof window.fetch!="undefined")return new Promise((o,n)=>{let d=`${window.location.origin}/api/_accounts/${r}`,i=m(r),w=p(i,e);return fetch(d,{method:i,mode:"cors",headers:{"Content-Type":"application/json"},body:w,credentials:"include"}).then(async s=>{let c=await l(s);return c?.errors?(a(`accounts.${r}`,c.errors),n(c)):o(c)}).catch(s=>(a(`accounts.${r}`,[s]),n({errors:[s]})))})}catch(o){t(`accounts.request.${r}`,o)}};var $=(r={})=>{try{return h("recover-password",r)}catch(e){t("accounts.recoverPassword",e)}};export{$ as default};
